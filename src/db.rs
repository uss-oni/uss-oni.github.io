// Autogenerated
#![allow(non_upper_case_globals)]   
#![allow(dead_code)]
use crate::entity::Entity;

pub struct BuildingMedical{
pub tags: &'static [Tag],
pub thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree,
pub location_rule: LocationRule,
pub material_category: &'static [MaterialCategory],
pub electrity_consummation: Option<&'static [Option<f32>]>,
pub external_heat: Option<f32>,
pub internal_heat: Option<f32>,
pub size: crate::units::Size,
pub hp: i32,
pub high_temp_warning: Option<crate::units::Temperature>,
pub high_temp_fatal: Option<crate::units::Temperature>,
pub mass: crate::units::Kg,
pub flood_threshold: Option<crate::units::Percent>,
pub deconstructable: bool,
pub enableable: bool,
pub decor: Option<crate::units::Decor>,
}
pub static AdvancedDoctorStation:Entity = Entity::new(
crate::lang::Game::AdvancedDoctorStation,
"AdvancedDoctorStation",
6.000,
Params::BuildingMedical(BuildingMedical{
tags: &[
Tag::Clinic,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
electrity_consummation: Some(&[
Some(480.000),
]),
external_heat: Some(0.250),
internal_heat: Some(0.500),
size: crate::units::Size {width: 2, height: 3},
hp: 100,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(200.000),
flood_threshold: Some(crate::units::Percent(0.350)),
deconstructable: true,
enableable: true,
decor: None,
}));
pub static Apothecary:Entity = Entity::new(
crate::lang::Game::Apothecary,
"Apothecary",
4.000,
Params::BuildingMedical(BuildingMedical{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(240.000),
]),
external_heat: Some(0.250),
internal_heat: Some(0.500),
size: crate::units::Size {width: 2, height: 3},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(400.000),
flood_threshold: Some(crate::units::Percent(0.350)),
deconstructable: true,
enableable: true,
decor: None,
}));
pub static DecontaminationShower:Entity = Entity::new(
crate::lang::Game::DecontaminationShower,
"DecontaminationShower",
3.000,
Params::BuildingMedical(BuildingMedical{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
MaterialCategory::Solid(&Lead),
],
electrity_consummation: None,
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 2, height: 4},
hp: 250,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(900.000),
flood_threshold: Some(crate::units::Percent(0.350)),
deconstructable: true,
enableable: true,
decor: Some(crate::units::Decor {value: -20, radius: 4}),
}));
pub static DoctorStation:Entity = Entity::new(
crate::lang::Game::DoctorStation,
"DoctorStation",
5.000,
Params::BuildingMedical(BuildingMedical{
tags: &[
Tag::Clinic,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
electrity_consummation: None,
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 3, height: 2},
hp: 10,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(200.000),
flood_threshold: Some(crate::units::Percent(0.350)),
deconstructable: true,
enableable: true,
decor: None,
}));
pub static Grave:Entity = Entity::new(
crate::lang::Game::Grave,
"Grave",
9.000,
Params::BuildingMedical(BuildingMedical{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
electrity_consummation: None,
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 2},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(800.000),
flood_threshold: None,
deconstructable: true,
enableable: true,
decor: Some(crate::units::Decor {value: 10, radius: 2}),
}));
pub static HandSanitizer:Entity = Entity::new(
crate::lang::Game::HandSanitizer,
"HandSanitizer",
2.000,
Params::BuildingMedical(BuildingMedical{
tags: &[
Tag::WashStation,
Tag::AdvancedWashStation,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: None,
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 3},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(100.000),
flood_threshold: Some(crate::units::Percent(0.350)),
deconstructable: true,
enableable: true,
decor: Some(crate::units::Decor {value: 10, radius: 2}),
}));
pub static MassageTable:Entity = Entity::new(
crate::lang::Game::MassageTable,
"MassageTable",
8.000,
Params::BuildingMedical(BuildingMedical{
tags: &[
Tag::DeStressingBuilding,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
electrity_consummation: Some(&[
Some(240.000),
]),
external_heat: Some(0.125),
internal_heat: Some(0.500),
size: crate::units::Size {width: 2, height: 2},
hp: 10,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(200.000),
flood_threshold: Some(crate::units::Percent(0.350)),
deconstructable: true,
enableable: true,
decor: None,
}));
pub static MedicalCot:Entity = Entity::new(
crate::lang::Game::MedicalCot,
"MedicalCot",
7.000,
Params::BuildingMedical(BuildingMedical{
tags: &[
Tag::Clinic,
Tag::BedType,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
electrity_consummation: None,
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 3, height: 2},
hp: 10,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(200.000),
flood_threshold: Some(crate::units::Percent(0.350)),
deconstructable: true,
enableable: true,
decor: None,
}));
pub static WashBasin:Entity = Entity::new(
crate::lang::Game::WashBasin,
"WashBasin",
0.000,
Params::BuildingMedical(BuildingMedical{
tags: &[
Tag::WashStation,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
electrity_consummation: None,
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 2, height: 3},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(50.000),
flood_threshold: Some(crate::units::Percent(0.350)),
deconstructable: true,
enableable: true,
decor: Some(crate::units::Decor {value: 10, radius: 2}),
}));
pub static WashSink:Entity = Entity::new(
crate::lang::Game::WashSink,
"WashSink",
1.000,
Params::BuildingMedical(BuildingMedical{
tags: &[
Tag::WashStation,
Tag::AdvancedWashStation,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: None,
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 2, height: 3},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(400.000),
flood_threshold: Some(crate::units::Percent(0.350)),
deconstructable: true,
enableable: true,
decor: Some(crate::units::Decor {value: 10, radius: 2}),
}));
pub struct BuildingEquipment{
pub tags: &'static [Tag],
pub thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree,
pub location_rule: LocationRule,
pub material_category: &'static [MaterialCategory],
pub electrity_consummation: Option<&'static [Option<f32>]>,
pub external_heat: Option<f32>,
pub internal_heat: Option<f32>,
pub size: crate::units::Size,
pub hp: i32,
pub high_temp_warning: Option<crate::units::Temperature>,
pub high_temp_fatal: Option<crate::units::Temperature>,
pub mass: crate::units::Kg,
pub flood_threshold: crate::units::Percent,
pub deconstructable: bool,
pub enableable: bool,
pub decor: Option<crate::units::Decor>,
pub rotations: Option<Rotation>,
pub work_time: Option<f32>,
pub only_in_rocket: Option<bool>,
}
pub static AdvancedResearchCenter:Entity = Entity::new(
crate::lang::Game::AdvancedResearchCenter,
"AdvancedResearchCenter",
1.000,
Params::BuildingEquipment(BuildingEquipment{
tags: &[
Tag::ScienceBuilding,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(120.000),
]),
external_heat: Some(0.500),
internal_heat: Some(4.000),
size: crate::units::Size {width: 3, height: 3},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(400.000),
flood_threshold: crate::units::Percent(0.350),
deconstructable: true,
enableable: true,
decor: None,
rotations: None,
work_time: None,
only_in_rocket: None,
}));
pub static ArtifactAnalysisStation:Entity = Entity::new(
crate::lang::Game::ArtifactAnalysisStation,
"ArtifactAnalysisStation",
13.000,
Params::BuildingEquipment(BuildingEquipment{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(480.000),
]),
external_heat: None,
internal_heat: Some(1.000),
size: crate::units::Size {width: 4, height: 4},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(800.000),
flood_threshold: crate::units::Percent(0.350),
deconstructable: true,
enableable: true,
decor: Some(crate::units::Decor {value: -15, radius: 3}),
rotations: None,
work_time: None,
only_in_rocket: None,
}));
pub static ClothingAlterationStation:Entity = Entity::new(
crate::lang::Game::ClothingAlterationStation,
"ClothingAlterationStation",
17.000,
Params::BuildingEquipment(BuildingEquipment{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
electrity_consummation: Some(&[
Some(240.000),
]),
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 4, height: 3},
hp: 100,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(200.000),
flood_threshold: crate::units::Percent(0.350),
deconstructable: true,
enableable: true,
decor: None,
rotations: None,
work_time: None,
only_in_rocket: None,
}));
pub static ClothingFabricator:Entity = Entity::new(
crate::lang::Game::ClothingFabricator,
"ClothingFabricator",
16.000,
Params::BuildingEquipment(BuildingEquipment{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
electrity_consummation: Some(&[
Some(240.000),
]),
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 4, height: 3},
hp: 100,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(200.000),
flood_threshold: crate::units::Percent(0.350),
deconstructable: true,
enableable: true,
decor: None,
rotations: None,
work_time: None,
only_in_rocket: None,
}));
pub static CraftingTable:Entity = Entity::new(
crate::lang::Game::CraftingTable,
"CraftingTable",
15.000,
Params::BuildingEquipment(BuildingEquipment{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(60.000),
]),
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 2, height: 2},
hp: 100,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(200.000),
flood_threshold: crate::units::Percent(0.350),
deconstructable: true,
enableable: true,
decor: None,
rotations: None,
work_time: None,
only_in_rocket: None,
}));
pub static DLC1CosmicResearchCenter:Entity = Entity::new(
crate::lang::Game::DLC1CosmicResearchCenter,
"DLC1CosmicResearchCenter",
4.000,
Params::BuildingEquipment(BuildingEquipment{
tags: &[
Tag::ScienceBuilding,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(120.000),
]),
external_heat: Some(0.500),
internal_heat: Some(4.000),
size: crate::units::Size {width: 4, height: 4},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(400.000),
flood_threshold: crate::units::Percent(0.350),
deconstructable: true,
enableable: true,
decor: None,
rotations: None,
work_time: None,
only_in_rocket: None,
}));
pub static FarmStation:Entity = Entity::new(
crate::lang::Game::FarmStation,
"FarmStation",
7.000,
Params::BuildingEquipment(BuildingEquipment{
tags: &[
Tag::FarmStationType,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: None,
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 2, height: 3},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(400.000),
flood_threshold: crate::units::Percent(0.350),
deconstructable: true,
enableable: true,
decor: None,
rotations: None,
work_time: None,
only_in_rocket: None,
}));
pub static GeneticAnalysisStation:Entity = Entity::new(
crate::lang::Game::GeneticAnalysisStation,
"GeneticAnalysisStation",
8.000,
Params::BuildingEquipment(BuildingEquipment{
tags: &[
Tag::ScienceBuilding,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(480.000),
]),
external_heat: Some(0.500),
internal_heat: Some(4.000),
size: crate::units::Size {width: 7, height: 2},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(400.000),
flood_threshold: crate::units::Percent(0.350),
deconstructable: true,
enableable: true,
decor: None,
rotations: None,
work_time: None,
only_in_rocket: None,
}));
pub static GeoTuner:Entity = Entity::new(
crate::lang::Game::GeoTuner,
"GeoTuner",
5.000,
Params::BuildingEquipment(BuildingEquipment{
tags: &[
Tag::ScienceBuilding,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
electrity_consummation: Some(&[
Some(120.000),
]),
external_heat: Some(0.500),
internal_heat: Some(4.000),
size: crate::units::Size {width: 4, height: 3},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(400.000),
flood_threshold: crate::units::Percent(0.350),
deconstructable: true,
enableable: true,
decor: None,
rotations: Some(Rotation::FlipH),
work_time: None,
only_in_rocket: None,
}));
pub static JetSuitLocker:Entity = Entity::new(
crate::lang::Game::JetSuitLocker,
"JetSuitLocker",
24.000,
Params::BuildingEquipment(BuildingEquipment{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
electrity_consummation: Some(&[
Some(120.000),
]),
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 2, height: 4},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(200.000),
flood_threshold: crate::units::Percent(0.350),
deconstructable: true,
enableable: true,
decor: Some(crate::units::Decor {value: 10, radius: 2}),
rotations: None,
work_time: None,
only_in_rocket: None,
}));
pub static JetSuitMarker:Entity = Entity::new(
crate::lang::Game::JetSuitMarker,
"JetSuitMarker",
23.000,
Params::BuildingEquipment(BuildingEquipment{
tags: &[
Tag::JetSuitBlocker,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
electrity_consummation: None,
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 2, height: 4},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(200.000),
flood_threshold: crate::units::Percent(0.350),
deconstructable: true,
enableable: true,
decor: Some(crate::units::Decor {value: 10, radius: 2}),
rotations: Some(Rotation::FlipH),
work_time: None,
only_in_rocket: None,
}));
pub static LeadSuitLocker:Entity = Entity::new(
crate::lang::Game::LeadSuitLocker,
"LeadSuitLocker",
26.000,
Params::BuildingEquipment(BuildingEquipment{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
electrity_consummation: Some(&[
Some(120.000),
]),
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 2, height: 4},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(100.000),
flood_threshold: crate::units::Percent(0.350),
deconstructable: true,
enableable: true,
decor: Some(crate::units::Decor {value: 10, radius: 2}),
rotations: None,
work_time: None,
only_in_rocket: None,
}));
pub static LeadSuitMarker:Entity = Entity::new(
crate::lang::Game::LeadSuitMarker,
"LeadSuitMarker",
25.000,
Params::BuildingEquipment(BuildingEquipment{
tags: &[
Tag::JetSuitBlocker,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
electrity_consummation: None,
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 2, height: 4},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(100.000),
flood_threshold: crate::units::Percent(0.350),
deconstructable: true,
enableable: true,
decor: Some(crate::units::Decor {value: 10, radius: 2}),
rotations: Some(Rotation::FlipH),
work_time: None,
only_in_rocket: None,
}));
pub static MilkingStation:Entity = Entity::new(
crate::lang::Game::MilkingStation,
"MilkingStation",
11.000,
Params::BuildingEquipment(BuildingEquipment{
tags: &[
Tag::RanchStationType,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
MaterialCategory::Tag(Tag::Plastic),
],
electrity_consummation: None,
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 2, height: 4},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(600.000),
flood_threshold: crate::units::Percent(0.350),
deconstructable: true,
enableable: true,
decor: Some(crate::units::Decor {value: -15, radius: 3}),
rotations: None,
work_time: Some(20.000),
only_in_rocket: None,
}));
pub static MissileFabricator:Entity = Entity::new(
crate::lang::Game::MissileFabricator,
"MissileFabricator",
14.000,
Params::BuildingEquipment(BuildingEquipment{
tags: &[
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
electrity_consummation: Some(&[
Some(960.000),
]),
external_heat: None,
internal_heat: Some(8.000),
size: crate::units::Size {width: 5, height: 4},
hp: 250,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(800.000),
flood_threshold: crate::units::Percent(0.350),
deconstructable: true,
enableable: true,
decor: Some(crate::units::Decor {value: -15, radius: 3}),
rotations: None,
work_time: None,
only_in_rocket: None,
}));
pub static NuclearResearchCenter:Entity = Entity::new(
crate::lang::Game::NuclearResearchCenter,
"NuclearResearchCenter",
2.000,
Params::BuildingEquipment(BuildingEquipment{
tags: &[
Tag::ScienceBuilding,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
electrity_consummation: Some(&[
Some(120.000),
]),
external_heat: Some(0.500),
internal_heat: Some(4.000),
size: crate::units::Size {width: 5, height: 3},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(400.000),
flood_threshold: crate::units::Percent(0.350),
deconstructable: true,
enableable: true,
decor: None,
rotations: None,
work_time: None,
only_in_rocket: None,
}));
pub static OrbitalResearchCenter:Entity = Entity::new(
crate::lang::Game::OrbitalResearchCenter,
"OrbitalResearchCenter",
3.000,
Params::BuildingEquipment(BuildingEquipment{
tags: &[
Tag::ScienceBuilding,
Tag::RocketInteriorBuilding,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Plastic),
],
electrity_consummation: Some(&[
Some(60.000),
]),
external_heat: Some(0.125),
internal_heat: Some(0.500),
size: crate::units::Size {width: 2, height: 3},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(200.000),
flood_threshold: crate::units::Percent(0.350),
deconstructable: true,
enableable: true,
decor: None,
rotations: None,
work_time: None,
only_in_rocket: Some(true),
}));
pub static OxygenMaskLocker:Entity = Entity::new(
crate::lang::Game::OxygenMaskLocker,
"OxygenMaskLocker",
20.000,
Params::BuildingEquipment(BuildingEquipment{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: None,
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 2},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(100.000),
flood_threshold: crate::units::Percent(0.350),
deconstructable: true,
enableable: true,
decor: Some(crate::units::Decor {value: 10, radius: 2}),
rotations: None,
work_time: None,
only_in_rocket: None,
}));
pub static OxygenMaskMarker:Entity = Entity::new(
crate::lang::Game::OxygenMaskMarker,
"OxygenMaskMarker",
19.000,
Params::BuildingEquipment(BuildingEquipment{
tags: &[
Tag::JetSuitBlocker,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: None,
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 2},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(100.000),
flood_threshold: crate::units::Percent(0.350),
deconstructable: true,
enableable: true,
decor: Some(crate::units::Decor {value: 10, radius: 2}),
rotations: Some(Rotation::FlipH),
work_time: None,
only_in_rocket: None,
}));
pub static PowerControlStation:Entity = Entity::new(
crate::lang::Game::PowerControlStation,
"PowerControlStation",
6.000,
Params::BuildingEquipment(BuildingEquipment{
tags: &[
Tag::PowerStation,
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
electrity_consummation: None,
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 2, height: 4},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(200.000),
flood_threshold: crate::units::Percent(0.350),
deconstructable: true,
enableable: true,
decor: None,
rotations: None,
work_time: None,
only_in_rocket: None,
}));
pub static RanchStation:Entity = Entity::new(
crate::lang::Game::RanchStation,
"RanchStation",
9.000,
Params::BuildingEquipment(BuildingEquipment{
tags: &[
Tag::RanchStationType,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: None,
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 2, height: 3},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(400.000),
flood_threshold: crate::units::Percent(0.350),
deconstructable: true,
enableable: true,
decor: None,
rotations: None,
work_time: Some(12.000),
only_in_rocket: None,
}));
pub static ResearchCenter:Entity = Entity::new(
crate::lang::Game::ResearchCenter,
"ResearchCenter",
0.000,
Params::BuildingEquipment(BuildingEquipment{
tags: &[
Tag::ScienceBuilding,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(60.000),
]),
external_heat: Some(0.125),
internal_heat: Some(1.000),
size: crate::units::Size {width: 2, height: 2},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(400.000),
flood_threshold: crate::units::Percent(0.350),
deconstructable: true,
enableable: true,
decor: None,
rotations: None,
work_time: None,
only_in_rocket: None,
}));
pub static ResetSkillsStation:Entity = Entity::new(
crate::lang::Game::ResetSkillsStation,
"ResetSkillsStation",
12.000,
Params::BuildingEquipment(BuildingEquipment{
tags: &[
Tag::IndustrialMachinery,
Tag::NotRoomAssignable,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(480.000),
]),
external_heat: Some(0.500),
internal_heat: Some(4.000),
size: crate::units::Size {width: 3, height: 3},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(400.000),
flood_threshold: crate::units::Percent(0.350),
deconstructable: true,
enableable: true,
decor: None,
rotations: None,
work_time: None,
only_in_rocket: None,
}));
pub static ShearingStation:Entity = Entity::new(
crate::lang::Game::ShearingStation,
"ShearingStation",
10.000,
Params::BuildingEquipment(BuildingEquipment{
tags: &[
Tag::RanchStationType,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
electrity_consummation: Some(&[
Some(60.000),
]),
external_heat: Some(0.125),
internal_heat: Some(0.500),
size: crate::units::Size {width: 3, height: 3},
hp: 100,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(400.000),
flood_threshold: crate::units::Percent(0.350),
deconstructable: true,
enableable: true,
decor: None,
rotations: None,
work_time: Some(12.000),
only_in_rocket: None,
}));
pub static SuitFabricator:Entity = Entity::new(
crate::lang::Game::SuitFabricator,
"SuitFabricator",
18.000,
Params::BuildingEquipment(BuildingEquipment{
tags: &[
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
electrity_consummation: Some(&[
Some(480.000),
]),
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 4, height: 3},
hp: 100,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(400.000),
flood_threshold: crate::units::Percent(0.350),
deconstructable: true,
enableable: true,
decor: None,
rotations: None,
work_time: None,
only_in_rocket: None,
}));
pub static SuitLocker:Entity = Entity::new(
crate::lang::Game::SuitLocker,
"SuitLocker",
22.000,
Params::BuildingEquipment(BuildingEquipment{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
electrity_consummation: Some(&[
Some(120.000),
]),
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 3},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(100.000),
flood_threshold: crate::units::Percent(0.350),
deconstructable: true,
enableable: true,
decor: Some(crate::units::Decor {value: 10, radius: 2}),
rotations: None,
work_time: None,
only_in_rocket: None,
}));
pub static SuitMarker:Entity = Entity::new(
crate::lang::Game::SuitMarker,
"SuitMarker",
21.000,
Params::BuildingEquipment(BuildingEquipment{
tags: &[
Tag::JetSuitBlocker,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
electrity_consummation: None,
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 3},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(100.000),
flood_threshold: crate::units::Percent(0.350),
deconstructable: true,
enableable: true,
decor: Some(crate::units::Decor {value: 10, radius: 2}),
rotations: Some(Rotation::FlipH),
work_time: None,
only_in_rocket: None,
}));
pub struct BuildingFood{
pub tags: &'static [Tag],
pub thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree,
pub location_rule: LocationRule,
pub material_category: &'static [MaterialCategory],
pub rotations: Option<Rotation>,
pub size: crate::units::Size,
pub hp: i32,
pub high_temp_warning: Option<crate::units::Temperature>,
pub high_temp_fatal: Option<crate::units::Temperature>,
pub mass: crate::units::Kg,
pub flood_threshold: Option<crate::units::Percent>,
pub decor: Option<crate::units::Decor>,
pub deconstructable: bool,
pub enableable: Option<bool>,
pub electrity_consummation: Option<&'static [Option<f32>]>,
pub external_heat: Option<f32>,
pub internal_heat: Option<f32>,
pub trap_critters: Option<&'static [Tag]>,
}
pub static AirBorneCritterCondo:Entity = Entity::new(
crate::lang::Game::AirBorneCritterCondo,
"AirBorneCritterCondo",
24.000,
Params::BuildingFood(BuildingFood{
tags: &[
Tag::RanchStationType,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnCeiling,
material_category: &[
MaterialCategory::Tag(Tag::Plastic),
],
rotations: Some(Rotation::FlipH),
size: crate::units::Size {width: 3, height: 3},
hp: 100,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(200.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: 20, radius: 4}),
deconstructable: true,
enableable: Some(true),
electrity_consummation: None,
external_heat: None,
internal_heat: None,
trap_critters: None,
}));
pub static CookingStation:Entity = Entity::new(
crate::lang::Game::CookingStation,
"CookingStation",
1.000,
Params::BuildingFood(BuildingFood{
tags: &[
Tag::CookTop,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: None,
size: crate::units::Size {width: 3, height: 2},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(400.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: None,
deconstructable: true,
enableable: Some(true),
electrity_consummation: Some(&[
Some(60.000),
]),
external_heat: Some(0.500),
internal_heat: Some(4.000),
trap_critters: None,
}));
pub static CreatureFeeder:Entity = Entity::new(
crate::lang::Game::CreatureFeeder,
"CreatureFeeder",
14.000,
Params::BuildingFood(BuildingFood{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: None,
size: crate::units::Size {width: 1, height: 2},
hp: 100,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(200.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: -15, radius: 3}),
deconstructable: true,
enableable: Some(true),
electrity_consummation: None,
external_heat: None,
internal_heat: None,
trap_critters: None,
}));
pub static CritterCondo:Entity = Entity::new(
crate::lang::Game::CritterCondo,
"CritterCondo",
22.000,
Params::BuildingFood(BuildingFood{
tags: &[
Tag::RanchStationType,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
MaterialCategory::Tag(Tag::BuildingFiber),
],
rotations: Some(Rotation::FlipH),
size: crate::units::Size {width: 3, height: 3},
hp: 100,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(210.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: 20, radius: 4}),
deconstructable: true,
enableable: Some(true),
electrity_consummation: None,
external_heat: None,
internal_heat: None,
trap_critters: None,
}));
pub static CritterDropOff:Entity = Entity::new(
crate::lang::Game::CritterDropOff,
"CritterDropOff",
12.000,
Params::BuildingFood(BuildingFood{
tags: &[
Tag::CreatureRelocator,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: None,
size: crate::units::Size {width: 1, height: 3},
hp: 10,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(50.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: -15, radius: 3}),
deconstructable: true,
enableable: Some(true),
electrity_consummation: None,
external_heat: None,
internal_heat: None,
trap_critters: None,
}));
pub static CritterPickUp:Entity = Entity::new(
crate::lang::Game::CritterPickUp,
"CritterPickUp",
11.000,
Params::BuildingFood(BuildingFood{
tags: &[
Tag::CreatureRelocator,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: None,
size: crate::units::Size {width: 1, height: 3},
hp: 10,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(50.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: -15, radius: 3}),
deconstructable: true,
enableable: Some(true),
electrity_consummation: None,
external_heat: None,
internal_heat: None,
trap_critters: None,
}));
pub static EggCracker:Entity = Entity::new(
crate::lang::Game::EggCracker,
"EggCracker",
18.000,
Params::BuildingFood(BuildingFood{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: None,
size: crate::units::Size {width: 2, height: 2},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(50.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
deconstructable: true,
enableable: Some(true),
electrity_consummation: None,
external_heat: None,
internal_heat: None,
trap_critters: None,
}));
pub static EggIncubator:Entity = Entity::new(
crate::lang::Game::EggIncubator,
"EggIncubator",
17.000,
Params::BuildingFood(BuildingFood{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
size: crate::units::Size {width: 2, height: 3},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(363.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(200.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
deconstructable: true,
enableable: Some(true),
electrity_consummation: Some(&[
Some(240.000),
]),
external_heat: Some(0.500),
internal_heat: Some(4.000),
trap_critters: None,
}));
pub static FarmTile:Entity = Entity::new(
crate::lang::Game::FarmTile,
"FarmTile",
7.000,
Params::BuildingFood(BuildingFood{
tags: &[
Tag::FarmTiles,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Tile,
material_category: &[
MaterialCategory::Tag(Tag::Farmable),
],
rotations: Some(Rotation::FlipV),
size: crate::units::Size {width: 1, height: 1},
hp: 100,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(100.000),
flood_threshold: None,
decor: None,
deconstructable: true,
enableable: None,
electrity_consummation: None,
external_heat: None,
internal_heat: None,
trap_critters: None,
}));
pub static FishDeliveryPoint:Entity = Entity::new(
crate::lang::Game::FishDeliveryPoint,
"FishDeliveryPoint",
13.000,
Params::BuildingFood(BuildingFood{
tags: &[
Tag::CreatureRelocator,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: None,
size: crate::units::Size {width: 1, height: 3},
hp: 10,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(50.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: -15, radius: 3}),
deconstructable: true,
enableable: Some(true),
electrity_consummation: None,
external_heat: None,
internal_heat: None,
trap_critters: None,
}));
pub static FishFeeder:Entity = Entity::new(
crate::lang::Game::FishFeeder,
"FishFeeder",
15.000,
Params::BuildingFood(BuildingFood{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: None,
size: crate::units::Size {width: 1, height: 3},
hp: 100,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(200.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: -15, radius: 3}),
deconstructable: true,
enableable: Some(true),
electrity_consummation: None,
external_heat: None,
internal_heat: None,
trap_critters: None,
}));
pub static FoodDehydrator:Entity = Entity::new(
crate::lang::Game::FoodDehydrator,
"FoodDehydrator",
4.000,
Params::BuildingFood(BuildingFood{
tags: &[
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
MaterialCategory::Tag(Tag::Plastic),
],
rotations: None,
size: crate::units::Size {width: 3, height: 3},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(300.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: None,
deconstructable: true,
enableable: Some(true),
electrity_consummation: None,
external_heat: None,
internal_heat: Some(4.000),
trap_critters: None,
}));
pub static FoodRehydrator:Entity = Entity::new(
crate::lang::Game::FoodRehydrator,
"FoodRehydrator",
5.000,
Params::BuildingFood(BuildingFood{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
MaterialCategory::Tag(Tag::Plastic),
],
rotations: None,
size: crate::units::Size {width: 1, height: 2},
hp: 10,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(150.000),
flood_threshold: None,
decor: Some(crate::units::Decor {value: 5, radius: 1}),
deconstructable: true,
enableable: Some(true),
electrity_consummation: Some(&[
Some(60.000),
]),
external_heat: None,
internal_heat: Some(0.500),
trap_critters: None,
}));
pub static GourmetCookingStation:Entity = Entity::new(
crate::lang::Game::GourmetCookingStation,
"GourmetCookingStation",
2.000,
Params::BuildingFood(BuildingFood{
tags: &[
Tag::CookTop,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: None,
size: crate::units::Size {width: 3, height: 3},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(400.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: None,
deconstructable: true,
enableable: Some(true),
electrity_consummation: Some(&[
Some(240.000),
]),
external_heat: Some(1.000),
internal_heat: Some(8.000),
trap_critters: None,
}));
pub static HydroponicFarm:Entity = Entity::new(
crate::lang::Game::HydroponicFarm,
"HydroponicFarm",
8.000,
Params::BuildingFood(BuildingFood{
tags: &[
Tag::FarmTiles,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Tile,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: Some(Rotation::FlipV),
size: crate::units::Size {width: 1, height: 1},
hp: 100,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(100.000),
flood_threshold: None,
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: Some(true),
electrity_consummation: None,
external_heat: None,
internal_heat: None,
trap_critters: None,
}));
pub static MicrobeMusher:Entity = Entity::new(
crate::lang::Game::MicrobeMusher,
"MicrobeMusher",
0.000,
Params::BuildingFood(BuildingFood{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: None,
size: crate::units::Size {width: 2, height: 3},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(400.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: -15, radius: 3}),
deconstructable: true,
enableable: Some(true),
electrity_consummation: Some(&[
Some(240.000),
]),
external_heat: Some(0.500),
internal_heat: Some(2.000),
trap_critters: None,
}));
pub static MilkFeeder:Entity = Entity::new(
crate::lang::Game::MilkFeeder,
"MilkFeeder",
16.000,
Params::BuildingFood(BuildingFood{
tags: &[
Tag::RanchStationType,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: Some(Rotation::FlipH),
size: crate::units::Size {width: 3, height: 3},
hp: 100,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(400.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: -15, radius: 3}),
deconstructable: true,
enableable: Some(true),
electrity_consummation: None,
external_heat: None,
internal_heat: None,
trap_critters: None,
}));
pub static PlanterBox:Entity = Entity::new(
crate::lang::Game::PlanterBox,
"PlanterBox",
6.000,
Params::BuildingFood(BuildingFood{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Farmable),
],
rotations: None,
size: crate::units::Size {width: 1, height: 1},
hp: 10,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(100.000),
flood_threshold: None,
decor: Some(crate::units::Decor {value: -10, radius: 2}),
deconstructable: true,
enableable: Some(true),
electrity_consummation: None,
external_heat: None,
internal_heat: None,
trap_critters: None,
}));
pub static RationBox:Entity = Entity::new(
crate::lang::Game::RationBox,
"RationBox",
9.000,
Params::BuildingFood(BuildingFood{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
rotations: None,
size: crate::units::Size {width: 2, height: 2},
hp: 10,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(400.000),
flood_threshold: None,
decor: Some(crate::units::Decor {value: 5, radius: 1}),
deconstructable: true,
enableable: Some(true),
electrity_consummation: None,
external_heat: None,
internal_heat: None,
trap_critters: None,
}));
pub static Refrigerator:Entity = Entity::new(
crate::lang::Game::Refrigerator,
"Refrigerator",
10.000,
Params::BuildingFood(BuildingFood{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
rotations: None,
size: crate::units::Size {width: 1, height: 2},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(400.000),
flood_threshold: None,
decor: Some(crate::units::Decor {value: 10, radius: 2}),
deconstructable: true,
enableable: Some(true),
electrity_consummation: Some(&[
Some(120.000),
Some(20.000),
]),
external_heat: None,
internal_heat: Some(0.125),
trap_critters: None,
}));
pub static SpiceGrinder:Entity = Entity::new(
crate::lang::Game::SpiceGrinder,
"SpiceGrinder",
3.000,
Params::BuildingFood(BuildingFood{
tags: &[
Tag::SpiceStation,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: None,
size: crate::units::Size {width: 2, height: 3},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(400.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: None,
deconstructable: true,
enableable: Some(true),
electrity_consummation: None,
external_heat: None,
internal_heat: None,
trap_critters: None,
}));
pub static UnderwaterCritterCondo:Entity = Entity::new(
crate::lang::Game::UnderwaterCritterCondo,
"UnderwaterCritterCondo",
23.000,
Params::BuildingFood(BuildingFood{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Plastic),
],
rotations: Some(Rotation::FlipH),
size: crate::units::Size {width: 3, height: 3},
hp: 100,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(200.000),
flood_threshold: None,
decor: Some(crate::units::Decor {value: 20, radius: 4}),
deconstructable: true,
enableable: Some(true),
electrity_consummation: None,
external_heat: None,
internal_heat: None,
trap_critters: None,
}));
pub static CreatureAirTrap:Entity = Entity::new(
crate::lang::Game::CreatureAirTrap,
"CreatureAirTrap",
21.000,
Params::BuildingFood(BuildingFood{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: None,
size: crate::units::Size {width: 1, height: 2},
hp: 10,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(50.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: -15, radius: 3}),
deconstructable: true,
enableable: Some(true),
electrity_consummation: None,
external_heat: None,
internal_heat: None,
trap_critters: Some(&[
Tag::Flyer,
]),
}));
pub static CreatureGroundTrap:Entity = Entity::new(
crate::lang::Game::CreatureGroundTrap,
"CreatureGroundTrap",
19.000,
Params::BuildingFood(BuildingFood{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: None,
size: crate::units::Size {width: 2, height: 2},
hp: 10,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(200.000),
flood_threshold: None,
decor: Some(crate::units::Decor {value: -15, radius: 3}),
deconstructable: true,
enableable: Some(true),
electrity_consummation: None,
external_heat: None,
internal_heat: None,
trap_critters: Some(&[
Tag::Walker,
Tag::Hoverer,
Tag::Swimmer,
]),
}));
pub static WaterTrap:Entity = Entity::new(
crate::lang::Game::WaterTrap,
"WaterTrap",
20.000,
Params::BuildingFood(BuildingFood{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: None,
size: crate::units::Size {width: 1, height: 2},
hp: 10,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(200.000),
flood_threshold: None,
decor: Some(crate::units::Decor {value: -15, radius: 3}),
deconstructable: true,
enableable: Some(true),
electrity_consummation: None,
external_heat: None,
internal_heat: None,
trap_critters: Some(&[
Tag::Swimmer,
]),
}));
pub struct BuildingUtilities{
pub tags: &'static [Tag],
pub thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree,
pub location_rule: LocationRule,
pub material_category: &'static [MaterialCategory],
pub rotations: Option<Rotation>,
pub electrity_consummation: Option<&'static [Option<f32>]>,
pub size: crate::units::Size,
pub hp: i32,
pub high_temp_warning: Option<crate::units::Temperature>,
pub high_temp_fatal: Option<crate::units::Temperature>,
pub mass: crate::units::Kg,
pub flood_threshold: Option<crate::units::Percent>,
pub deconstructable: bool,
pub enableable: bool,
pub external_heat: Option<f32>,
pub internal_heat: Option<f32>,
pub decor: Option<crate::units::Decor>,
}
pub static AirConditioner:Entity = Entity::new(
crate::lang::Game::AirConditioner,
"AirConditioner",
4.000,
Params::BuildingUtilities(BuildingUtilities{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(5.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: Some(Rotation::FlipH),
electrity_consummation: Some(&[
Some(240.000),
]),
size: crate::units::Size {width: 2, height: 2},
hp: 100,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(200.000),
flood_threshold: Some(crate::units::Percent(0.350)),
deconstructable: true,
enableable: true,
external_heat: None,
internal_heat: None,
decor: None,
}));
pub static IceCooledFan:Entity = Entity::new(
crate::lang::Game::IceCooledFan,
"IceCooledFan",
2.000,
Params::BuildingUtilities(BuildingUtilities{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: None,
electrity_consummation: None,
size: crate::units::Size {width: 2, height: 2},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(400.000),
flood_threshold: Some(crate::units::Percent(0.350)),
deconstructable: true,
enableable: true,
external_heat: Some(-24.000),
internal_heat: Some(-8.000),
decor: None,
}));
pub static IceMachine:Entity = Entity::new(
crate::lang::Game::IceMachine,
"IceMachine",
3.000,
Params::BuildingUtilities(BuildingUtilities{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: None,
electrity_consummation: Some(&[
Some(60.000),
]),
size: crate::units::Size {width: 2, height: 3},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(400.000),
flood_threshold: Some(crate::units::Percent(0.350)),
deconstructable: true,
enableable: true,
external_heat: Some(4.000),
internal_heat: Some(12.000),
decor: None,
}));
pub static LiquidConditioner:Entity = Entity::new(
crate::lang::Game::LiquidConditioner,
"LiquidConditioner",
5.000,
Params::BuildingUtilities(BuildingUtilities{
tags: &[
Tag::OverlayBackLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: Some(Rotation::FlipH),
electrity_consummation: Some(&[
Some(1200.000),
]),
size: crate::units::Size {width: 2, height: 2},
hp: 100,
high_temp_warning: Some(crate::units::Temperature(398.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(1200.000),
flood_threshold: None,
deconstructable: true,
enableable: true,
external_heat: None,
internal_heat: None,
decor: None,
}));
pub static LiquidHeater:Entity = Entity::new(
crate::lang::Game::LiquidHeater,
"LiquidHeater",
1.000,
Params::BuildingUtilities(BuildingUtilities{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: None,
electrity_consummation: Some(&[
Some(960.000),
]),
size: crate::units::Size {width: 4, height: 1},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(398.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(400.000),
flood_threshold: None,
deconstructable: true,
enableable: true,
external_heat: Some(4000.000),
internal_heat: Some(64.000),
decor: Some(crate::units::Decor {value: -10, radius: 2}),
}));
pub static OilWellCap:Entity = Entity::new(
crate::lang::Game::OilWellCap,
"OilWellCap",
7.000,
Params::BuildingUtilities(BuildingUtilities{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::BuildingAttachPoint,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
electrity_consummation: Some(&[
Some(240.000),
]),
size: crate::units::Size {width: 4, height: 4},
hp: 100,
high_temp_warning: Some(crate::units::Temperature(2273.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(200.000),
flood_threshold: None,
deconstructable: true,
enableable: true,
external_heat: None,
internal_heat: Some(2.000),
decor: None,
}));
pub static OreScrubber:Entity = Entity::new(
crate::lang::Game::OreScrubber,
"OreScrubber",
6.000,
Params::BuildingUtilities(BuildingUtilities{
tags: &[
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: None,
electrity_consummation: None,
size: crate::units::Size {width: 3, height: 3},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(200.000),
flood_threshold: Some(crate::units::Percent(0.350)),
deconstructable: true,
enableable: true,
external_heat: None,
internal_heat: None,
decor: Some(crate::units::Decor {value: 10, radius: 2}),
}));
pub static SpaceHeater:Entity = Entity::new(
crate::lang::Game::SpaceHeater,
"SpaceHeater",
0.000,
Params::BuildingUtilities(BuildingUtilities{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: None,
electrity_consummation: Some(&[
Some(120.000),
]),
size: crate::units::Size {width: 2, height: 2},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(398.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(400.000),
flood_threshold: Some(crate::units::Percent(0.350)),
deconstructable: true,
enableable: true,
external_heat: Some(2.000),
internal_heat: Some(16.000),
decor: Some(crate::units::Decor {value: 10, radius: 2}),
}));
pub static SweepBotStation:Entity = Entity::new(
crate::lang::Game::SweepBotStation,
"SweepBotStation",
9.000,
Params::BuildingUtilities(BuildingUtilities{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
electrity_consummation: Some(&[
Some(240.000),
]),
size: crate::units::Size {width: 2, height: 2},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(75.000),
flood_threshold: None,
deconstructable: true,
enableable: true,
external_heat: None,
internal_heat: Some(1.000),
decor: Some(crate::units::Decor {value: -10, radius: 2}),
}));
pub static ThermalBlock:Entity = Entity::new(
crate::lang::Game::ThermalBlock,
"ThermalBlock",
8.000,
Params::BuildingUtilities(BuildingUtilities{
tags: &[
Tag::Backwall,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::NotInTiles,
material_category: &[
MaterialCategory::Tag(Tag::BuildableAny),
],
rotations: None,
electrity_consummation: None,
size: crate::units::Size {width: 1, height: 1},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(800.000),
flood_threshold: None,
deconstructable: true,
enableable: true,
external_heat: None,
internal_heat: None,
decor: None,
}));
pub struct BuildingOxygen{
pub tags: &'static [Tag],
pub thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree,
pub location_rule: LocationRule,
pub material_category: &'static [MaterialCategory],
pub electrity_consummation: Option<&'static [Option<f32>]>,
pub external_heat: Option<f32>,
pub internal_heat: Option<f32>,
pub size: crate::units::Size,
pub hp: i32,
pub mass: crate::units::Kg,
pub flood_threshold: Option<crate::units::Percent>,
pub deconstructable: bool,
pub enableable: bool,
pub high_temp_warning: Option<crate::units::Temperature>,
pub high_temp_fatal: Option<crate::units::Temperature>,
pub decor: Option<crate::units::Decor>,
pub rotations: Option<Rotation>,
}
pub static AirFilter:Entity = Entity::new(
crate::lang::Game::AirFilter,
"AirFilter",
3.000,
Params::BuildingOxygen(BuildingOxygen{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
electrity_consummation: Some(&[
Some(5.000),
]),
external_heat: Some(0.125),
internal_heat: Some(0.500),
size: crate::units::Size {width: 1, height: 1},
hp: 30,
mass: crate::units::Kg(100.000),
flood_threshold: Some(crate::units::Percent(0.350)),
deconstructable: true,
enableable: true,
high_temp_warning: None,
high_temp_fatal: None,
decor: None,
rotations: None,
}));
pub static AlgaeHabitat:Entity = Entity::new(
crate::lang::Game::AlgaeHabitat,
"AlgaeHabitat",
2.000,
Params::BuildingOxygen(BuildingOxygen{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Farmable),
],
electrity_consummation: None,
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 2},
hp: 30,
mass: crate::units::Kg(400.000),
flood_threshold: None,
deconstructable: true,
enableable: true,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
decor: Some(crate::units::Decor {value: -10, radius: 2}),
rotations: None,
}));
pub static CO2Scrubber:Entity = Entity::new(
crate::lang::Game::CO2Scrubber,
"CO2Scrubber",
4.000,
Params::BuildingOxygen(BuildingOxygen{
tags: &[
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(120.000),
]),
external_heat: None,
internal_heat: Some(1.000),
size: crate::units::Size {width: 2, height: 2},
hp: 30,
mass: crate::units::Kg(100.000),
flood_threshold: Some(crate::units::Percent(0.350)),
deconstructable: true,
enableable: true,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
decor: Some(crate::units::Decor {value: -10, radius: 2}),
rotations: Some(Rotation::FlipH),
}));
pub static Electrolyzer:Entity = Entity::new(
crate::lang::Game::Electrolyzer,
"Electrolyzer",
5.000,
Params::BuildingOxygen(BuildingOxygen{
tags: &[
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(120.000),
]),
external_heat: Some(0.250),
internal_heat: Some(1.000),
size: crate::units::Size {width: 2, height: 2},
hp: 30,
mass: crate::units::Kg(200.000),
flood_threshold: Some(crate::units::Percent(0.350)),
deconstructable: true,
enableable: true,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
decor: Some(crate::units::Decor {value: -10, radius: 2}),
rotations: None,
}));
pub static MineralDeoxidizer:Entity = Entity::new(
crate::lang::Game::MineralDeoxidizer,
"MineralDeoxidizer",
0.000,
Params::BuildingOxygen(BuildingOxygen{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(120.000),
]),
external_heat: Some(0.500),
internal_heat: Some(1.000),
size: crate::units::Size {width: 1, height: 2},
hp: 30,
mass: crate::units::Kg(200.000),
flood_threshold: Some(crate::units::Percent(0.350)),
deconstructable: true,
enableable: true,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
decor: Some(crate::units::Decor {value: -10, radius: 2}),
rotations: None,
}));
pub static RustDeoxidizer:Entity = Entity::new(
crate::lang::Game::RustDeoxidizer,
"RustDeoxidizer",
6.000,
Params::BuildingOxygen(BuildingOxygen{
tags: &[
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(60.000),
]),
external_heat: Some(0.125),
internal_heat: Some(1.000),
size: crate::units::Size {width: 2, height: 3},
hp: 30,
mass: crate::units::Kg(200.000),
flood_threshold: Some(crate::units::Percent(0.350)),
deconstructable: true,
enableable: true,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
decor: Some(crate::units::Decor {value: -10, radius: 2}),
rotations: None,
}));
pub static SublimationStation:Entity = Entity::new(
crate::lang::Game::SublimationStation,
"SublimationStation",
1.000,
Params::BuildingOxygen(BuildingOxygen{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(60.000),
]),
external_heat: Some(0.500),
internal_heat: Some(1.000),
size: crate::units::Size {width: 2, height: 1},
hp: 30,
mass: crate::units::Kg(200.000),
flood_threshold: Some(crate::units::Percent(0.350)),
deconstructable: true,
enableable: true,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
decor: Some(crate::units::Decor {value: -10, radius: 2}),
rotations: None,
}));
pub struct BuildingRefining{
pub tags: &'static [Tag],
pub thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree,
pub location_rule: LocationRule,
pub material_category: &'static [MaterialCategory],
pub electrity_consummation: Option<&'static [Option<f32>]>,
pub external_heat: Option<f32>,
pub internal_heat: f32,
pub size: crate::units::Size,
pub hp: i32,
pub mass: crate::units::Kg,
pub flood_threshold: Option<crate::units::Percent>,
pub decor: Option<crate::units::Decor>,
pub deconstructable: bool,
pub enableable: bool,
pub rotations: Option<Rotation>,
pub high_temp_warning: Option<crate::units::Temperature>,
pub high_temp_fatal: Option<crate::units::Temperature>,
}
pub static AlgaeDistillery:Entity = Entity::new(
crate::lang::Game::AlgaeDistillery,
"AlgaeDistillery",
4.000,
Params::BuildingRefining(BuildingRefining{
tags: &[
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(120.000),
]),
external_heat: Some(0.500),
internal_heat: 1.000,
size: crate::units::Size {width: 3, height: 4},
hp: 100,
mass: crate::units::Kg(200.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: -10, radius: 2}),
deconstructable: true,
enableable: true,
rotations: None,
high_temp_warning: None,
high_temp_fatal: None,
}));
pub static Chlorinator:Entity = Entity::new(
crate::lang::Game::Chlorinator,
"Chlorinator",
14.000,
Params::BuildingRefining(BuildingRefining{
tags: &[
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
electrity_consummation: Some(&[
Some(480.000),
]),
external_heat: Some(1.000),
internal_heat: 2.000,
size: crate::units::Size {width: 3, height: 3},
hp: 100,
mass: crate::units::Kg(800.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: -15, radius: 3}),
deconstructable: true,
enableable: true,
rotations: Some(Rotation::FlipH),
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
}));
pub static Compost:Entity = Entity::new(
crate::lang::Game::Compost,
"Compost",
0.000,
Params::BuildingRefining(BuildingRefining{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
electrity_consummation: None,
external_heat: Some(0.125),
internal_heat: 1.000,
size: crate::units::Size {width: 2, height: 2},
hp: 30,
mass: crate::units::Kg(800.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: -20, radius: 4}),
deconstructable: true,
enableable: true,
rotations: None,
high_temp_warning: None,
high_temp_fatal: None,
}));
pub static DiamondPress:Entity = Entity::new(
crate::lang::Game::DiamondPress,
"DiamondPress",
16.000,
Params::BuildingRefining(BuildingRefining{
tags: &[
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(240.000),
]),
external_heat: None,
internal_heat: 16.000,
size: crate::units::Size {width: 3, height: 5},
hp: 30,
mass: crate::units::Kg(800.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: -15, radius: 3}),
deconstructable: true,
enableable: true,
rotations: None,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
}));
pub static EthanolDistillery:Entity = Entity::new(
crate::lang::Game::EthanolDistillery,
"EthanolDistillery",
5.000,
Params::BuildingRefining(BuildingRefining{
tags: &[
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(240.000),
]),
external_heat: Some(0.500),
internal_heat: 4.000,
size: crate::units::Size {width: 4, height: 3},
hp: 100,
mass: crate::units::Kg(200.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: -10, radius: 2}),
deconstructable: true,
enableable: true,
rotations: None,
high_temp_warning: None,
high_temp_fatal: None,
}));
pub static FertilizerMaker:Entity = Entity::new(
crate::lang::Game::FertilizerMaker,
"FertilizerMaker",
3.000,
Params::BuildingRefining(BuildingRefining{
tags: &[
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(120.000),
]),
external_heat: Some(1.000),
internal_heat: 2.000,
size: crate::units::Size {width: 4, height: 3},
hp: 30,
mass: crate::units::Kg(200.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: -15, radius: 3}),
deconstructable: true,
enableable: true,
rotations: None,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
}));
pub static GlassForge:Entity = Entity::new(
crate::lang::Game::GlassForge,
"GlassForge",
10.000,
Params::BuildingRefining(BuildingRefining{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
electrity_consummation: Some(&[
Some(1200.000),
]),
external_heat: None,
internal_heat: 16.000,
size: crate::units::Size {width: 5, height: 4},
hp: 30,
mass: crate::units::Kg(800.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: -15, radius: 3}),
deconstructable: true,
enableable: true,
rotations: None,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
}));
pub static Kiln:Entity = Entity::new(
crate::lang::Game::Kiln,
"Kiln",
7.000,
Params::BuildingRefining(BuildingRefining{
tags: &[
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: None,
external_heat: Some(16.000),
internal_heat: 4.000,
size: crate::units::Size {width: 2, height: 2},
hp: 100,
mass: crate::units::Kg(200.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: -10, radius: 2}),
deconstructable: true,
enableable: true,
rotations: None,
high_temp_warning: None,
high_temp_fatal: None,
}));
pub static MetalRefinery:Entity = Entity::new(
crate::lang::Game::MetalRefinery,
"MetalRefinery",
9.000,
Params::BuildingRefining(BuildingRefining{
tags: &[
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
electrity_consummation: Some(&[
Some(1200.000),
]),
external_heat: None,
internal_heat: 16.000,
size: crate::units::Size {width: 3, height: 4},
hp: 30,
mass: crate::units::Kg(800.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: -15, radius: 3}),
deconstructable: true,
enableable: true,
rotations: None,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
}));
pub static MilkFatSeparator:Entity = Entity::new(
crate::lang::Game::MilkFatSeparator,
"MilkFatSeparator",
17.000,
Params::BuildingRefining(BuildingRefining{
tags: &[
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
electrity_consummation: Some(&[
Some(480.000),
]),
external_heat: None,
internal_heat: 8.000,
size: crate::units::Size {width: 4, height: 4},
hp: 100,
mass: crate::units::Kg(800.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: -15, radius: 3}),
deconstructable: true,
enableable: true,
rotations: Some(Rotation::FlipH),
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
}));
pub static MilkPress:Entity = Entity::new(
crate::lang::Game::MilkPress,
"MilkPress",
18.000,
Params::BuildingRefining(BuildingRefining{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
electrity_consummation: None,
external_heat: None,
internal_heat: 2.000,
size: crate::units::Size {width: 2, height: 3},
hp: 100,
mass: crate::units::Kg(400.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: -10, radius: 2}),
deconstructable: true,
enableable: true,
rotations: None,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
}));
pub static OilRefinery:Entity = Entity::new(
crate::lang::Game::OilRefinery,
"OilRefinery",
11.000,
Params::BuildingRefining(BuildingRefining{
tags: &[
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(480.000),
]),
external_heat: Some(2.000),
internal_heat: 8.000,
size: crate::units::Size {width: 4, height: 4},
hp: 30,
mass: crate::units::Kg(200.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: -10, radius: 2}),
deconstructable: true,
enableable: true,
rotations: Some(Rotation::FlipH),
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
}));
pub static OxyliteRefinery:Entity = Entity::new(
crate::lang::Game::OxyliteRefinery,
"OxyliteRefinery",
13.000,
Params::BuildingRefining(BuildingRefining{
tags: &[
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
MaterialCategory::Tag(Tag::Plastic),
],
electrity_consummation: Some(&[
Some(1200.000),
]),
external_heat: Some(8.000),
internal_heat: 4.000,
size: crate::units::Size {width: 3, height: 4},
hp: 100,
mass: crate::units::Kg(900.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: -10, radius: 2}),
deconstructable: true,
enableable: true,
rotations: None,
high_temp_warning: None,
high_temp_fatal: None,
}));
pub static Polymerizer:Entity = Entity::new(
crate::lang::Game::Polymerizer,
"Polymerizer",
12.000,
Params::BuildingRefining(BuildingRefining{
tags: &[
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(240.000),
]),
external_heat: Some(0.500),
internal_heat: 32.000,
size: crate::units::Size {width: 3, height: 3},
hp: 30,
mass: crate::units::Kg(400.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: None,
deconstructable: true,
enableable: true,
rotations: Some(Rotation::FlipH),
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
}));
pub static RockCrusher:Entity = Entity::new(
crate::lang::Game::RockCrusher,
"RockCrusher",
6.000,
Params::BuildingRefining(BuildingRefining{
tags: &[
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(240.000),
]),
external_heat: None,
internal_heat: 16.000,
size: crate::units::Size {width: 4, height: 4},
hp: 30,
mass: crate::units::Kg(800.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: -15, radius: 3}),
deconstructable: true,
enableable: true,
rotations: None,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
}));
pub static SludgePress:Entity = Entity::new(
crate::lang::Game::SludgePress,
"SludgePress",
8.000,
Params::BuildingRefining(BuildingRefining{
tags: &[
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
electrity_consummation: Some(&[
Some(120.000),
]),
external_heat: None,
internal_heat: 4.000,
size: crate::units::Size {width: 4, height: 3},
hp: 100,
mass: crate::units::Kg(200.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: -10, radius: 2}),
deconstructable: true,
enableable: true,
rotations: None,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
}));
pub static SupermaterialRefinery:Entity = Entity::new(
crate::lang::Game::SupermaterialRefinery,
"SupermaterialRefinery",
15.000,
Params::BuildingRefining(BuildingRefining{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(1600.000),
]),
external_heat: None,
internal_heat: 16.000,
size: crate::units::Size {width: 4, height: 5},
hp: 30,
mass: crate::units::Kg(800.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: -15, radius: 3}),
deconstructable: true,
enableable: true,
rotations: None,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
}));
pub static WaterPurifier:Entity = Entity::new(
crate::lang::Game::WaterPurifier,
"WaterPurifier",
1.000,
Params::BuildingRefining(BuildingRefining{
tags: &[
Tag::IndustrialMachinery,
Tag::OverlayBackLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(120.000),
]),
external_heat: None,
internal_heat: 4.000,
size: crate::units::Size {width: 4, height: 3},
hp: 100,
mass: crate::units::Kg(200.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: -15, radius: 3}),
deconstructable: true,
enableable: true,
rotations: Some(Rotation::FlipH),
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
}));
pub static Desalinator:Entity = Entity::new(
crate::lang::Game::Desalinator,
"Desalinator",
2.000,
Params::BuildingRefining(BuildingRefining{
tags: &[
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(480.000),
]),
external_heat: None,
internal_heat: 8.000,
size: crate::units::Size {width: 4, height: 3},
hp: 30,
mass: crate::units::Kg(200.000),
flood_threshold: None,
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: true,
rotations: Some(Rotation::FlipH),
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
}));
pub struct BuildingFurniture{
pub tags: &'static [Tag],
pub thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree,
pub location_rule: LocationRule,
pub material_category: &'static [MaterialCategory],
pub electrity_consummation: Option<&'static [Option<f32>]>,
pub internal_heat: Option<f32>,
pub size: crate::units::Size,
pub hp: Option<i32>,
pub high_temp_warning: Option<crate::units::Temperature>,
pub high_temp_fatal: Option<crate::units::Temperature>,
pub mass: crate::units::Kg,
pub flood_threshold: Option<crate::units::Percent>,
pub decor: Option<crate::units::Decor>,
pub deconstructable: bool,
pub enableable: bool,
pub rotations: Option<Rotation>,
pub external_heat: Option<f32>,
pub invincible: Option<bool>,
}
pub static ArcadeMachine:Entity = Entity::new(
crate::lang::Game::ArcadeMachine,
"ArcadeMachine",
9.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
Tag::RecBuilding,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
electrity_consummation: Some(&[
Some(1200.000),
]),
internal_heat: Some(2.000),
size: crate::units::Size {width: 3, height: 3},
hp: Some(30),
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(400.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: 10, radius: 2}),
deconstructable: true,
enableable: true,
rotations: None,
external_heat: None,
invincible: None,
}));
pub static BeachChair:Entity = Entity::new(
crate::lang::Game::BeachChair,
"BeachChair",
16.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
Tag::RecBuilding,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
MaterialCategory::Tag(Tag::BuildingFiber),
],
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 2, height: 3},
hp: Some(30),
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(402.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: 25, radius: 5}),
deconstructable: true,
enableable: true,
rotations: None,
external_heat: None,
invincible: None,
}));
pub static Bed:Entity = Entity::new(
crate::lang::Game::Bed,
"Bed",
0.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
Tag::BedType,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 2, height: 2},
hp: Some(10),
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(200.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: None,
deconstructable: true,
enableable: true,
rotations: None,
external_heat: None,
invincible: None,
}));
pub static Canvas:Entity = Entity::new(
crate::lang::Game::Canvas,
"Canvas",
31.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
Tag::Decoration,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
MaterialCategory::Tag(Tag::BuildingFiber),
],
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 2, height: 2},
hp: Some(30),
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(401.000),
flood_threshold: None,
decor: Some(crate::units::Decor {value: 10, radius: 6}),
deconstructable: true,
enableable: true,
rotations: Some(Rotation::FlipH),
external_heat: None,
invincible: None,
}));
pub static CanvasTall:Entity = Entity::new(
crate::lang::Game::CanvasTall,
"CanvasTall",
33.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
Tag::Decoration,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
MaterialCategory::Tag(Tag::BuildingFiber),
],
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 2, height: 3},
hp: Some(30),
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(401.000),
flood_threshold: None,
decor: Some(crate::units::Decor {value: 15, radius: 6}),
deconstructable: true,
enableable: true,
rotations: Some(Rotation::FlipH),
external_heat: None,
invincible: None,
}));
pub static CanvasWide:Entity = Entity::new(
crate::lang::Game::CanvasWide,
"CanvasWide",
32.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
Tag::Decoration,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
MaterialCategory::Tag(Tag::BuildingFiber),
],
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 3, height: 2},
hp: Some(30),
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(401.000),
flood_threshold: None,
decor: Some(crate::units::Decor {value: 15, radius: 6}),
deconstructable: true,
enableable: true,
rotations: Some(Rotation::FlipH),
external_heat: None,
invincible: None,
}));
pub static CeilingLight:Entity = Entity::new(
crate::lang::Game::CeilingLight,
"CeilingLight",
4.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
Tag::LightSource,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnCeiling,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(10.000),
]),
internal_heat: Some(0.500),
size: crate::units::Size {width: 1, height: 1},
hp: Some(10),
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(50.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: None,
deconstructable: true,
enableable: true,
rotations: None,
external_heat: None,
invincible: None,
}));
pub static CornerMoulding:Entity = Entity::new(
crate::lang::Game::CornerMoulding,
"CornerMoulding",
30.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
Tag::Decoration,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::InCorner,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: Some(10),
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(100.000),
flood_threshold: None,
decor: Some(crate::units::Decor {value: 5, radius: 3}),
deconstructable: true,
enableable: true,
rotations: Some(Rotation::FlipH),
external_heat: None,
invincible: None,
}));
pub static CrownMoulding:Entity = Entity::new(
crate::lang::Game::CrownMoulding,
"CrownMoulding",
29.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
Tag::Decoration,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnCeiling,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: Some(10),
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(100.000),
flood_threshold: None,
decor: Some(crate::units::Decor {value: 5, radius: 3}),
deconstructable: true,
enableable: true,
rotations: None,
external_heat: None,
invincible: None,
}));
pub static DiningTable:Entity = Entity::new(
crate::lang::Game::DiningTable,
"DiningTable",
6.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
Tag::MessTable,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: Some(10),
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(200.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: 10, radius: 2}),
deconstructable: true,
enableable: true,
rotations: None,
external_heat: None,
invincible: None,
}));
pub static EspressoMachine:Entity = Entity::new(
crate::lang::Game::EspressoMachine,
"EspressoMachine",
10.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
Tag::RecBuilding,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
electrity_consummation: Some(&[
Some(480.000),
]),
internal_heat: Some(1.000),
size: crate::units::Size {width: 3, height: 3},
hp: Some(30),
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(400.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: 10, radius: 2}),
deconstructable: true,
enableable: true,
rotations: None,
external_heat: None,
invincible: None,
}));
pub static FloorLamp:Entity = Entity::new(
crate::lang::Game::FloorLamp,
"FloorLamp",
3.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
Tag::LightSource,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(8.000),
]),
internal_heat: Some(0.500),
size: crate::units::Size {width: 1, height: 2},
hp: Some(10),
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(50.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: 10, radius: 2}),
deconstructable: true,
enableable: true,
rotations: None,
external_heat: None,
invincible: None,
}));
pub static FlowerVase:Entity = Entity::new(
crate::lang::Game::FlowerVase,
"FlowerVase",
20.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
Tag::Decoration,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: Some(10),
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(50.000),
flood_threshold: None,
decor: None,
deconstructable: true,
enableable: true,
rotations: None,
external_heat: None,
invincible: None,
}));
pub static FlowerVaseHanging:Entity = Entity::new(
crate::lang::Game::FlowerVaseHanging,
"FlowerVaseHanging",
22.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
Tag::Decoration,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnCeiling,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 2},
hp: Some(10),
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(50.000),
flood_threshold: None,
decor: None,
deconstructable: true,
enableable: true,
rotations: None,
external_heat: None,
invincible: None,
}));
pub static FlowerVaseHangingFancy:Entity = Entity::new(
crate::lang::Game::FlowerVaseHangingFancy,
"FlowerVaseHangingFancy",
23.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
Tag::Decoration,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnCeiling,
material_category: &[
MaterialCategory::Tag(Tag::Transparent),
],
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 2},
hp: Some(10),
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(50.000),
flood_threshold: None,
decor: Some(crate::units::Decor {value: 10, radius: 4}),
deconstructable: true,
enableable: true,
rotations: None,
external_heat: None,
invincible: None,
}));
pub static FlowerVaseWall:Entity = Entity::new(
crate::lang::Game::FlowerVaseWall,
"FlowerVaseWall",
21.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
Tag::Decoration,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnWall,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: Some(10),
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(50.000),
flood_threshold: None,
decor: None,
deconstructable: true,
enableable: true,
rotations: Some(Rotation::FlipH),
external_heat: None,
invincible: None,
}));
pub static HotTub:Entity = Entity::new(
crate::lang::Game::HotTub,
"HotTub",
11.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
Tag::RecBuilding,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
MaterialCategory::Tag(Tag::BuildingWood),
],
electrity_consummation: Some(&[
Some(240.000),
]),
internal_heat: Some(4.000),
size: crate::units::Size {width: 5, height: 2},
hp: Some(30),
high_temp_warning: Some(crate::units::Temperature(310.850)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(400.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: 20, radius: 4}),
deconstructable: true,
enableable: true,
rotations: None,
external_heat: Some(1.000),
invincible: None,
}));
pub static IceSculpture:Entity = Entity::new(
crate::lang::Game::IceSculpture,
"IceSculpture",
26.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
Tag::Decoration,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Solid(&Ice),
],
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 2, height: 2},
hp: Some(10),
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(400.000),
flood_threshold: None,
decor: Some(crate::units::Decor {value: 20, radius: 8}),
deconstructable: true,
enableable: true,
rotations: Some(Rotation::FlipH),
external_heat: None,
invincible: None,
}));
pub static ItemPedestal:Entity = Entity::new(
crate::lang::Game::ItemPedestal,
"ItemPedestal",
34.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
Tag::Decoration,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 2},
hp: Some(10),
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(100.000),
flood_threshold: None,
decor: Some(crate::units::Decor {value: 5, radius: 1}),
deconstructable: true,
enableable: true,
rotations: None,
external_heat: None,
invincible: None,
}));
pub static Juicer:Entity = Entity::new(
crate::lang::Game::Juicer,
"Juicer",
14.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
Tag::RecBuilding,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(120.000),
]),
internal_heat: Some(0.500),
size: crate::units::Size {width: 3, height: 4},
hp: Some(30),
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(400.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: 10, radius: 2}),
deconstructable: true,
enableable: true,
rotations: None,
external_heat: None,
invincible: None,
}));
pub static LadderBed:Entity = Entity::new(
crate::lang::Game::LadderBed,
"LadderBed",
2.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
Tag::BedType,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloorOrBuildingAttachPoint,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 2, height: 2},
hp: Some(10),
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(200.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: None,
deconstructable: true,
enableable: true,
rotations: Some(Rotation::FlipH),
external_heat: None,
invincible: None,
}));
pub static LuxuryBed:Entity = Entity::new(
crate::lang::Game::LuxuryBed,
"LuxuryBed",
1.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
Tag::BedType,
Tag::LuxuryBedType,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Plastic),
],
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 4, height: 2},
hp: Some(10),
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(200.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: 15, radius: 3}),
deconstructable: true,
enableable: true,
rotations: None,
external_heat: None,
invincible: None,
}));
pub static MarbleSculpture:Entity = Entity::new(
crate::lang::Game::MarbleSculpture,
"MarbleSculpture",
27.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
Tag::Decoration,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::PreciousRock),
],
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 2, height: 3},
hp: Some(10),
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(400.000),
flood_threshold: None,
decor: Some(crate::units::Decor {value: 20, radius: 8}),
deconstructable: true,
enableable: true,
rotations: Some(Rotation::FlipH),
external_heat: None,
invincible: None,
}));
pub static MechanicalSurfboard:Entity = Entity::new(
crate::lang::Game::MechanicalSurfboard,
"MechanicalSurfboard",
12.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
Tag::RecBuilding,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(480.000),
]),
internal_heat: Some(1.000),
size: crate::units::Size {width: 2, height: 3},
hp: Some(30),
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(400.000),
flood_threshold: None,
decor: Some(crate::units::Decor {value: 10, radius: 2}),
deconstructable: true,
enableable: true,
rotations: None,
external_heat: None,
invincible: None,
}));
pub static MetalSculpture:Entity = Entity::new(
crate::lang::Game::MetalSculpture,
"MetalSculpture",
28.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
Tag::Decoration,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 3},
hp: Some(10),
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(400.000),
flood_threshold: None,
decor: Some(crate::units::Decor {value: 20, radius: 8}),
deconstructable: true,
enableable: true,
rotations: Some(Rotation::FlipH),
external_heat: None,
invincible: None,
}));
pub static MonumentBottom:Entity = Entity::new(
crate::lang::Game::MonumentBottom,
"MonumentBottom",
35.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Solid(&Steel),
MaterialCategory::Solid(&Obsidian),
],
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 5, height: 5},
hp: None,
high_temp_warning: Some(crate::units::Temperature(2273.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(10000.000),
flood_threshold: None,
decor: Some(crate::units::Decor {value: 10, radius: 5}),
deconstructable: true,
enableable: true,
rotations: Some(Rotation::FlipH),
external_heat: None,
invincible: Some(true),
}));
pub static MonumentMiddle:Entity = Entity::new(
crate::lang::Game::MonumentMiddle,
"MonumentMiddle",
36.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::BuildingAttachPoint,
material_category: &[
MaterialCategory::Solid(&Ceramic),
MaterialCategory::Solid(&Polypropylene),
MaterialCategory::Solid(&Steel),
],
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 5, height: 5},
hp: None,
high_temp_warning: Some(crate::units::Temperature(2273.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(10000.000),
flood_threshold: None,
decor: Some(crate::units::Decor {value: 10, radius: 5}),
deconstructable: true,
enableable: true,
rotations: Some(Rotation::FlipH),
external_heat: None,
invincible: Some(true),
}));
pub static MonumentTop:Entity = Entity::new(
crate::lang::Game::MonumentTop,
"MonumentTop",
37.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::BuildingAttachPoint,
material_category: &[
MaterialCategory::Solid(&Glass),
MaterialCategory::Solid(&Diamond),
MaterialCategory::Solid(&Steel),
],
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 5, height: 5},
hp: None,
high_temp_warning: Some(crate::units::Temperature(2273.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(10000.000),
flood_threshold: None,
decor: Some(crate::units::Decor {value: 10, radius: 5}),
deconstructable: true,
enableable: true,
rotations: Some(Rotation::FlipH),
external_heat: None,
invincible: Some(true),
}));
pub static ParkSign:Entity = Entity::new(
crate::lang::Game::ParkSign,
"ParkSign",
38.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
Tag::Park,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::BuildableAny),
],
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 2},
hp: Some(10),
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(50.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: None,
deconstructable: true,
enableable: true,
rotations: None,
external_heat: None,
invincible: None,
}));
pub static Phonobox:Entity = Entity::new(
crate::lang::Game::Phonobox,
"Phonobox",
8.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
Tag::RecBuilding,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(960.000),
]),
internal_heat: Some(1.000),
size: crate::units::Size {width: 5, height: 3},
hp: Some(30),
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(400.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: 10, radius: 2}),
deconstructable: true,
enableable: true,
rotations: None,
external_heat: None,
invincible: None,
}));
pub static PixelPack:Entity = Entity::new(
crate::lang::Game::PixelPack,
"PixelPack",
18.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
Tag::Backwall,
Tag::OverlayBackLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::NotInTiles,
material_category: &[
MaterialCategory::Solid(&Glass),
MaterialCategory::Tag(Tag::RefinedMetal),
],
electrity_consummation: Some(&[
Some(10.000),
]),
internal_heat: None,
size: crate::units::Size {width: 4, height: 1},
hp: Some(30),
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(125.000),
flood_threshold: None,
decor: Some(crate::units::Decor {value: 20, radius: 4}),
deconstructable: true,
enableable: true,
rotations: Some(Rotation::R360),
external_heat: None,
invincible: None,
}));
pub static Sauna:Entity = Entity::new(
crate::lang::Game::Sauna,
"Sauna",
13.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
Tag::RecBuilding,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
MaterialCategory::Tag(Tag::BuildingWood),
],
electrity_consummation: Some(&[
Some(60.000),
]),
internal_heat: Some(0.500),
size: crate::units::Size {width: 3, height: 3},
hp: Some(30),
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(200.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: 15, radius: 3}),
deconstructable: true,
enableable: true,
rotations: None,
external_heat: None,
invincible: None,
}));
pub static Sculpture:Entity = Entity::new(
crate::lang::Game::Sculpture,
"Sculpture",
25.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
Tag::Decoration,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 3},
hp: Some(30),
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(400.000),
flood_threshold: None,
decor: Some(crate::units::Decor {value: 10, radius: 8}),
deconstructable: true,
enableable: true,
rotations: Some(Rotation::FlipH),
external_heat: None,
invincible: None,
}));
pub static SmallSculpture:Entity = Entity::new(
crate::lang::Game::SmallSculpture,
"SmallSculpture",
24.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
Tag::Decoration,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 2},
hp: Some(10),
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(200.000),
flood_threshold: None,
decor: Some(crate::units::Decor {value: 5, radius: 4}),
deconstructable: true,
enableable: true,
rotations: Some(Rotation::FlipH),
external_heat: None,
invincible: None,
}));
pub static SodaFountain:Entity = Entity::new(
crate::lang::Game::SodaFountain,
"SodaFountain",
15.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
Tag::RecBuilding,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
electrity_consummation: Some(&[
Some(480.000),
]),
internal_heat: Some(1.000),
size: crate::units::Size {width: 2, height: 2},
hp: Some(30),
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(200.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: 10, radius: 2}),
deconstructable: true,
enableable: true,
rotations: None,
external_heat: None,
invincible: None,
}));
pub static SunLamp:Entity = Entity::new(
crate::lang::Game::SunLamp,
"SunLamp",
5.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
Tag::LightSource,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
MaterialCategory::Solid(&Glass),
],
electrity_consummation: Some(&[
Some(960.000),
]),
internal_heat: Some(4.000),
size: crate::units::Size {width: 2, height: 4},
hp: Some(10),
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(250.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: -20, radius: 4}),
deconstructable: true,
enableable: true,
rotations: None,
external_heat: Some(1.000),
invincible: None,
}));
pub static Telephone:Entity = Entity::new(
crate::lang::Game::Telephone,
"Telephone",
19.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
Tag::RecBuilding,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(120.000),
]),
internal_heat: Some(0.500),
size: crate::units::Size {width: 1, height: 2},
hp: Some(30),
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(400.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: 10, radius: 2}),
deconstructable: true,
enableable: true,
rotations: None,
external_heat: None,
invincible: None,
}));
pub static VerticalWindTunnel:Entity = Entity::new(
crate::lang::Game::VerticalWindTunnel,
"VerticalWindTunnel",
17.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
Tag::RecBuilding,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Plastic),
],
electrity_consummation: Some(&[
Some(1200.000),
]),
internal_heat: Some(2.000),
size: crate::units::Size {width: 5, height: 6},
hp: Some(30),
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(1200.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: 10, radius: 2}),
deconstructable: true,
enableable: true,
rotations: None,
external_heat: None,
invincible: None,
}));
pub static WaterCooler:Entity = Entity::new(
crate::lang::Game::WaterCooler,
"WaterCooler",
7.000,
Params::BuildingFurniture(BuildingFurniture{
tags: &[
Tag::RecBuilding,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 2, height: 2},
hp: Some(30),
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(400.000),
flood_threshold: None,
decor: Some(crate::units::Decor {value: 10, radius: 2}),
deconstructable: true,
enableable: true,
rotations: None,
external_heat: None,
invincible: None,
}));
pub struct BuildingRocketModule{
pub tags: &'static [Tag],
pub thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree,
pub location_rule: LocationRule,
pub material_category: &'static [MaterialCategory],
pub size: crate::units::Size,
pub invincible: bool,
pub high_temp_warning: crate::units::Temperature,
pub high_temp_fatal: crate::units::Temperature,
pub mass: crate::units::Kg,
pub deconstructable: bool,
pub enableable: bool,
pub generator_wattage_rating: Option<f32>,
pub work_time: Option<f32>,
pub num_capsules: Option<f32>,
pub range_max: Option<f32>,
}
pub static ArtifactCargoBay:Entity = Entity::new(
crate::lang::Game::ArtifactCargoBay,
"ArtifactCargoBay",
177013.000,
Params::BuildingRocketModule(BuildingRocketModule{
tags: &[
Tag::IndustrialMachinery,
Tag::RocketModule,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.100),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
size: crate::units::Size {width: 3, height: 1},
invincible: true,
high_temp_warning: crate::units::Temperature(2273.150),
high_temp_fatal: crate::units::Temperature(533.150),
mass: crate::units::Kg(200.000),
deconstructable: true,
enableable: true,
generator_wattage_rating: None,
work_time: None,
num_capsules: None,
range_max: None,
}));
pub static BatteryModule:Entity = Entity::new(
crate::lang::Game::BatteryModule,
"BatteryModule",
177013.000,
Params::BuildingRocketModule(BuildingRocketModule{
tags: &[
Tag::IndustrialMachinery,
Tag::RocketModule,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.100),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
size: crate::units::Size {width: 3, height: 2},
invincible: true,
high_temp_warning: crate::units::Temperature(2273.150),
high_temp_fatal: crate::units::Temperature(533.150),
mass: crate::units::Kg(400.000),
deconstructable: true,
enableable: true,
generator_wattage_rating: None,
work_time: None,
num_capsules: None,
range_max: None,
}));
pub static CO2Engine:Entity = Entity::new(
crate::lang::Game::CO2Engine,
"CO2Engine",
177013.000,
Params::BuildingRocketModule(BuildingRocketModule{
tags: &[
Tag::IndustrialMachinery,
Tag::RocketModule,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.100),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
size: crate::units::Size {width: 3, height: 2},
invincible: true,
high_temp_warning: crate::units::Temperature(2273.150),
high_temp_fatal: crate::units::Temperature(533.150),
mass: crate::units::Kg(500.000),
deconstructable: true,
enableable: true,
generator_wattage_rating: None,
work_time: None,
num_capsules: None,
range_max: None,
}));
pub static GasCargoBayCluster:Entity = Entity::new(
crate::lang::Game::GasCargoBayCluster,
"GasCargoBayCluster",
177013.000,
Params::BuildingRocketModule(BuildingRocketModule{
tags: &[
Tag::IndustrialMachinery,
Tag::RocketModule,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.100),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Solid(&Steel),
],
size: crate::units::Size {width: 5, height: 5},
invincible: true,
high_temp_warning: crate::units::Temperature(2273.150),
high_temp_fatal: crate::units::Temperature(533.150),
mass: crate::units::Kg(1000.000),
deconstructable: true,
enableable: true,
generator_wattage_rating: None,
work_time: None,
num_capsules: None,
range_max: None,
}));
pub static GasCargoBaySmall:Entity = Entity::new(
crate::lang::Game::GasCargoBaySmall,
"GasCargoBaySmall",
177013.000,
Params::BuildingRocketModule(BuildingRocketModule{
tags: &[
Tag::IndustrialMachinery,
Tag::RocketModule,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.100),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
size: crate::units::Size {width: 3, height: 3},
invincible: true,
high_temp_warning: crate::units::Temperature(2273.150),
high_temp_fatal: crate::units::Temperature(533.150),
mass: crate::units::Kg(200.000),
deconstructable: true,
enableable: true,
generator_wattage_rating: None,
work_time: None,
num_capsules: None,
range_max: None,
}));
pub static HEPEngine:Entity = Entity::new(
crate::lang::Game::HEPEngine,
"HEPEngine",
177013.000,
Params::BuildingRocketModule(BuildingRocketModule{
tags: &[
Tag::IndustrialMachinery,
Tag::RocketModule,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.100),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Solid(&Steel),
],
size: crate::units::Size {width: 5, height: 5},
invincible: true,
high_temp_warning: crate::units::Temperature(2273.150),
high_temp_fatal: crate::units::Temperature(533.150),
mass: crate::units::Kg(500.000),
deconstructable: true,
enableable: true,
generator_wattage_rating: None,
work_time: None,
num_capsules: None,
range_max: None,
}));
pub static HabitatModuleMedium:Entity = Entity::new(
crate::lang::Game::HabitatModuleMedium,
"HabitatModuleMedium",
177013.000,
Params::BuildingRocketModule(BuildingRocketModule{
tags: &[
Tag::IndustrialMachinery,
Tag::LaunchButtonRocketModule,
Tag::RocketModule,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.100),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
size: crate::units::Size {width: 5, height: 4},
invincible: true,
high_temp_warning: crate::units::Temperature(2273.150),
high_temp_fatal: crate::units::Temperature(533.150),
mass: crate::units::Kg(500.000),
deconstructable: true,
enableable: true,
generator_wattage_rating: None,
work_time: None,
num_capsules: None,
range_max: None,
}));
pub static HabitatModuleSmall:Entity = Entity::new(
crate::lang::Game::HabitatModuleSmall,
"HabitatModuleSmall",
177013.000,
Params::BuildingRocketModule(BuildingRocketModule{
tags: &[
Tag::IndustrialMachinery,
Tag::NoseRocketModule,
Tag::LaunchButtonRocketModule,
Tag::RocketModule,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.100),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
size: crate::units::Size {width: 3, height: 3},
invincible: true,
high_temp_warning: crate::units::Temperature(2273.150),
high_temp_fatal: crate::units::Temperature(533.150),
mass: crate::units::Kg(200.000),
deconstructable: true,
enableable: true,
generator_wattage_rating: None,
work_time: None,
num_capsules: None,
range_max: None,
}));
pub static HydrogenEngineCluster:Entity = Entity::new(
crate::lang::Game::HydrogenEngineCluster,
"HydrogenEngineCluster",
177013.000,
Params::BuildingRocketModule(BuildingRocketModule{
tags: &[
Tag::IndustrialMachinery,
Tag::RocketModule,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.100),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Solid(&Steel),
],
size: crate::units::Size {width: 7, height: 5},
invincible: true,
high_temp_warning: crate::units::Temperature(2273.150),
high_temp_fatal: crate::units::Temperature(533.150),
mass: crate::units::Kg(500.000),
deconstructable: true,
enableable: true,
generator_wattage_rating: Some(600.000),
work_time: None,
num_capsules: None,
range_max: None,
}));
pub static KeroseneEngineCluster:Entity = Entity::new(
crate::lang::Game::KeroseneEngineCluster,
"KeroseneEngineCluster",
177013.000,
Params::BuildingRocketModule(BuildingRocketModule{
tags: &[
Tag::IndustrialMachinery,
Tag::RocketModule,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.100),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Solid(&Steel),
],
size: crate::units::Size {width: 7, height: 5},
invincible: true,
high_temp_warning: crate::units::Temperature(2273.150),
high_temp_fatal: crate::units::Temperature(533.150),
mass: crate::units::Kg(200.000),
deconstructable: true,
enableable: true,
generator_wattage_rating: Some(480.000),
work_time: None,
num_capsules: None,
range_max: None,
}));
pub static KeroseneEngineClusterSmall:Entity = Entity::new(
crate::lang::Game::KeroseneEngineClusterSmall,
"KeroseneEngineClusterSmall",
177013.000,
Params::BuildingRocketModule(BuildingRocketModule{
tags: &[
Tag::IndustrialMachinery,
Tag::RocketModule,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.100),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
size: crate::units::Size {width: 3, height: 4},
invincible: true,
high_temp_warning: crate::units::Temperature(2273.150),
high_temp_fatal: crate::units::Temperature(533.150),
mass: crate::units::Kg(200.000),
deconstructable: true,
enableable: true,
generator_wattage_rating: Some(240.000),
work_time: None,
num_capsules: None,
range_max: None,
}));
pub static LiquidCargoBayCluster:Entity = Entity::new(
crate::lang::Game::LiquidCargoBayCluster,
"LiquidCargoBayCluster",
177013.000,
Params::BuildingRocketModule(BuildingRocketModule{
tags: &[
Tag::IndustrialMachinery,
Tag::RocketModule,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.100),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Solid(&Steel),
],
size: crate::units::Size {width: 5, height: 5},
invincible: true,
high_temp_warning: crate::units::Temperature(2273.150),
high_temp_fatal: crate::units::Temperature(533.150),
mass: crate::units::Kg(1000.000),
deconstructable: true,
enableable: true,
generator_wattage_rating: None,
work_time: None,
num_capsules: None,
range_max: None,
}));
pub static LiquidCargoBaySmall:Entity = Entity::new(
crate::lang::Game::LiquidCargoBaySmall,
"LiquidCargoBaySmall",
177013.000,
Params::BuildingRocketModule(BuildingRocketModule{
tags: &[
Tag::IndustrialMachinery,
Tag::RocketModule,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.100),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
size: crate::units::Size {width: 3, height: 3},
invincible: true,
high_temp_warning: crate::units::Temperature(2273.150),
high_temp_fatal: crate::units::Temperature(533.150),
mass: crate::units::Kg(200.000),
deconstructable: true,
enableable: true,
generator_wattage_rating: None,
work_time: None,
num_capsules: None,
range_max: None,
}));
pub static LiquidFuelTankCluster:Entity = Entity::new(
crate::lang::Game::LiquidFuelTankCluster,
"LiquidFuelTankCluster",
177013.000,
Params::BuildingRocketModule(BuildingRocketModule{
tags: &[
Tag::IndustrialMachinery,
Tag::RocketModule,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.100),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Solid(&Steel),
],
size: crate::units::Size {width: 5, height: 5},
invincible: true,
high_temp_warning: crate::units::Temperature(2273.150),
high_temp_fatal: crate::units::Temperature(533.150),
mass: crate::units::Kg(100.000),
deconstructable: true,
enableable: true,
generator_wattage_rating: None,
work_time: None,
num_capsules: None,
range_max: None,
}));
pub static NoseconeBasic:Entity = Entity::new(
crate::lang::Game::NoseconeBasic,
"NoseconeBasic",
177013.000,
Params::BuildingRocketModule(BuildingRocketModule{
tags: &[
Tag::IndustrialMachinery,
Tag::NoseRocketModule,
Tag::RocketModule,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.100),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
MaterialCategory::Tag(Tag::Insulator),
],
size: crate::units::Size {width: 5, height: 2},
invincible: true,
high_temp_warning: crate::units::Temperature(2273.150),
high_temp_fatal: crate::units::Temperature(533.150),
mass: crate::units::Kg(600.000),
deconstructable: true,
enableable: true,
generator_wattage_rating: None,
work_time: None,
num_capsules: None,
range_max: None,
}));
pub static NoseconeHarvest:Entity = Entity::new(
crate::lang::Game::NoseconeHarvest,
"NoseconeHarvest",
177013.000,
Params::BuildingRocketModule(BuildingRocketModule{
tags: &[
Tag::IndustrialMachinery,
Tag::NoseRocketModule,
Tag::RocketModule,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.100),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
MaterialCategory::Tag(Tag::Plastic),
],
size: crate::units::Size {width: 5, height: 4},
invincible: true,
high_temp_warning: crate::units::Temperature(2273.150),
high_temp_fatal: crate::units::Temperature(533.150),
mass: crate::units::Kg(600.000),
deconstructable: true,
enableable: true,
generator_wattage_rating: None,
work_time: Some(7.500),
num_capsules: None,
range_max: None,
}));
pub static OrbitalCargoModule:Entity = Entity::new(
crate::lang::Game::OrbitalCargoModule,
"OrbitalCargoModule",
177013.000,
Params::BuildingRocketModule(BuildingRocketModule{
tags: &[
Tag::IndustrialMachinery,
Tag::RocketModule,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.100),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
size: crate::units::Size {width: 3, height: 2},
invincible: true,
high_temp_warning: crate::units::Temperature(2273.150),
high_temp_fatal: crate::units::Temperature(533.150),
mass: crate::units::Kg(400.000),
deconstructable: true,
enableable: true,
generator_wattage_rating: None,
work_time: None,
num_capsules: Some(30.000),
range_max: None,
}));
pub static OxidizerTankCluster:Entity = Entity::new(
crate::lang::Game::OxidizerTankCluster,
"OxidizerTankCluster",
177013.000,
Params::BuildingRocketModule(BuildingRocketModule{
tags: &[
Tag::IndustrialMachinery,
Tag::RocketModule,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.100),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Solid(&Steel),
],
size: crate::units::Size {width: 5, height: 5},
invincible: true,
high_temp_warning: crate::units::Temperature(2273.150),
high_temp_fatal: crate::units::Temperature(533.150),
mass: crate::units::Kg(100.000),
deconstructable: true,
enableable: true,
generator_wattage_rating: None,
work_time: None,
num_capsules: None,
range_max: None,
}));
pub static OxidizerTankLiquidCluster:Entity = Entity::new(
crate::lang::Game::OxidizerTankLiquidCluster,
"OxidizerTankLiquidCluster",
177013.000,
Params::BuildingRocketModule(BuildingRocketModule{
tags: &[
Tag::IndustrialMachinery,
Tag::RocketModule,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.100),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Solid(&Steel),
],
size: crate::units::Size {width: 5, height: 2},
invincible: true,
high_temp_warning: crate::units::Temperature(2273.150),
high_temp_fatal: crate::units::Temperature(533.150),
mass: crate::units::Kg(100.000),
deconstructable: true,
enableable: true,
generator_wattage_rating: None,
work_time: None,
num_capsules: None,
range_max: None,
}));
pub static PioneerModule:Entity = Entity::new(
crate::lang::Game::PioneerModule,
"PioneerModule",
177013.000,
Params::BuildingRocketModule(BuildingRocketModule{
tags: &[
Tag::IndustrialMachinery,
Tag::RocketModule,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.100),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
size: crate::units::Size {width: 3, height: 3},
invincible: true,
high_temp_warning: crate::units::Temperature(2273.150),
high_temp_fatal: crate::units::Temperature(533.150),
mass: crate::units::Kg(200.000),
deconstructable: true,
enableable: true,
generator_wattage_rating: None,
work_time: None,
num_capsules: None,
range_max: None,
}));
pub static ScannerModule:Entity = Entity::new(
crate::lang::Game::ScannerModule,
"ScannerModule",
177013.000,
Params::BuildingRocketModule(BuildingRocketModule{
tags: &[
Tag::IndustrialMachinery,
Tag::RocketModule,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.100),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Solid(&Steel),
MaterialCategory::Solid(&Polypropylene),
],
size: crate::units::Size {width: 5, height: 5},
invincible: true,
high_temp_warning: crate::units::Temperature(2273.150),
high_temp_fatal: crate::units::Temperature(533.150),
mass: crate::units::Kg(1350.000),
deconstructable: true,
enableable: true,
generator_wattage_rating: None,
work_time: None,
num_capsules: None,
range_max: Some(0.000),
}));
pub static ScoutModule:Entity = Entity::new(
crate::lang::Game::ScoutModule,
"ScoutModule",
177013.000,
Params::BuildingRocketModule(BuildingRocketModule{
tags: &[
Tag::IndustrialMachinery,
Tag::RocketModule,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.100),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
size: crate::units::Size {width: 3, height: 3},
invincible: true,
high_temp_warning: crate::units::Temperature(2273.150),
high_temp_fatal: crate::units::Temperature(533.150),
mass: crate::units::Kg(200.000),
deconstructable: true,
enableable: true,
generator_wattage_rating: None,
work_time: None,
num_capsules: None,
range_max: None,
}));
pub static SmallOxidizerTank:Entity = Entity::new(
crate::lang::Game::SmallOxidizerTank,
"SmallOxidizerTank",
177013.000,
Params::BuildingRocketModule(BuildingRocketModule{
tags: &[
Tag::IndustrialMachinery,
Tag::RocketModule,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.100),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
size: crate::units::Size {width: 3, height: 2},
invincible: true,
high_temp_warning: crate::units::Temperature(2273.150),
high_temp_fatal: crate::units::Temperature(533.150),
mass: crate::units::Kg(200.000),
deconstructable: true,
enableable: true,
generator_wattage_rating: None,
work_time: None,
num_capsules: None,
range_max: None,
}));
pub static SolarPanelModule:Entity = Entity::new(
crate::lang::Game::SolarPanelModule,
"SolarPanelModule",
177013.000,
Params::BuildingRocketModule(BuildingRocketModule{
tags: &[
Tag::IndustrialMachinery,
Tag::RocketModule,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.100),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Solid(&Glass),
],
size: crate::units::Size {width: 3, height: 1},
invincible: true,
high_temp_warning: crate::units::Temperature(2273.150),
high_temp_fatal: crate::units::Temperature(533.150),
mass: crate::units::Kg(200.000),
deconstructable: true,
enableable: true,
generator_wattage_rating: Some(60.000),
work_time: None,
num_capsules: None,
range_max: None,
}));
pub static CargoBayCluster:Entity = Entity::new(
crate::lang::Game::CargoBayCluster,
"CargoBayCluster",
177013.000,
Params::BuildingRocketModule(BuildingRocketModule{
tags: &[
Tag::IndustrialMachinery,
Tag::RocketModule,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.100),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Solid(&Steel),
],
size: crate::units::Size {width: 5, height: 5},
invincible: true,
high_temp_warning: crate::units::Temperature(2273.150),
high_temp_fatal: crate::units::Temperature(533.150),
mass: crate::units::Kg(1000.000),
deconstructable: true,
enableable: true,
generator_wattage_rating: None,
work_time: None,
num_capsules: None,
range_max: None,
}));
pub static SolidCargoBaySmall:Entity = Entity::new(
crate::lang::Game::SolidCargoBaySmall,
"SolidCargoBaySmall",
177013.000,
Params::BuildingRocketModule(BuildingRocketModule{
tags: &[
Tag::IndustrialMachinery,
Tag::RocketModule,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.100),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
size: crate::units::Size {width: 3, height: 3},
invincible: true,
high_temp_warning: crate::units::Temperature(2273.150),
high_temp_fatal: crate::units::Temperature(533.150),
mass: crate::units::Kg(200.000),
deconstructable: true,
enableable: true,
generator_wattage_rating: None,
work_time: None,
num_capsules: None,
range_max: None,
}));
pub static SpecialCargoBayCluster:Entity = Entity::new(
crate::lang::Game::SpecialCargoBayCluster,
"SpecialCargoBayCluster",
177013.000,
Params::BuildingRocketModule(BuildingRocketModule{
tags: &[
Tag::IndustrialMachinery,
Tag::RocketModule,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.100),
location_rule: LocationRule::BuildingAttachPoint,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
size: crate::units::Size {width: 3, height: 1},
invincible: true,
high_temp_warning: crate::units::Temperature(2273.150),
high_temp_fatal: crate::units::Temperature(533.150),
mass: crate::units::Kg(200.000),
deconstructable: true,
enableable: true,
generator_wattage_rating: None,
work_time: None,
num_capsules: None,
range_max: None,
}));
pub static SteamEngineCluster:Entity = Entity::new(
crate::lang::Game::SteamEngineCluster,
"SteamEngineCluster",
177013.000,
Params::BuildingRocketModule(BuildingRocketModule{
tags: &[
Tag::IndustrialMachinery,
Tag::RocketModule,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.100),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
size: crate::units::Size {width: 7, height: 5},
invincible: true,
high_temp_warning: crate::units::Temperature(2273.150),
high_temp_fatal: crate::units::Temperature(533.150),
mass: crate::units::Kg(200.000),
deconstructable: true,
enableable: true,
generator_wattage_rating: Some(600.000),
work_time: None,
num_capsules: None,
range_max: None,
}));
pub static SugarEngine:Entity = Entity::new(
crate::lang::Game::SugarEngine,
"SugarEngine",
177013.000,
Params::BuildingRocketModule(BuildingRocketModule{
tags: &[
Tag::IndustrialMachinery,
Tag::RocketModule,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.100),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
size: crate::units::Size {width: 3, height: 3},
invincible: true,
high_temp_warning: crate::units::Temperature(2273.150),
high_temp_fatal: crate::units::Temperature(533.150),
mass: crate::units::Kg(500.000),
deconstructable: true,
enableable: true,
generator_wattage_rating: Some(60.000),
work_time: None,
num_capsules: None,
range_max: None,
}));
pub struct BuildingConveyance{
pub tags: &'static [Tag],
pub thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree,
pub location_rule: LocationRule,
pub material_category: &'static [MaterialCategory],
pub rotations: Option<Rotation>,
pub electrity_consummation: Option<&'static [Option<f32>]>,
pub internal_heat: Option<f32>,
pub size: crate::units::Size,
pub hp: i32,
pub high_temp_warning: Option<crate::units::Temperature>,
pub high_temp_fatal: Option<crate::units::Temperature>,
pub mass: crate::units::Kg,
pub decor: Option<crate::units::Decor>,
pub deconstructable: bool,
pub enableable: Option<bool>,
pub not_in_rocket: Option<bool>,
pub external_heat: Option<f32>,
pub links: Option<&'static [Link]>,
pub mode: Option<Mode>,
}
pub static AutoMiner:Entity = Entity::new(
crate::lang::Game::AutoMiner,
"AutoMiner",
12.000,
Params::BuildingConveyance(BuildingConveyance{
tags: &[
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFoundationRotatable,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: Some(Rotation::R360),
electrity_consummation: Some(&[
Some(120.000),
]),
internal_heat: Some(2.000),
size: crate::units::Size {width: 2, height: 2},
hp: 10,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(200.000),
decor: Some(crate::units::Decor {value: -15, radius: 3}),
deconstructable: true,
enableable: Some(true),
not_in_rocket: None,
external_heat: None,
links: None,
mode: None,
}));
pub static ModularLaunchpadPortSolid:Entity = Entity::new(
crate::lang::Game::ModularLaunchpadPortSolid,
"ModularLaunchpadPortSolid",
13.000,
Params::BuildingConveyance(BuildingConveyance{
tags: &[
Tag::IndustrialMachinery,
Tag::ModularLaunchpadPort,
Tag::ModularConduitPort,
Tag::NotRocketInteriorBuilding,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
electrity_consummation: Some(&[
Some(240.000),
]),
internal_heat: Some(1.000),
size: crate::units::Size {width: 2, height: 2},
hp: 1000,
high_temp_warning: Some(crate::units::Temperature(2273.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(400.000),
decor: None,
deconstructable: true,
enableable: Some(true),
not_in_rocket: Some(true),
external_heat: Some(0.250),
links: Some(&[
Link::LaunchPad,
Link::ModularLaunchpadPort,
]),
mode: Some(Mode::Load),
}));
pub static ModularLaunchpadPortSolidUnloader:Entity = Entity::new(
crate::lang::Game::ModularLaunchpadPortSolidUnloader,
"ModularLaunchpadPortSolidUnloader",
14.000,
Params::BuildingConveyance(BuildingConveyance{
tags: &[
Tag::IndustrialMachinery,
Tag::ModularLaunchpadPort,
Tag::ModularConduitPort,
Tag::NotRocketInteriorBuilding,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
electrity_consummation: Some(&[
Some(240.000),
]),
internal_heat: Some(1.000),
size: crate::units::Size {width: 2, height: 3},
hp: 1000,
high_temp_warning: Some(crate::units::Temperature(2273.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(400.000),
decor: None,
deconstructable: true,
enableable: Some(true),
not_in_rocket: Some(true),
external_heat: Some(0.250),
links: Some(&[
Link::LaunchPad,
Link::ModularLaunchpadPort,
]),
mode: Some(Mode::Unload),
}));
pub static SolidConduitBridge:Entity = Entity::new(
crate::lang::Game::SolidConduitBridge,
"SolidConduitBridge",
2.000,
Params::BuildingConveyance(BuildingConveyance{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Conduit,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: Some(Rotation::R360),
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 3, height: 1},
hp: 10,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(400.000),
decor: None,
deconstructable: true,
enableable: None,
not_in_rocket: None,
external_heat: None,
links: None,
mode: None,
}));
pub static SolidConduit:Entity = Entity::new(
crate::lang::Game::SolidConduit,
"SolidConduit",
1.000,
Params::BuildingConveyance(BuildingConveyance{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: None,
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: 10,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(100.000),
decor: None,
deconstructable: true,
enableable: None,
not_in_rocket: None,
external_heat: None,
links: None,
mode: None,
}));
pub static SolidConduitInbox:Entity = Entity::new(
crate::lang::Game::SolidConduitInbox,
"SolidConduitInbox",
3.000,
Params::BuildingConveyance(BuildingConveyance{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: Some(Rotation::R360),
electrity_consummation: Some(&[
Some(120.000),
]),
internal_heat: Some(2.000),
size: crate::units::Size {width: 1, height: 2},
hp: 100,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(200.000),
decor: Some(crate::units::Decor {value: -10, radius: 2}),
deconstructable: true,
enableable: Some(true),
not_in_rocket: None,
external_heat: None,
links: None,
mode: None,
}));
pub static SolidConduitOutbox:Entity = Entity::new(
crate::lang::Game::SolidConduitOutbox,
"SolidConduitOutbox",
4.000,
Params::BuildingConveyance(BuildingConveyance{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: Some(Rotation::R360),
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 2},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(200.000),
decor: Some(crate::units::Decor {value: -10, radius: 2}),
deconstructable: true,
enableable: None,
not_in_rocket: None,
external_heat: None,
links: None,
mode: None,
}));
pub static SolidConduitDiseaseSensor:Entity = Entity::new(
crate::lang::Game::SolidConduitDiseaseSensor,
"SolidConduitDiseaseSensor",
9.000,
Params::BuildingConveyance(BuildingConveyance{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
MaterialCategory::Tag(Tag::Plastic),
],
rotations: None,
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(75.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
not_in_rocket: None,
external_heat: None,
links: None,
mode: None,
}));
pub static SolidConduitElementSensor:Entity = Entity::new(
crate::lang::Game::SolidConduitElementSensor,
"SolidConduitElementSensor",
10.000,
Params::BuildingConveyance(BuildingConveyance{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
not_in_rocket: None,
external_heat: None,
links: None,
mode: None,
}));
pub static SolidConduitTemperatureSensor:Entity = Entity::new(
crate::lang::Game::SolidConduitTemperatureSensor,
"SolidConduitTemperatureSensor",
11.000,
Params::BuildingConveyance(BuildingConveyance{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
not_in_rocket: None,
external_heat: None,
links: None,
mode: None,
}));
pub static SolidFilter:Entity = Entity::new(
crate::lang::Game::SolidFilter,
"SolidFilter",
5.000,
Params::BuildingConveyance(BuildingConveyance{
tags: &[
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: Some(Rotation::R360),
electrity_consummation: Some(&[
Some(120.000),
]),
internal_heat: None,
size: crate::units::Size {width: 3, height: 1},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: Some(true),
not_in_rocket: None,
external_heat: None,
links: None,
mode: None,
}));
pub static SolidLimitValve:Entity = Entity::new(
crate::lang::Game::SolidLimitValve,
"SolidLimitValve",
8.000,
Params::BuildingConveyance(BuildingConveyance{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
MaterialCategory::Tag(Tag::Plastic),
],
rotations: Some(Rotation::R360),
electrity_consummation: Some(&[
Some(10.000),
]),
internal_heat: None,
size: crate::units::Size {width: 1, height: 2},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(75.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
not_in_rocket: None,
external_heat: None,
links: None,
mode: None,
}));
pub static SolidLogicValve:Entity = Entity::new(
crate::lang::Game::SolidLogicValve,
"SolidLogicValve",
7.000,
Params::BuildingConveyance(BuildingConveyance{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: Some(Rotation::R360),
electrity_consummation: Some(&[
Some(10.000),
]),
internal_heat: None,
size: crate::units::Size {width: 1, height: 2},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(100.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: Some(true),
not_in_rocket: None,
external_heat: None,
links: None,
mode: None,
}));
pub static SolidTransferArm:Entity = Entity::new(
crate::lang::Game::SolidTransferArm,
"SolidTransferArm",
0.000,
Params::BuildingConveyance(BuildingConveyance{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: Some(Rotation::R360),
electrity_consummation: Some(&[
Some(120.000),
]),
internal_heat: Some(2.000),
size: crate::units::Size {width: 3, height: 1},
hp: 10,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(200.000),
decor: Some(crate::units::Decor {value: -15, radius: 3}),
deconstructable: true,
enableable: Some(true),
not_in_rocket: None,
external_heat: None,
links: None,
mode: None,
}));
pub static SolidVent:Entity = Entity::new(
crate::lang::Game::SolidVent,
"SolidVent",
6.000,
Params::BuildingConveyance(BuildingConveyance{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: None,
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(200.000),
decor: Some(crate::units::Decor {value: -10, radius: 2}),
deconstructable: true,
enableable: Some(true),
not_in_rocket: None,
external_heat: None,
links: None,
mode: None,
}));
pub struct BuildingPower{
pub tags: &'static [Tag],
pub thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree,
pub location_rule: LocationRule,
pub material_category: &'static [MaterialCategory],
pub external_heat: Option<f32>,
pub internal_heat: Option<f32>,
pub size: crate::units::Size,
pub hp: i32,
pub high_temp_warning: Option<crate::units::Temperature>,
pub high_temp_fatal: Option<crate::units::Temperature>,
pub mass: crate::units::Kg,
pub flood_threshold: Option<crate::units::Percent>,
pub decor: Option<crate::units::Decor>,
pub deconstructable: bool,
pub enableable: Option<bool>,
pub generator_wattage_rating: Option<f32>,
pub rotations: Option<Rotation>,
}
pub static Battery:Entity = Entity::new(
crate::lang::Game::Battery,
"Battery",
16.000,
Params::BuildingPower(BuildingPower{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
external_heat: Some(0.250),
internal_heat: Some(1.000),
size: crate::units::Size {width: 1, height: 2},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(200.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: -10, radius: 2}),
deconstructable: true,
enableable: Some(true),
generator_wattage_rating: None,
rotations: None,
}));
pub static BatteryMedium:Entity = Entity::new(
crate::lang::Game::BatteryMedium,
"BatteryMedium",
17.000,
Params::BuildingPower(BuildingPower{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
external_heat: Some(0.250),
internal_heat: Some(1.000),
size: crate::units::Size {width: 2, height: 2},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(400.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: -15, radius: 3}),
deconstructable: true,
enableable: Some(true),
generator_wattage_rating: None,
rotations: None,
}));
pub static BatterySmart:Entity = Entity::new(
crate::lang::Game::BatterySmart,
"BatterySmart",
18.000,
Params::BuildingPower(BuildingPower{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
external_heat: None,
internal_heat: Some(0.500),
size: crate::units::Size {width: 2, height: 2},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(200.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: -15, radius: 3}),
deconstructable: true,
enableable: Some(true),
generator_wattage_rating: None,
rotations: None,
}));
pub static Generator:Entity = Entity::new(
crate::lang::Game::Generator,
"Generator",
1.000,
Params::BuildingPower(BuildingPower{
tags: &[
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
external_heat: Some(8.000),
internal_heat: Some(1.000),
size: crate::units::Size {width: 3, height: 3},
hp: 100,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(800.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: -15, radius: 3}),
deconstructable: true,
enableable: Some(true),
generator_wattage_rating: Some(600.000),
rotations: None,
}));
pub static HydrogenGenerator:Entity = Entity::new(
crate::lang::Game::HydrogenGenerator,
"HydrogenGenerator",
3.000,
Params::BuildingPower(BuildingPower{
tags: &[
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
external_heat: Some(2.000),
internal_heat: Some(2.000),
size: crate::units::Size {width: 4, height: 3},
hp: 100,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(800.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: -15, radius: 3}),
deconstructable: true,
enableable: Some(true),
generator_wattage_rating: Some(800.000),
rotations: None,
}));
pub static LogicPowerRelay:Entity = Entity::new(
crate::lang::Game::LogicPowerRelay,
"LogicPowerRelay",
22.000,
Params::BuildingPower(BuildingPower{
tags: &[
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: 10,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(100.000),
flood_threshold: None,
decor: None,
deconstructable: true,
enableable: None,
generator_wattage_rating: None,
rotations: None,
}));
pub static ManualGenerator:Entity = Entity::new(
crate::lang::Game::ManualGenerator,
"ManualGenerator",
0.000,
Params::BuildingPower(BuildingPower{
tags: &[
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
external_heat: None,
internal_heat: Some(1.000),
size: crate::units::Size {width: 2, height: 2},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(200.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: None,
deconstructable: true,
enableable: Some(true),
generator_wattage_rating: Some(400.000),
rotations: None,
}));
pub static MethaneGenerator:Entity = Entity::new(
crate::lang::Game::MethaneGenerator,
"MethaneGenerator",
4.000,
Params::BuildingPower(BuildingPower{
tags: &[
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
external_heat: Some(2.000),
internal_heat: Some(8.000),
size: crate::units::Size {width: 4, height: 3},
hp: 100,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(800.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: -15, radius: 3}),
deconstructable: true,
enableable: Some(true),
generator_wattage_rating: Some(800.000),
rotations: None,
}));
pub static PetroleumGenerator:Entity = Entity::new(
crate::lang::Game::PetroleumGenerator,
"PetroleumGenerator",
5.000,
Params::BuildingPower(BuildingPower{
tags: &[
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
external_heat: Some(4.000),
internal_heat: Some(16.000),
size: crate::units::Size {width: 3, height: 4},
hp: 100,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(800.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: -15, radius: 3}),
deconstructable: true,
enableable: Some(true),
generator_wattage_rating: Some(2000.000),
rotations: None,
}));
pub static PowerTransformer:Entity = Entity::new(
crate::lang::Game::PowerTransformer,
"PowerTransformer",
20.000,
Params::BuildingPower(BuildingPower{
tags: &[
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
external_heat: None,
internal_heat: Some(1.000),
size: crate::units::Size {width: 3, height: 2},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(200.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: -10, radius: 2}),
deconstructable: true,
enableable: Some(true),
generator_wattage_rating: Some(4000.000),
rotations: Some(Rotation::FlipH),
}));
pub static PowerTransformerSmall:Entity = Entity::new(
crate::lang::Game::PowerTransformerSmall,
"PowerTransformerSmall",
19.000,
Params::BuildingPower(BuildingPower{
tags: &[
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
external_heat: None,
internal_heat: Some(1.000),
size: crate::units::Size {width: 2, height: 2},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(200.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: -10, radius: 2}),
deconstructable: true,
enableable: Some(true),
generator_wattage_rating: Some(1000.000),
rotations: Some(Rotation::FlipH),
}));
pub static SolarPanel:Entity = Entity::new(
crate::lang::Game::SolarPanel,
"SolarPanel",
7.000,
Params::BuildingPower(BuildingPower{
tags: &[
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Solid(&Glass),
],
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 7, height: 3},
hp: 10,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(200.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: -15, radius: 3}),
deconstructable: true,
enableable: Some(true),
generator_wattage_rating: Some(380.000),
rotations: None,
}));
pub static SteamTurbine2:Entity = Entity::new(
crate::lang::Game::SteamTurbine2,
"SteamTurbine2",
6.000,
Params::BuildingPower(BuildingPower{
tags: &[
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
MaterialCategory::Tag(Tag::Plastic),
],
external_heat: None,
internal_heat: Some(4.000),
size: crate::units::Size {width: 5, height: 3},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(1273.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(1000.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: None,
deconstructable: true,
enableable: Some(true),
generator_wattage_rating: Some(850.000),
rotations: Some(Rotation::FlipH),
}));
pub static Switch:Entity = Entity::new(
crate::lang::Game::Switch,
"Switch",
21.000,
Params::BuildingPower(BuildingPower{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: 10,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(100.000),
flood_threshold: None,
decor: None,
deconstructable: true,
enableable: None,
generator_wattage_rating: None,
rotations: None,
}));
pub static WireBridge:Entity = Entity::new(
crate::lang::Game::WireBridge,
"WireBridge",
9.000,
Params::BuildingPower(BuildingPower{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::WireBridge,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 3, height: 1},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
flood_threshold: None,
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
generator_wattage_rating: None,
rotations: Some(Rotation::R360),
}));
pub static WireBridgeHighWattage:Entity = Entity::new(
crate::lang::Game::WireBridgeHighWattage,
"WireBridgeHighWattage",
11.000,
Params::BuildingPower(BuildingPower{
tags: &[
Tag::WireBridges,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::HighWattBridgeTile,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: 100,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(200.000),
flood_threshold: None,
decor: Some(crate::units::Decor {value: -25, radius: 6}),
deconstructable: true,
enableable: None,
generator_wattage_rating: None,
rotations: Some(Rotation::R360),
}));
pub static Wire:Entity = Entity::new(
crate::lang::Game::Wire,
"Wire",
8.000,
Params::BuildingPower(BuildingPower{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.050),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: 10,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
flood_threshold: None,
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
generator_wattage_rating: None,
rotations: None,
}));
pub static HighWattageWire:Entity = Entity::new(
crate::lang::Game::HighWattageWire,
"HighWattageWire",
10.000,
Params::BuildingPower(BuildingPower{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.050),
location_rule: LocationRule::NotInTiles,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: 10,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(100.000),
flood_threshold: None,
decor: Some(crate::units::Decor {value: -25, radius: 6}),
deconstructable: true,
enableable: None,
generator_wattage_rating: None,
rotations: None,
}));
pub static WireRefinedBridge:Entity = Entity::new(
crate::lang::Game::WireRefinedBridge,
"WireRefinedBridge",
13.000,
Params::BuildingPower(BuildingPower{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::WireBridge,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 3, height: 1},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
flood_threshold: None,
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
generator_wattage_rating: None,
rotations: Some(Rotation::R360),
}));
pub static WireRefinedBridgeHighWattage:Entity = Entity::new(
crate::lang::Game::WireRefinedBridgeHighWattage,
"WireRefinedBridgeHighWattage",
15.000,
Params::BuildingPower(BuildingPower{
tags: &[
Tag::WireBridges,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::HighWattBridgeTile,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: 100,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(100.000),
flood_threshold: None,
decor: Some(crate::units::Decor {value: -25, radius: 6}),
deconstructable: true,
enableable: None,
generator_wattage_rating: None,
rotations: Some(Rotation::R360),
}));
pub static WireRefined:Entity = Entity::new(
crate::lang::Game::WireRefined,
"WireRefined",
12.000,
Params::BuildingPower(BuildingPower{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.050),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: 10,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
flood_threshold: None,
decor: None,
deconstructable: true,
enableable: None,
generator_wattage_rating: None,
rotations: None,
}));
pub static WireRefinedHighWattage:Entity = Entity::new(
crate::lang::Game::WireRefinedHighWattage,
"WireRefinedHighWattage",
14.000,
Params::BuildingPower(BuildingPower{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.050),
location_rule: LocationRule::NotInTiles,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: 10,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(100.000),
flood_threshold: None,
decor: Some(crate::units::Decor {value: -20, radius: 4}),
deconstructable: true,
enableable: None,
generator_wattage_rating: None,
rotations: None,
}));
pub static WoodGasGenerator:Entity = Entity::new(
crate::lang::Game::WoodGasGenerator,
"WoodGasGenerator",
2.000,
Params::BuildingPower(BuildingPower{
tags: &[
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
external_heat: Some(8.000),
internal_heat: Some(1.000),
size: crate::units::Size {width: 2, height: 2},
hp: 100,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(800.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: Some(crate::units::Decor {value: -15, radius: 3}),
deconstructable: true,
enableable: Some(true),
generator_wattage_rating: Some(300.000),
rotations: None,
}));
pub struct BuildingPlumbing{
pub tags: &'static [Tag],
pub thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree,
pub location_rule: LocationRule,
pub material_category: &'static [MaterialCategory],
pub rotations: Option<Rotation>,
pub size: crate::units::Size,
pub hp: i32,
pub mass: crate::units::Kg,
pub decor: Option<crate::units::Decor>,
pub deconstructable: bool,
pub enableable: Option<bool>,
pub external_heat: Option<f32>,
pub flood_threshold: Option<crate::units::Percent>,
pub electrity_consummation: Option<&'static [Option<f32>]>,
pub internal_heat: Option<f32>,
pub high_temp_warning: Option<crate::units::Temperature>,
pub high_temp_fatal: Option<crate::units::Temperature>,
pub not_in_rocket: Option<bool>,
pub links: Option<&'static [Link]>,
pub mode: Option<Mode>,
}
pub static BottleEmptier:Entity = Entity::new(
crate::lang::Game::BottleEmptier,
"BottleEmptier",
5.000,
Params::BuildingPlumbing(BuildingPlumbing{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
rotations: Some(Rotation::FlipH),
size: crate::units::Size {width: 1, height: 3},
hp: 30,
mass: crate::units::Kg(400.000),
decor: Some(crate::units::Decor {value: -10, radius: 2}),
deconstructable: true,
enableable: Some(true),
external_heat: None,
flood_threshold: None,
electrity_consummation: None,
internal_heat: None,
high_temp_warning: None,
high_temp_fatal: None,
not_in_rocket: None,
links: None,
mode: None,
}));
pub static LiquidConduitDiseaseSensor:Entity = Entity::new(
crate::lang::Game::LiquidConduitDiseaseSensor,
"LiquidConduitDiseaseSensor",
18.000,
Params::BuildingPlumbing(BuildingPlumbing{
tags: &[
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
MaterialCategory::Tag(Tag::Plastic),
],
rotations: None,
size: crate::units::Size {width: 1, height: 1},
hp: 30,
mass: crate::units::Kg(75.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
external_heat: None,
flood_threshold: None,
electrity_consummation: None,
internal_heat: None,
high_temp_warning: None,
high_temp_fatal: None,
not_in_rocket: None,
links: None,
mode: None,
}));
pub static LiquidConduitElementSensor:Entity = Entity::new(
crate::lang::Game::LiquidConduitElementSensor,
"LiquidConduitElementSensor",
17.000,
Params::BuildingPlumbing(BuildingPlumbing{
tags: &[
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
size: crate::units::Size {width: 1, height: 1},
hp: 30,
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
external_heat: None,
flood_threshold: None,
electrity_consummation: None,
internal_heat: None,
high_temp_warning: None,
high_temp_fatal: None,
not_in_rocket: None,
links: None,
mode: None,
}));
pub static LiquidConduitTemperatureSensor:Entity = Entity::new(
crate::lang::Game::LiquidConduitTemperatureSensor,
"LiquidConduitTemperatureSensor",
19.000,
Params::BuildingPlumbing(BuildingPlumbing{
tags: &[
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
size: crate::units::Size {width: 1, height: 1},
hp: 30,
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
external_heat: None,
flood_threshold: None,
electrity_consummation: None,
internal_heat: None,
high_temp_warning: None,
high_temp_fatal: None,
not_in_rocket: None,
links: None,
mode: None,
}));
pub static ContactConductivePipeBridge:Entity = Entity::new(
crate::lang::Game::ContactConductivePipeBridge,
"ContactConductivePipeBridge",
22.000,
Params::BuildingPlumbing(BuildingPlumbing{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(2.000),
location_rule: LocationRule::NoLiquidConduitAtOrigin,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: Some(Rotation::R360),
size: crate::units::Size {width: 3, height: 1},
hp: 30,
mass: crate::units::Kg(100.000),
decor: None,
deconstructable: true,
enableable: Some(true),
external_heat: None,
flood_threshold: None,
electrity_consummation: None,
internal_heat: None,
high_temp_warning: None,
high_temp_fatal: None,
not_in_rocket: None,
links: None,
mode: None,
}));
pub static FlushToilet:Entity = Entity::new(
crate::lang::Game::FlushToilet,
"FlushToilet",
1.000,
Params::BuildingPlumbing(BuildingPlumbing{
tags: &[
Tag::ToiletType,
Tag::FlushToiletType,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: Some(Rotation::FlipH),
size: crate::units::Size {width: 2, height: 3},
hp: 30,
mass: crate::units::Kg(400.000),
decor: Some(crate::units::Decor {value: -10, radius: 2}),
deconstructable: true,
enableable: Some(true),
external_heat: Some(0.250),
flood_threshold: Some(crate::units::Percent(0.350)),
electrity_consummation: None,
internal_heat: None,
high_temp_warning: None,
high_temp_fatal: None,
not_in_rocket: None,
links: None,
mode: None,
}));
pub static InsulatedLiquidConduit:Entity = Entity::new(
crate::lang::Game::InsulatedLiquidConduit,
"InsulatedLiquidConduit",
7.000,
Params::BuildingPlumbing(BuildingPlumbing{
tags: &[
Tag::Pipes,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.031),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::Plumbable),
],
rotations: None,
size: crate::units::Size {width: 1, height: 1},
hp: 10,
mass: crate::units::Kg(400.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
external_heat: None,
flood_threshold: None,
electrity_consummation: None,
internal_heat: None,
high_temp_warning: None,
high_temp_fatal: None,
not_in_rocket: None,
links: None,
mode: None,
}));
pub static LiquidConduitBridge:Entity = Entity::new(
crate::lang::Game::LiquidConduitBridge,
"LiquidConduitBridge",
9.000,
Params::BuildingPlumbing(BuildingPlumbing{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Conduit,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
rotations: Some(Rotation::R360),
size: crate::units::Size {width: 3, height: 1},
hp: 10,
mass: crate::units::Kg(100.000),
decor: None,
deconstructable: true,
enableable: None,
external_heat: None,
flood_threshold: None,
electrity_consummation: None,
internal_heat: None,
high_temp_warning: None,
high_temp_fatal: None,
not_in_rocket: None,
links: None,
mode: None,
}));
pub static LiquidConduit:Entity = Entity::new(
crate::lang::Game::LiquidConduit,
"LiquidConduit",
6.000,
Params::BuildingPlumbing(BuildingPlumbing{
tags: &[
Tag::Pipes,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::Plumbable),
],
rotations: None,
size: crate::units::Size {width: 1, height: 1},
hp: 10,
mass: crate::units::Kg(100.000),
decor: None,
deconstructable: true,
enableable: None,
external_heat: None,
flood_threshold: None,
electrity_consummation: None,
internal_heat: None,
high_temp_warning: None,
high_temp_fatal: None,
not_in_rocket: None,
links: None,
mode: None,
}));
pub static LiquidConduitRadiant:Entity = Entity::new(
crate::lang::Game::LiquidConduitRadiant,
"LiquidConduitRadiant",
8.000,
Params::BuildingPlumbing(BuildingPlumbing{
tags: &[
Tag::Pipes,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(2.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
size: crate::units::Size {width: 1, height: 1},
hp: 10,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
external_heat: None,
flood_threshold: None,
electrity_consummation: None,
internal_heat: None,
high_temp_warning: None,
high_temp_fatal: None,
not_in_rocket: None,
links: None,
mode: None,
}));
pub static LiquidFilter:Entity = Entity::new(
crate::lang::Game::LiquidFilter,
"LiquidFilter",
13.000,
Params::BuildingPlumbing(BuildingPlumbing{
tags: &[
Tag::IndustrialMachinery,
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: Some(Rotation::R360),
size: crate::units::Size {width: 3, height: 1},
hp: 30,
mass: crate::units::Kg(200.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: Some(true),
external_heat: None,
flood_threshold: None,
electrity_consummation: Some(&[
Some(120.000),
]),
internal_heat: Some(4.000),
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
not_in_rocket: None,
links: None,
mode: None,
}));
pub static LiquidLimitValve:Entity = Entity::new(
crate::lang::Game::LiquidLimitValve,
"LiquidLimitValve",
16.000,
Params::BuildingPlumbing(BuildingPlumbing{
tags: &[
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
MaterialCategory::Tag(Tag::Plastic),
],
rotations: Some(Rotation::R360),
size: crate::units::Size {width: 1, height: 2},
hp: 30,
mass: crate::units::Kg(75.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
external_heat: None,
flood_threshold: None,
electrity_consummation: Some(&[
Some(10.000),
]),
internal_heat: None,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
not_in_rocket: None,
links: None,
mode: None,
}));
pub static LiquidLogicValve:Entity = Entity::new(
crate::lang::Game::LiquidLogicValve,
"LiquidLogicValve",
15.000,
Params::BuildingPlumbing(BuildingPlumbing{
tags: &[
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: Some(Rotation::R360),
size: crate::units::Size {width: 1, height: 2},
hp: 30,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
external_heat: None,
flood_threshold: None,
electrity_consummation: Some(&[
Some(10.000),
]),
internal_heat: None,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
not_in_rocket: None,
links: None,
mode: None,
}));
pub static LiquidMiniPump:Entity = Entity::new(
crate::lang::Game::LiquidMiniPump,
"LiquidMiniPump",
11.000,
Params::BuildingPlumbing(BuildingPlumbing{
tags: &[
Tag::IndustrialMachinery,
Tag::CorrosionProof,
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::Plastic),
],
rotations: Some(Rotation::R360),
size: crate::units::Size {width: 1, height: 2},
hp: 100,
mass: crate::units::Kg(100.000),
decor: Some(crate::units::Decor {value: -10, radius: 2}),
deconstructable: true,
enableable: Some(true),
external_heat: None,
flood_threshold: None,
electrity_consummation: Some(&[
Some(60.000),
]),
internal_heat: Some(0.500),
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
not_in_rocket: None,
links: None,
mode: None,
}));
pub static LiquidPump:Entity = Entity::new(
crate::lang::Game::LiquidPump,
"LiquidPump",
10.000,
Params::BuildingPlumbing(BuildingPlumbing{
tags: &[
Tag::IndustrialMachinery,
Tag::CorrosionProof,
Tag::OverlayBackLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: None,
size: crate::units::Size {width: 2, height: 2},
hp: 100,
mass: crate::units::Kg(400.000),
decor: Some(crate::units::Decor {value: -10, radius: 2}),
deconstructable: true,
enableable: Some(true),
external_heat: None,
flood_threshold: None,
electrity_consummation: Some(&[
Some(240.000),
]),
internal_heat: Some(2.000),
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
not_in_rocket: None,
links: None,
mode: None,
}));
pub static LiquidPumpingStation:Entity = Entity::new(
crate::lang::Game::LiquidPumpingStation,
"LiquidPumpingStation",
4.000,
Params::BuildingPlumbing(BuildingPlumbing{
tags: &[
Tag::CorrosionProof,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
rotations: None,
size: crate::units::Size {width: 2, height: 4},
hp: 100,
mass: crate::units::Kg(400.000),
decor: None,
deconstructable: true,
enableable: Some(true),
external_heat: None,
flood_threshold: None,
electrity_consummation: None,
internal_heat: None,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
not_in_rocket: None,
links: None,
mode: None,
}));
pub static LiquidValve:Entity = Entity::new(
crate::lang::Game::LiquidValve,
"LiquidValve",
14.000,
Params::BuildingPlumbing(BuildingPlumbing{
tags: &[
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: Some(Rotation::R360),
size: crate::units::Size {width: 1, height: 2},
hp: 30,
mass: crate::units::Kg(200.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
external_heat: None,
flood_threshold: None,
electrity_consummation: None,
internal_heat: None,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
not_in_rocket: None,
links: None,
mode: None,
}));
pub static LiquidVent:Entity = Entity::new(
crate::lang::Game::LiquidVent,
"LiquidVent",
12.000,
Params::BuildingPlumbing(BuildingPlumbing{
tags: &[
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: None,
size: crate::units::Size {width: 1, height: 1},
hp: 30,
mass: crate::units::Kg(400.000),
decor: Some(crate::units::Decor {value: -10, radius: 2}),
deconstructable: true,
enableable: Some(true),
external_heat: None,
flood_threshold: None,
electrity_consummation: None,
internal_heat: None,
high_temp_warning: None,
high_temp_fatal: None,
not_in_rocket: None,
links: None,
mode: None,
}));
pub static ModularLaunchpadPortLiquid:Entity = Entity::new(
crate::lang::Game::ModularLaunchpadPortLiquid,
"ModularLaunchpadPortLiquid",
20.000,
Params::BuildingPlumbing(BuildingPlumbing{
tags: &[
Tag::IndustrialMachinery,
Tag::ModularLaunchpadPort,
Tag::ModularConduitPort,
Tag::NotRocketInteriorBuilding,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
size: crate::units::Size {width: 2, height: 2},
hp: 1000,
mass: crate::units::Kg(400.000),
decor: None,
deconstructable: true,
enableable: Some(true),
external_heat: Some(0.250),
flood_threshold: None,
electrity_consummation: Some(&[
Some(240.000),
]),
internal_heat: Some(1.000),
high_temp_warning: Some(crate::units::Temperature(2273.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
not_in_rocket: Some(true),
links: Some(&[
Link::LaunchPad,
Link::ModularLaunchpadPort,
]),
mode: Some(Mode::Load),
}));
pub static ModularLaunchpadPortLiquidUnloader:Entity = Entity::new(
crate::lang::Game::ModularLaunchpadPortLiquidUnloader,
"ModularLaunchpadPortLiquidUnloader",
21.000,
Params::BuildingPlumbing(BuildingPlumbing{
tags: &[
Tag::IndustrialMachinery,
Tag::ModularLaunchpadPort,
Tag::ModularConduitPort,
Tag::NotRocketInteriorBuilding,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
size: crate::units::Size {width: 2, height: 3},
hp: 1000,
mass: crate::units::Kg(400.000),
decor: None,
deconstructable: true,
enableable: Some(true),
external_heat: Some(0.250),
flood_threshold: None,
electrity_consummation: Some(&[
Some(240.000),
]),
internal_heat: Some(1.000),
high_temp_warning: Some(crate::units::Temperature(2273.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
not_in_rocket: Some(true),
links: Some(&[
Link::LaunchPad,
Link::ModularLaunchpadPort,
]),
mode: Some(Mode::Unload),
}));
pub static Outhouse:Entity = Entity::new(
crate::lang::Game::Outhouse,
"Outhouse",
0.000,
Params::BuildingPlumbing(BuildingPlumbing{
tags: &[
Tag::ToiletType,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
rotations: None,
size: crate::units::Size {width: 2, height: 3},
hp: 30,
mass: crate::units::Kg(200.000),
decor: Some(crate::units::Decor {value: -20, radius: 5}),
deconstructable: true,
enableable: Some(true),
external_heat: Some(0.250),
flood_threshold: Some(crate::units::Percent(0.350)),
electrity_consummation: None,
internal_heat: None,
high_temp_warning: None,
high_temp_fatal: None,
not_in_rocket: None,
links: None,
mode: None,
}));
pub static Shower:Entity = Entity::new(
crate::lang::Game::Shower,
"Shower",
3.000,
Params::BuildingPlumbing(BuildingPlumbing{
tags: &[
Tag::WashStation,
Tag::AdvancedWashStation,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: None,
size: crate::units::Size {width: 2, height: 4},
hp: 30,
mass: crate::units::Kg(400.000),
decor: Some(crate::units::Decor {value: 10, radius: 2}),
deconstructable: true,
enableable: Some(true),
external_heat: Some(0.250),
flood_threshold: Some(crate::units::Percent(0.350)),
electrity_consummation: None,
internal_heat: None,
high_temp_warning: None,
high_temp_fatal: None,
not_in_rocket: None,
links: None,
mode: None,
}));
pub static WallToilet:Entity = Entity::new(
crate::lang::Game::WallToilet,
"WallToilet",
2.000,
Params::BuildingPlumbing(BuildingPlumbing{
tags: &[
Tag::ToiletType,
Tag::FlushToiletType,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::WallFloor,
material_category: &[
MaterialCategory::Tag(Tag::Plastic),
],
rotations: Some(Rotation::FlipH),
size: crate::units::Size {width: 1, height: 3},
hp: 30,
mass: crate::units::Kg(100.000),
decor: Some(crate::units::Decor {value: -10, radius: 2}),
deconstructable: true,
enableable: Some(true),
external_heat: Some(0.250),
flood_threshold: Some(crate::units::Percent(0.350)),
electrity_consummation: None,
internal_heat: None,
high_temp_warning: None,
high_temp_fatal: None,
not_in_rocket: None,
links: None,
mode: None,
}));
pub struct BuildingHvac{
pub tags: &'static [Tag],
pub thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree,
pub location_rule: LocationRule,
pub material_category: &'static [MaterialCategory],
pub rotations: Option<Rotation>,
pub size: crate::units::Size,
pub hp: i32,
pub mass: crate::units::Kg,
pub decor: Option<crate::units::Decor>,
pub deconstructable: bool,
pub enableable: Option<bool>,
pub high_temp_warning: Option<crate::units::Temperature>,
pub high_temp_fatal: Option<crate::units::Temperature>,
pub electrity_consummation: Option<&'static [Option<f32>]>,
pub flood_threshold: Option<crate::units::Percent>,
pub not_in_rocket: Option<bool>,
pub external_heat: Option<f32>,
pub internal_heat: Option<f32>,
pub links: Option<&'static [Link]>,
pub mode: Option<Mode>,
}
pub static BottleEmptierGas:Entity = Entity::new(
crate::lang::Game::BottleEmptierGas,
"BottleEmptierGas",
13.000,
Params::BuildingHvac(BuildingHvac{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: Some(Rotation::FlipH),
size: crate::units::Size {width: 1, height: 3},
hp: 30,
mass: crate::units::Kg(100.000),
decor: Some(crate::units::Decor {value: -15, radius: 3}),
deconstructable: true,
enableable: Some(true),
high_temp_warning: None,
high_temp_fatal: None,
electrity_consummation: None,
flood_threshold: None,
not_in_rocket: None,
external_heat: None,
internal_heat: None,
links: None,
mode: None,
}));
pub static GasConduitDiseaseSensor:Entity = Entity::new(
crate::lang::Game::GasConduitDiseaseSensor,
"GasConduitDiseaseSensor",
17.000,
Params::BuildingHvac(BuildingHvac{
tags: &[
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
MaterialCategory::Tag(Tag::Plastic),
],
rotations: None,
size: crate::units::Size {width: 1, height: 1},
hp: 30,
mass: crate::units::Kg(75.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
high_temp_warning: None,
high_temp_fatal: None,
electrity_consummation: None,
flood_threshold: None,
not_in_rocket: None,
external_heat: None,
internal_heat: None,
links: None,
mode: None,
}));
pub static GasConduitElementSensor:Entity = Entity::new(
crate::lang::Game::GasConduitElementSensor,
"GasConduitElementSensor",
16.000,
Params::BuildingHvac(BuildingHvac{
tags: &[
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
size: crate::units::Size {width: 1, height: 1},
hp: 30,
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
high_temp_warning: None,
high_temp_fatal: None,
electrity_consummation: None,
flood_threshold: None,
not_in_rocket: None,
external_heat: None,
internal_heat: None,
links: None,
mode: None,
}));
pub static GasConduitTemperatureSensor:Entity = Entity::new(
crate::lang::Game::GasConduitTemperatureSensor,
"GasConduitTemperatureSensor",
18.000,
Params::BuildingHvac(BuildingHvac{
tags: &[
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
size: crate::units::Size {width: 1, height: 1},
hp: 30,
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
high_temp_warning: None,
high_temp_fatal: None,
electrity_consummation: None,
flood_threshold: None,
not_in_rocket: None,
external_heat: None,
internal_heat: None,
links: None,
mode: None,
}));
pub static GasBottler:Entity = Entity::new(
crate::lang::Game::GasBottler,
"GasBottler",
12.000,
Params::BuildingHvac(BuildingHvac{
tags: &[
Tag::OverlayBackLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: None,
size: crate::units::Size {width: 3, height: 2},
hp: 100,
mass: crate::units::Kg(400.000),
decor: Some(crate::units::Decor {value: -10, radius: 2}),
deconstructable: true,
enableable: Some(true),
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
electrity_consummation: None,
flood_threshold: None,
not_in_rocket: None,
external_heat: None,
internal_heat: None,
links: None,
mode: None,
}));
pub static GasConduitBridge:Entity = Entity::new(
crate::lang::Game::GasConduitBridge,
"GasConduitBridge",
3.000,
Params::BuildingHvac(BuildingHvac{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Conduit,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
rotations: Some(Rotation::R360),
size: crate::units::Size {width: 3, height: 1},
hp: 10,
mass: crate::units::Kg(50.000),
decor: None,
deconstructable: true,
enableable: None,
high_temp_warning: None,
high_temp_fatal: None,
electrity_consummation: None,
flood_threshold: None,
not_in_rocket: None,
external_heat: None,
internal_heat: None,
links: None,
mode: None,
}));
pub static GasConduit:Entity = Entity::new(
crate::lang::Game::GasConduit,
"GasConduit",
0.000,
Params::BuildingHvac(BuildingHvac{
tags: &[
Tag::Vents,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
rotations: None,
size: crate::units::Size {width: 1, height: 1},
hp: 10,
mass: crate::units::Kg(25.000),
decor: None,
deconstructable: true,
enableable: None,
high_temp_warning: None,
high_temp_fatal: None,
electrity_consummation: None,
flood_threshold: None,
not_in_rocket: None,
external_heat: None,
internal_heat: None,
links: None,
mode: None,
}));
pub static GasConduitRadiant:Entity = Entity::new(
crate::lang::Game::GasConduitRadiant,
"GasConduitRadiant",
2.000,
Params::BuildingHvac(BuildingHvac{
tags: &[
Tag::Vents,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(2.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: None,
size: crate::units::Size {width: 1, height: 1},
hp: 10,
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
high_temp_warning: None,
high_temp_fatal: None,
electrity_consummation: None,
flood_threshold: None,
not_in_rocket: None,
external_heat: None,
internal_heat: None,
links: None,
mode: None,
}));
pub static GasFilter:Entity = Entity::new(
crate::lang::Game::GasFilter,
"GasFilter",
8.000,
Params::BuildingHvac(BuildingHvac{
tags: &[
Tag::IndustrialMachinery,
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: Some(Rotation::R360),
size: crate::units::Size {width: 3, height: 1},
hp: 30,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: Some(true),
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
electrity_consummation: Some(&[
Some(120.000),
]),
flood_threshold: None,
not_in_rocket: None,
external_heat: None,
internal_heat: None,
links: None,
mode: None,
}));
pub static GasLimitValve:Entity = Entity::new(
crate::lang::Game::GasLimitValve,
"GasLimitValve",
11.000,
Params::BuildingHvac(BuildingHvac{
tags: &[
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
MaterialCategory::Tag(Tag::Plastic),
],
rotations: Some(Rotation::R360),
size: crate::units::Size {width: 1, height: 2},
hp: 30,
mass: crate::units::Kg(75.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
electrity_consummation: Some(&[
Some(10.000),
]),
flood_threshold: None,
not_in_rocket: None,
external_heat: None,
internal_heat: None,
links: None,
mode: None,
}));
pub static GasLogicValve:Entity = Entity::new(
crate::lang::Game::GasLogicValve,
"GasLogicValve",
10.000,
Params::BuildingHvac(BuildingHvac{
tags: &[
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: Some(Rotation::R360),
size: crate::units::Size {width: 1, height: 2},
hp: 30,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
electrity_consummation: Some(&[
Some(10.000),
]),
flood_threshold: None,
not_in_rocket: None,
external_heat: None,
internal_heat: None,
links: None,
mode: None,
}));
pub static GasMiniPump:Entity = Entity::new(
crate::lang::Game::GasMiniPump,
"GasMiniPump",
5.000,
Params::BuildingHvac(BuildingHvac{
tags: &[
Tag::IndustrialMachinery,
Tag::OverlayBackLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::Plastic),
],
rotations: Some(Rotation::R360),
size: crate::units::Size {width: 1, height: 2},
hp: 30,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: -10, radius: 2}),
deconstructable: true,
enableable: Some(true),
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
electrity_consummation: Some(&[
Some(60.000),
]),
flood_threshold: Some(crate::units::Percent(0.350)),
not_in_rocket: None,
external_heat: None,
internal_heat: None,
links: None,
mode: None,
}));
pub static GasPump:Entity = Entity::new(
crate::lang::Game::GasPump,
"GasPump",
4.000,
Params::BuildingHvac(BuildingHvac{
tags: &[
Tag::IndustrialMachinery,
Tag::OverlayBackLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: None,
size: crate::units::Size {width: 2, height: 2},
hp: 30,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: -10, radius: 2}),
deconstructable: true,
enableable: Some(true),
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
electrity_consummation: Some(&[
Some(240.000),
]),
flood_threshold: Some(crate::units::Percent(0.350)),
not_in_rocket: None,
external_heat: None,
internal_heat: None,
links: None,
mode: None,
}));
pub static GasValve:Entity = Entity::new(
crate::lang::Game::GasValve,
"GasValve",
9.000,
Params::BuildingHvac(BuildingHvac{
tags: &[
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: Some(Rotation::R360),
size: crate::units::Size {width: 1, height: 2},
hp: 30,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
electrity_consummation: None,
flood_threshold: None,
not_in_rocket: None,
external_heat: None,
internal_heat: None,
links: None,
mode: None,
}));
pub static GasVent:Entity = Entity::new(
crate::lang::Game::GasVent,
"GasVent",
6.000,
Params::BuildingHvac(BuildingHvac{
tags: &[
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: None,
size: crate::units::Size {width: 1, height: 1},
hp: 30,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: -10, radius: 2}),
deconstructable: true,
enableable: Some(true),
high_temp_warning: None,
high_temp_fatal: None,
electrity_consummation: None,
flood_threshold: None,
not_in_rocket: None,
external_heat: None,
internal_heat: None,
links: None,
mode: None,
}));
pub static GasVentHighPressure:Entity = Entity::new(
crate::lang::Game::GasVentHighPressure,
"GasVentHighPressure",
7.000,
Params::BuildingHvac(BuildingHvac{
tags: &[
Tag::IndustrialMachinery,
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
MaterialCategory::Tag(Tag::Plastic),
],
rotations: None,
size: crate::units::Size {width: 1, height: 1},
hp: 30,
mass: crate::units::Kg(250.000),
decor: Some(crate::units::Decor {value: -10, radius: 2}),
deconstructable: true,
enableable: Some(true),
high_temp_warning: None,
high_temp_fatal: None,
electrity_consummation: None,
flood_threshold: None,
not_in_rocket: None,
external_heat: None,
internal_heat: None,
links: None,
mode: None,
}));
pub static InsulatedGasConduit:Entity = Entity::new(
crate::lang::Game::InsulatedGasConduit,
"InsulatedGasConduit",
1.000,
Params::BuildingHvac(BuildingHvac{
tags: &[
Tag::Vents,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.031),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
rotations: None,
size: crate::units::Size {width: 1, height: 1},
hp: 10,
mass: crate::units::Kg(400.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
high_temp_warning: None,
high_temp_fatal: None,
electrity_consummation: None,
flood_threshold: None,
not_in_rocket: None,
external_heat: None,
internal_heat: None,
links: None,
mode: None,
}));
pub static ModularLaunchpadPortGas:Entity = Entity::new(
crate::lang::Game::ModularLaunchpadPortGas,
"ModularLaunchpadPortGas",
14.000,
Params::BuildingHvac(BuildingHvac{
tags: &[
Tag::IndustrialMachinery,
Tag::ModularLaunchpadPort,
Tag::ModularConduitPort,
Tag::NotRocketInteriorBuilding,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
size: crate::units::Size {width: 2, height: 2},
hp: 1000,
mass: crate::units::Kg(400.000),
decor: None,
deconstructable: true,
enableable: Some(true),
high_temp_warning: Some(crate::units::Temperature(2273.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
electrity_consummation: Some(&[
Some(240.000),
]),
flood_threshold: None,
not_in_rocket: Some(true),
external_heat: Some(0.250),
internal_heat: Some(1.000),
links: Some(&[
Link::LaunchPad,
Link::ModularLaunchpadPort,
]),
mode: Some(Mode::Load),
}));
pub static ModularLaunchpadPortGasUnloader:Entity = Entity::new(
crate::lang::Game::ModularLaunchpadPortGasUnloader,
"ModularLaunchpadPortGasUnloader",
15.000,
Params::BuildingHvac(BuildingHvac{
tags: &[
Tag::IndustrialMachinery,
Tag::ModularLaunchpadPort,
Tag::ModularConduitPort,
Tag::NotRocketInteriorBuilding,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
size: crate::units::Size {width: 2, height: 3},
hp: 1000,
mass: crate::units::Kg(400.000),
decor: None,
deconstructable: true,
enableable: Some(true),
high_temp_warning: Some(crate::units::Temperature(2273.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
electrity_consummation: Some(&[
Some(240.000),
]),
flood_threshold: None,
not_in_rocket: Some(true),
external_heat: Some(0.250),
internal_heat: Some(1.000),
links: Some(&[
Link::LaunchPad,
Link::ModularLaunchpadPort,
]),
mode: Some(Mode::Unload),
}));
pub struct BuildingBase{
pub tags: &'static [Tag],
pub thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree,
pub location_rule: LocationRule,
pub material_category: &'static [MaterialCategory],
pub rotations: Option<Rotation>,
pub electrity_consummation: Option<&'static [Option<f32>]>,
pub size: crate::units::Size,
pub hp: i32,
pub high_temp_warning: Option<crate::units::Temperature>,
pub high_temp_fatal: Option<crate::units::Temperature>,
pub mass: crate::units::Kg,
pub flood_threshold: Option<crate::units::Percent>,
pub deconstructable: bool,
pub decor: Option<crate::units::Decor>,
pub enableable: Option<bool>,
pub transparent: Option<bool>,
pub external_heat: Option<f32>,
}
pub static BunkerDoor:Entity = Entity::new(
crate::lang::Game::BunkerDoor,
"BunkerDoor",
18.000,
Params::BuildingBase(BuildingBase{
tags: &[
Tag::Bunker,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Tile,
material_category: &[
MaterialCategory::Solid(&Steel),
],
rotations: Some(Rotation::R90),
electrity_consummation: Some(&[
Some(120.000),
]),
size: crate::units::Size {width: 4, height: 1},
hp: 1000,
high_temp_warning: Some(crate::units::Temperature(1273.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(500.000),
flood_threshold: Some(crate::units::Percent(0.350)),
deconstructable: true,
decor: None,
enableable: None,
transparent: None,
external_heat: None,
}));
pub static BunkerTile:Entity = Entity::new(
crate::lang::Game::BunkerTile,
"BunkerTile",
11.000,
Params::BuildingBase(BuildingBase{
tags: &[
Tag::Bunker,
Tag::FloorTiles,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Tile,
material_category: &[
MaterialCategory::Solid(&Steel),
],
rotations: None,
electrity_consummation: None,
size: crate::units::Size {width: 1, height: 1},
hp: 1000,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(100.000),
flood_threshold: None,
deconstructable: true,
decor: Some(crate::units::Decor {value: 5, radius: 1}),
enableable: None,
transparent: None,
external_heat: None,
}));
pub static CarpetTile:Entity = Entity::new(
crate::lang::Game::CarpetTile,
"CarpetTile",
12.000,
Params::BuildingBase(BuildingBase{
tags: &[
Tag::FloorTiles,
Tag::Carpeted,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Tile,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
MaterialCategory::Tag(Tag::BuildingFiber),
],
rotations: None,
electrity_consummation: None,
size: crate::units::Size {width: 1, height: 1},
hp: 100,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(202.000),
flood_threshold: None,
deconstructable: true,
decor: Some(crate::units::Decor {value: 20, radius: 4}),
enableable: None,
transparent: None,
external_heat: None,
}));
pub static Door:Entity = Entity::new(
crate::lang::Game::Door,
"Door",
15.000,
Params::BuildingBase(BuildingBase{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Tile,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: Some(Rotation::R90),
electrity_consummation: None,
size: crate::units::Size {width: 1, height: 2},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(100.000),
flood_threshold: None,
deconstructable: true,
decor: None,
enableable: None,
transparent: None,
external_heat: None,
}));
pub static ExobaseHeadquarters:Entity = Entity::new(
crate::lang::Game::ExobaseHeadquarters,
"ExobaseHeadquarters",
14.000,
Params::BuildingBase(BuildingBase{
tags: &[
Tag::Telepad,
Tag::LightSource,
Tag::Experimental,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
rotations: None,
electrity_consummation: None,
size: crate::units::Size {width: 3, height: 3},
hp: 250,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(50.000),
flood_threshold: None,
deconstructable: true,
decor: Some(crate::units::Decor {value: 30, radius: 6}),
enableable: Some(true),
transparent: None,
external_heat: None,
}));
pub static ExteriorWall:Entity = Entity::new(
crate::lang::Game::ExteriorWall,
"ExteriorWall",
13.000,
Params::BuildingBase(BuildingBase{
tags: &[
Tag::Backwall,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::NotInTiles,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
rotations: Some(Rotation::R360),
electrity_consummation: None,
size: crate::units::Size {width: 1, height: 1},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(100.000),
flood_threshold: None,
deconstructable: true,
decor: Some(crate::units::Decor {value: 10, radius: 0}),
enableable: None,
transparent: None,
external_heat: None,
}));
pub static FirePole:Entity = Entity::new(
crate::lang::Game::FirePole,
"FirePole",
1.000,
Params::BuildingBase(BuildingBase{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: None,
electrity_consummation: None,
size: crate::units::Size {width: 1, height: 1},
hp: 10,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(100.000),
flood_threshold: None,
deconstructable: true,
decor: Some(crate::units::Decor {value: -5, radius: 1}),
enableable: None,
transparent: None,
external_heat: None,
}));
pub static GasPermeableMembrane:Entity = Entity::new(
crate::lang::Game::GasPermeableMembrane,
"GasPermeableMembrane",
4.000,
Params::BuildingBase(BuildingBase{
tags: &[
Tag::FloorTiles,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Tile,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: None,
electrity_consummation: None,
size: crate::units::Size {width: 1, height: 1},
hp: 100,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(100.000),
flood_threshold: None,
deconstructable: true,
decor: Some(crate::units::Decor {value: -5, radius: 1}),
enableable: None,
transparent: None,
external_heat: None,
}));
pub static GasReservoir:Entity = Entity::new(
crate::lang::Game::GasReservoir,
"GasReservoir",
22.000,
Params::BuildingBase(BuildingBase{
tags: &[
Tag::OverlayBackLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: None,
electrity_consummation: None,
size: crate::units::Size {width: 5, height: 3},
hp: 100,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(400.000),
flood_threshold: None,
deconstructable: true,
decor: Some(crate::units::Decor {value: -10, radius: 2}),
enableable: Some(true),
transparent: None,
external_heat: None,
}));
pub static GlassTile:Entity = Entity::new(
crate::lang::Game::GlassTile,
"GlassTile",
9.000,
Params::BuildingBase(BuildingBase{
tags: &[
Tag::Window,
Tag::FloorTiles,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Tile,
material_category: &[
MaterialCategory::Tag(Tag::Transparent),
],
rotations: None,
electrity_consummation: None,
size: crate::units::Size {width: 1, height: 1},
hp: 100,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(100.000),
flood_threshold: None,
deconstructable: true,
decor: Some(crate::units::Decor {value: 5, radius: 1}),
enableable: None,
transparent: Some(true),
external_heat: None,
}));
pub static InsulationTile:Entity = Entity::new(
crate::lang::Game::InsulationTile,
"InsulationTile",
6.000,
Params::BuildingBase(BuildingBase{
tags: &[
Tag::FloorTiles,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.010),
location_rule: LocationRule::Tile,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
rotations: None,
electrity_consummation: None,
size: crate::units::Size {width: 1, height: 1},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(400.000),
flood_threshold: None,
deconstructable: true,
decor: Some(crate::units::Decor {value: -5, radius: 1}),
enableable: None,
transparent: None,
external_heat: None,
}));
pub static Ladder:Entity = Entity::new(
crate::lang::Game::Ladder,
"Ladder",
0.000,
Params::BuildingBase(BuildingBase{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
rotations: None,
electrity_consummation: None,
size: crate::units::Size {width: 1, height: 1},
hp: 10,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(100.000),
flood_threshold: None,
deconstructable: true,
decor: Some(crate::units::Decor {value: -5, radius: 1}),
enableable: None,
transparent: None,
external_heat: None,
}));
pub static LadderFast:Entity = Entity::new(
crate::lang::Game::LadderFast,
"LadderFast",
2.000,
Params::BuildingBase(BuildingBase{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::Plastic),
],
rotations: None,
electrity_consummation: None,
size: crate::units::Size {width: 1, height: 1},
hp: 10,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(50.000),
flood_threshold: None,
deconstructable: true,
decor: Some(crate::units::Decor {value: -5, radius: 1}),
enableable: None,
transparent: None,
external_heat: None,
}));
pub static LiquidReservoir:Entity = Entity::new(
crate::lang::Game::LiquidReservoir,
"LiquidReservoir",
21.000,
Params::BuildingBase(BuildingBase{
tags: &[
Tag::OverlayBackLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: None,
electrity_consummation: None,
size: crate::units::Size {width: 2, height: 3},
hp: 100,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(400.000),
flood_threshold: None,
deconstructable: true,
decor: Some(crate::units::Decor {value: -10, radius: 2}),
enableable: Some(true),
transparent: None,
external_heat: None,
}));
pub static ManualPressureDoor:Entity = Entity::new(
crate::lang::Game::ManualPressureDoor,
"ManualPressureDoor",
16.000,
Params::BuildingBase(BuildingBase{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Tile,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: Some(Rotation::R90),
electrity_consummation: None,
size: crate::units::Size {width: 1, height: 2},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(200.000),
flood_threshold: None,
deconstructable: true,
decor: Some(crate::units::Decor {value: -15, radius: 3}),
enableable: None,
transparent: None,
external_heat: None,
}));
pub static MeshTile:Entity = Entity::new(
crate::lang::Game::MeshTile,
"MeshTile",
5.000,
Params::BuildingBase(BuildingBase{
tags: &[
Tag::FloorTiles,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Tile,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: None,
electrity_consummation: None,
size: crate::units::Size {width: 1, height: 1},
hp: 100,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(100.000),
flood_threshold: None,
deconstructable: true,
decor: Some(crate::units::Decor {value: -5, radius: 1}),
enableable: None,
transparent: None,
external_heat: None,
}));
pub static MetalTile:Entity = Entity::new(
crate::lang::Game::MetalTile,
"MetalTile",
8.000,
Params::BuildingBase(BuildingBase{
tags: &[
Tag::FloorTiles,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Tile,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
electrity_consummation: None,
size: crate::units::Size {width: 1, height: 1},
hp: 100,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(100.000),
flood_threshold: None,
deconstructable: true,
decor: Some(crate::units::Decor {value: 15, radius: 3}),
enableable: None,
transparent: None,
external_heat: None,
}));
pub static ObjectDispenser:Entity = Entity::new(
crate::lang::Game::ObjectDispenser,
"ObjectDispenser",
23.000,
Params::BuildingBase(BuildingBase{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: Some(Rotation::FlipH),
electrity_consummation: Some(&[
Some(60.000),
]),
size: crate::units::Size {width: 1, height: 2},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(400.000),
flood_threshold: None,
deconstructable: true,
decor: Some(crate::units::Decor {value: -10, radius: 2}),
enableable: Some(true),
transparent: None,
external_heat: Some(0.125),
}));
pub static PlasticTile:Entity = Entity::new(
crate::lang::Game::PlasticTile,
"PlasticTile",
7.000,
Params::BuildingBase(BuildingBase{
tags: &[
Tag::FloorTiles,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Tile,
material_category: &[
MaterialCategory::Tag(Tag::Plastic),
],
rotations: None,
electrity_consummation: None,
size: crate::units::Size {width: 1, height: 1},
hp: 100,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(100.000),
flood_threshold: None,
deconstructable: true,
decor: Some(crate::units::Decor {value: 5, radius: 1}),
enableable: None,
transparent: None,
external_heat: None,
}));
pub static PressureDoor:Entity = Entity::new(
crate::lang::Game::PressureDoor,
"PressureDoor",
17.000,
Params::BuildingBase(BuildingBase{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Tile,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
rotations: Some(Rotation::R90),
electrity_consummation: Some(&[
Some(120.000),
]),
size: crate::units::Size {width: 1, height: 2},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(400.000),
flood_threshold: None,
deconstructable: true,
decor: Some(crate::units::Decor {value: -10, radius: 2}),
enableable: None,
transparent: None,
external_heat: None,
}));
pub static StorageLocker:Entity = Entity::new(
crate::lang::Game::StorageLocker,
"StorageLocker",
19.000,
Params::BuildingBase(BuildingBase{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
rotations: None,
electrity_consummation: None,
size: crate::units::Size {width: 1, height: 2},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(400.000),
flood_threshold: None,
deconstructable: true,
decor: Some(crate::units::Decor {value: -10, radius: 2}),
enableable: Some(true),
transparent: None,
external_heat: None,
}));
pub static StorageLockerSmart:Entity = Entity::new(
crate::lang::Game::StorageLockerSmart,
"StorageLockerSmart",
20.000,
Params::BuildingBase(BuildingBase{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
electrity_consummation: Some(&[
Some(60.000),
]),
size: crate::units::Size {width: 1, height: 2},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(200.000),
flood_threshold: None,
deconstructable: true,
decor: Some(crate::units::Decor {value: -10, radius: 2}),
enableable: Some(true),
transparent: None,
external_heat: Some(0.125),
}));
pub static StorageTile:Entity = Entity::new(
crate::lang::Game::StorageTile,
"StorageTile",
10.000,
Params::BuildingBase(BuildingBase{
tags: &[
Tag::FloorTiles,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Tile,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
MaterialCategory::Solid(&Glass),
],
rotations: None,
electrity_consummation: None,
size: crate::units::Size {width: 1, height: 1},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(200.000),
flood_threshold: None,
deconstructable: true,
decor: Some(crate::units::Decor {value: -10, radius: 2}),
enableable: None,
transparent: None,
external_heat: None,
}));
pub static Tile:Entity = Entity::new(
crate::lang::Game::Tile,
"Tile",
3.000,
Params::BuildingBase(BuildingBase{
tags: &[
Tag::FloorTiles,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Tile,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
rotations: None,
electrity_consummation: None,
size: crate::units::Size {width: 1, height: 1},
hp: 100,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(200.000),
flood_threshold: None,
deconstructable: true,
decor: Some(crate::units::Decor {value: 5, radius: 1}),
enableable: None,
transparent: None,
external_heat: None,
}));
pub static TravelTube:Entity = Entity::new(
crate::lang::Game::TravelTube,
"TravelTube",
24.000,
Params::BuildingBase(BuildingBase{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::NotInTiles,
material_category: &[
MaterialCategory::Tag(Tag::Plastic),
],
rotations: None,
electrity_consummation: None,
size: crate::units::Size {width: 1, height: 1},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(50.000),
flood_threshold: None,
deconstructable: true,
decor: Some(crate::units::Decor {value: 5, radius: 1}),
enableable: None,
transparent: None,
external_heat: None,
}));
pub static TravelTubeEntrance:Entity = Entity::new(
crate::lang::Game::TravelTubeEntrance,
"TravelTubeEntrance",
25.000,
Params::BuildingBase(BuildingBase{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
electrity_consummation: Some(&[
Some(960.000),
]),
size: crate::units::Size {width: 3, height: 2},
hp: 100,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(800.000),
flood_threshold: Some(crate::units::Percent(0.350)),
deconstructable: true,
decor: Some(crate::units::Decor {value: -10, radius: 2}),
enableable: Some(true),
transparent: None,
external_heat: None,
}));
pub static TravelTubeWallBridge:Entity = Entity::new(
crate::lang::Game::TravelTubeWallBridge,
"TravelTubeWallBridge",
26.000,
Params::BuildingBase(BuildingBase{
tags: &[
Tag::TravelTubeBridges,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Tile,
material_category: &[
MaterialCategory::Tag(Tag::Plastic),
],
rotations: Some(Rotation::R90),
electrity_consummation: None,
size: crate::units::Size {width: 1, height: 1},
hp: 100,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(100.000),
flood_threshold: None,
deconstructable: true,
decor: None,
enableable: None,
transparent: None,
external_heat: None,
}));
pub struct BuildingAutomation{
pub tags: &'static [Tag],
pub thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree,
pub location_rule: LocationRule,
pub material_category: &'static [MaterialCategory],
pub rotations: Option<Rotation>,
pub electrity_consummation: Option<&'static [Option<f32>]>,
pub internal_heat: Option<f32>,
pub size: crate::units::Size,
pub hp: i32,
pub high_temp_warning: Option<crate::units::Temperature>,
pub high_temp_fatal: Option<crate::units::Temperature>,
pub mass: crate::units::Kg,
pub decor: Option<crate::units::Decor>,
pub deconstructable: bool,
pub enableable: Option<bool>,
pub flood_threshold: Option<crate::units::Percent>,
}
pub static Checkpoint:Entity = Entity::new(
crate::lang::Game::Checkpoint,
"Checkpoint",
27.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: Some(Rotation::FlipH),
electrity_consummation: Some(&[
Some(10.000),
]),
internal_heat: Some(0.500),
size: crate::units::Size {width: 1, height: 3},
hp: 30,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(100.000),
decor: Some(crate::units::Decor {value: 10, radius: 2}),
deconstructable: true,
enableable: Some(true),
flood_threshold: None,
}));
pub static CometDetector:Entity = Entity::new(
crate::lang::Game::CometDetector,
"CometDetector",
28.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
Tag::IndustrialMachinery,
Tag::OverlayBackLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
electrity_consummation: Some(&[
Some(120.000),
]),
internal_heat: None,
size: crate::units::Size {width: 2, height: 4},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: Some(true),
flood_threshold: Some(crate::units::Percent(0.350)),
}));
pub static FloorSwitch:Entity = Entity::new(
crate::lang::Game::FloorSwitch,
"FloorSwitch",
26.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Tile,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
flood_threshold: None,
}));
pub static LogicAlarm:Entity = Entity::new(
crate::lang::Game::LogicAlarm,
"LogicAlarm",
20.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
flood_threshold: None,
}));
pub static LogicCounter:Entity = Entity::new(
crate::lang::Game::LogicCounter,
"LogicCounter",
19.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: Some(Rotation::FlipV),
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 3},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
flood_threshold: None,
}));
pub static LogicCritterCountSensor:Entity = Entity::new(
crate::lang::Game::LogicCritterCountSensor,
"LogicCritterCountSensor",
16.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
flood_threshold: None,
}));
pub static LogicDiseaseSensor:Entity = Entity::new(
crate::lang::Game::LogicDiseaseSensor,
"LogicDiseaseSensor",
13.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
MaterialCategory::Tag(Tag::Plastic),
],
rotations: None,
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(75.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
flood_threshold: None,
}));
pub static LogicDuplicantSensor:Entity = Entity::new(
crate::lang::Game::LogicDuplicantSensor,
"LogicDuplicantSensor",
5.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFoundationRotatable,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: Some(Rotation::R360),
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
flood_threshold: None,
}));
pub static LogicElementSensorGas:Entity = Entity::new(
crate::lang::Game::LogicElementSensorGas,
"LogicElementSensorGas",
14.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: Some(true),
flood_threshold: Some(crate::units::Percent(0.350)),
}));
pub static LogicElementSensorLiquid:Entity = Entity::new(
crate::lang::Game::LogicElementSensorLiquid,
"LogicElementSensorLiquid",
15.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: Some(true),
flood_threshold: None,
}));
pub static LogicGateAND:Entity = Entity::new(
crate::lang::Game::LogicGateAND,
"LogicGateAND",
30.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
Tag::OverlayBackLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.050),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: Some(Rotation::R360),
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 2, height: 2},
hp: 10,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
flood_threshold: None,
}));
pub static LogicGateOR:Entity = Entity::new(
crate::lang::Game::LogicGateOR,
"LogicGateOR",
31.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
Tag::OverlayBackLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.050),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: Some(Rotation::R360),
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 2, height: 2},
hp: 10,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
flood_threshold: None,
}));
pub static LogicGateXOR:Entity = Entity::new(
crate::lang::Game::LogicGateXOR,
"LogicGateXOR",
34.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
Tag::OverlayBackLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.050),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: Some(Rotation::R360),
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 2, height: 2},
hp: 10,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
flood_threshold: None,
}));
pub static LogicGateNOT:Entity = Entity::new(
crate::lang::Game::LogicGateNOT,
"LogicGateNOT",
29.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
Tag::OverlayBackLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.050),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: Some(Rotation::R360),
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 2, height: 1},
hp: 10,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
flood_threshold: None,
}));
pub static LogicGateBUFFER:Entity = Entity::new(
crate::lang::Game::LogicGateBUFFER,
"LogicGateBUFFER",
32.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
Tag::OverlayBackLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.050),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: Some(Rotation::R360),
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 2, height: 1},
hp: 10,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
flood_threshold: None,
}));
pub static LogicGateFILTER:Entity = Entity::new(
crate::lang::Game::LogicGateFILTER,
"LogicGateFILTER",
33.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
Tag::OverlayBackLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.050),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: Some(Rotation::R360),
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 2, height: 1},
hp: 10,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
flood_threshold: None,
}));
pub static LogicGateMultiplexer:Entity = Entity::new(
crate::lang::Game::LogicGateMultiplexer,
"LogicGateMultiplexer",
36.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
Tag::OverlayBackLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.050),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: Some(Rotation::R360),
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 3, height: 4},
hp: 10,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
flood_threshold: None,
}));
pub static LogicGateDemultiplexer:Entity = Entity::new(
crate::lang::Game::LogicGateDemultiplexer,
"LogicGateDemultiplexer",
37.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
Tag::OverlayBackLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.050),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: Some(Rotation::R360),
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 3, height: 4},
hp: 10,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
flood_threshold: None,
}));
pub static LogicHEPSensor:Entity = Entity::new(
crate::lang::Game::LogicHEPSensor,
"LogicHEPSensor",
18.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
flood_threshold: None,
}));
pub static LogicHammer:Entity = Entity::new(
crate::lang::Game::LogicHammer,
"LogicHammer",
21.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: Some(Rotation::R360),
electrity_consummation: Some(&[
Some(60.000),
]),
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: Some(true),
flood_threshold: None,
}));
pub static LogicInterasteroidReceiver:Entity = Entity::new(
crate::lang::Game::LogicInterasteroidReceiver,
"LogicInterasteroidReceiver",
23.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(100.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: Some(true),
flood_threshold: None,
}));
pub static LogicInterasteroidSender:Entity = Entity::new(
crate::lang::Game::LogicInterasteroidSender,
"LogicInterasteroidSender",
22.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(100.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: Some(true),
flood_threshold: None,
}));
pub static LogicLightSensor:Entity = Entity::new(
crate::lang::Game::LogicLightSensor,
"LogicLightSensor",
9.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
MaterialCategory::Tag(Tag::Transparent),
],
rotations: None,
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
flood_threshold: None,
}));
pub static LogicMemory:Entity = Entity::new(
crate::lang::Game::LogicMemory,
"LogicMemory",
35.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
Tag::OverlayBackLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: Some(Rotation::R360),
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 2, height: 2},
hp: 10,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
decor: None,
deconstructable: true,
enableable: None,
flood_threshold: None,
}));
pub static LogicPressureSensorGas:Entity = Entity::new(
crate::lang::Game::LogicPressureSensorGas,
"LogicPressureSensorGas",
6.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
flood_threshold: None,
}));
pub static LogicPressureSensorLiquid:Entity = Entity::new(
crate::lang::Game::LogicPressureSensorLiquid,
"LogicPressureSensorLiquid",
7.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
flood_threshold: None,
}));
pub static LogicRadiationSensor:Entity = Entity::new(
crate::lang::Game::LogicRadiationSensor,
"LogicRadiationSensor",
17.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
flood_threshold: None,
}));
pub static LogicRibbonBridge:Entity = Entity::new(
crate::lang::Game::LogicRibbonBridge,
"LogicRibbonBridge",
3.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::LogicBridge,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: Some(Rotation::R360),
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 3, height: 1},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
flood_threshold: None,
}));
pub static LogicRibbon:Entity = Entity::new(
crate::lang::Game::LogicRibbon,
"LogicRibbon",
2.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: 10,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
flood_threshold: None,
}));
pub static LogicRibbonReader:Entity = Entity::new(
crate::lang::Game::LogicRibbonReader,
"LogicRibbonReader",
24.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: Some(Rotation::R360),
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 2, height: 1},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
flood_threshold: None,
}));
pub static LogicRibbonWriter:Entity = Entity::new(
crate::lang::Game::LogicRibbonWriter,
"LogicRibbonWriter",
25.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: Some(Rotation::R360),
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 2, height: 1},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
flood_threshold: None,
}));
pub static LogicSwitch:Entity = Entity::new(
crate::lang::Game::LogicSwitch,
"LogicSwitch",
4.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: 10,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
decor: None,
deconstructable: true,
enableable: None,
flood_threshold: None,
}));
pub static LogicTemperatureSensor:Entity = Entity::new(
crate::lang::Game::LogicTemperatureSensor,
"LogicTemperatureSensor",
8.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
flood_threshold: None,
}));
pub static LogicTimeOfDaySensor:Entity = Entity::new(
crate::lang::Game::LogicTimeOfDaySensor,
"LogicTimeOfDaySensor",
11.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
flood_threshold: None,
}));
pub static LogicTimerSensor:Entity = Entity::new(
crate::lang::Game::LogicTimerSensor,
"LogicTimerSensor",
12.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
flood_threshold: None,
}));
pub static LogicWattageSensor:Entity = Entity::new(
crate::lang::Game::LogicWattageSensor,
"LogicWattageSensor",
10.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
flood_threshold: None,
}));
pub static LogicWireBridge:Entity = Entity::new(
crate::lang::Game::LogicWireBridge,
"LogicWireBridge",
1.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::LogicBridge,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: Some(Rotation::R360),
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 3, height: 1},
hp: 30,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(5.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
flood_threshold: None,
}));
pub static LogicWire:Entity = Entity::new(
crate::lang::Game::LogicWire,
"LogicWire",
0.000,
Params::BuildingAutomation(BuildingAutomation{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
rotations: None,
electrity_consummation: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: 10,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(5.000),
decor: Some(crate::units::Decor {value: -5, radius: 1}),
deconstructable: true,
enableable: None,
flood_threshold: None,
}));
pub struct BuildingRocketry{
pub tags: &'static [Tag],
pub thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree,
pub location_rule: LocationRule,
pub material_category: &'static [MaterialCategory],
pub electrity_consummation: Option<&'static [Option<f32>]>,
pub external_heat: Option<f32>,
pub size: crate::units::Size,
pub hp: Option<i32>,
pub high_temp_warning: Option<crate::units::Temperature>,
pub high_temp_fatal: Option<crate::units::Temperature>,
pub mass: crate::units::Kg,
pub flood_threshold: Option<crate::units::Percent>,
pub deconstructable: bool,
pub enableable: Option<bool>,
pub provides_o2: Option<bool>,
pub range_max: Option<f32>,
pub rotations: Option<Rotation>,
pub internal_heat: Option<f32>,
pub invincible: Option<bool>,
pub decor: Option<crate::units::Decor>,
pub not_in_rocket: Option<bool>,
pub links: Option<&'static [Link]>,
pub only_in_rocket: Option<bool>,
pub lauch_speed: Option<f32>,
pub rotation_speed: Option<f32>,
pub range_min: Option<f32>,
pub scanning_angle: Option<f32>,
pub max_angle: Option<f32>,
pub scan_left: Option<f32>,
pub scan_right: Option<f32>,
}
pub static ClusterTelescope:Entity = Entity::new(
crate::lang::Game::ClusterTelescope,
"ClusterTelescope",
0.000,
Params::BuildingRocketry(BuildingRocketry{
tags: &[
Tag::ScienceBuilding,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(120.000),
]),
external_heat: Some(0.125),
size: crate::units::Size {width: 3, height: 3},
hp: Some(30),
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(400.000),
flood_threshold: Some(crate::units::Percent(0.350)),
deconstructable: true,
enableable: Some(true),
provides_o2: Some(false),
range_max: Some(3.000),
rotations: None,
internal_heat: None,
invincible: None,
decor: None,
not_in_rocket: None,
links: None,
only_in_rocket: None,
lauch_speed: None,
rotation_speed: None,
range_min: None,
scanning_angle: None,
max_angle: None,
scan_left: None,
scan_right: None,
}));
pub static ClusterTelescopeEnclosed:Entity = Entity::new(
crate::lang::Game::ClusterTelescopeEnclosed,
"ClusterTelescopeEnclosed",
1.000,
Params::BuildingRocketry(BuildingRocketry{
tags: &[
Tag::ScienceBuilding,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(120.000),
]),
external_heat: Some(0.125),
size: crate::units::Size {width: 4, height: 6},
hp: Some(30),
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(400.000),
flood_threshold: Some(crate::units::Percent(0.350)),
deconstructable: true,
enableable: Some(true),
provides_o2: Some(true),
range_max: Some(4.000),
rotations: None,
internal_heat: None,
invincible: None,
decor: None,
not_in_rocket: None,
links: None,
only_in_rocket: None,
lauch_speed: None,
rotation_speed: None,
range_min: None,
scanning_angle: None,
max_angle: None,
scan_left: None,
scan_right: None,
}));
pub static Gantry:Entity = Entity::new(
crate::lang::Game::Gantry,
"Gantry",
4.000,
Params::BuildingRocketry(BuildingRocketry{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Solid(&Steel),
],
electrity_consummation: Some(&[
Some(1200.000),
]),
external_heat: Some(1.000),
size: crate::units::Size {width: 6, height: 2},
hp: Some(30),
high_temp_warning: Some(crate::units::Temperature(2273.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(200.000),
flood_threshold: Some(crate::units::Percent(0.350)),
deconstructable: true,
enableable: Some(true),
provides_o2: None,
range_max: None,
rotations: Some(Rotation::FlipH),
internal_heat: Some(1.000),
invincible: None,
decor: None,
not_in_rocket: None,
links: None,
only_in_rocket: None,
lauch_speed: None,
rotation_speed: None,
range_min: None,
scanning_angle: None,
max_angle: None,
scan_left: None,
scan_right: None,
}));
pub static LandingBeacon:Entity = Entity::new(
crate::lang::Game::LandingBeacon,
"LandingBeacon",
16.000,
Params::BuildingRocketry(BuildingRocketry{
tags: &[
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
electrity_consummation: Some(&[
Some(60.000),
]),
external_heat: None,
size: crate::units::Size {width: 1, height: 3},
hp: None,
high_temp_warning: Some(crate::units::Temperature(398.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(100.000),
flood_threshold: None,
deconstructable: true,
enableable: Some(true),
provides_o2: None,
range_max: None,
rotations: None,
internal_heat: None,
invincible: Some(true),
decor: Some(crate::units::Decor {value: -10, radius: 2}),
not_in_rocket: None,
links: None,
only_in_rocket: None,
lauch_speed: None,
rotation_speed: None,
range_min: None,
scanning_angle: None,
max_angle: None,
scan_left: None,
scan_right: None,
}));
pub static LaunchPad:Entity = Entity::new(
crate::lang::Game::LaunchPad,
"LaunchPad",
3.000,
Params::BuildingRocketry(BuildingRocketry{
tags: &[
Tag::IndustrialMachinery,
Tag::NotRocketInteriorBuilding,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
electrity_consummation: None,
external_heat: None,
size: crate::units::Size {width: 7, height: 2},
hp: Some(1000),
high_temp_warning: Some(crate::units::Temperature(2273.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(800.000),
flood_threshold: None,
deconstructable: true,
enableable: Some(true),
provides_o2: None,
range_max: None,
rotations: None,
internal_heat: None,
invincible: None,
decor: None,
not_in_rocket: Some(true),
links: Some(&[
Link::LaunchPad,
Link::ModularLaunchpadPort,
]),
only_in_rocket: None,
lauch_speed: None,
rotation_speed: None,
range_min: None,
scanning_angle: None,
max_angle: None,
scan_left: None,
scan_right: None,
}));
pub static LogicClusterLocationSensor:Entity = Entity::new(
crate::lang::Game::LogicClusterLocationSensor,
"LogicClusterLocationSensor",
13.000,
Params::BuildingRocketry(BuildingRocketry{
tags: &[
Tag::RocketInteriorBuilding,
Tag::OverlayFrontLayer,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Anywhere,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
electrity_consummation: None,
external_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: Some(30),
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
flood_threshold: None,
deconstructable: true,
enableable: None,
provides_o2: None,
range_max: None,
rotations: None,
internal_heat: None,
invincible: None,
decor: Some(crate::units::Decor {value: -5, radius: 1}),
not_in_rocket: None,
links: None,
only_in_rocket: Some(true),
lauch_speed: None,
rotation_speed: None,
range_min: None,
scanning_angle: None,
max_angle: None,
scan_left: None,
scan_right: None,
}));
pub static MissileLauncher:Entity = Entity::new(
crate::lang::Game::MissileLauncher,
"MissileLauncher",
17.000,
Params::BuildingRocketry(BuildingRocketry{
tags: &[
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(240.000),
]),
external_heat: Some(0.500),
size: crate::units::Size {width: 3, height: 5},
hp: Some(250),
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(400.000),
flood_threshold: None,
deconstructable: true,
enableable: Some(true),
provides_o2: None,
range_max: Some(32.000),
rotations: None,
internal_heat: Some(2.000),
invincible: None,
decor: None,
not_in_rocket: None,
links: None,
only_in_rocket: None,
lauch_speed: Some(30.000),
rotation_speed: Some(100.000),
range_min: Some(16.000),
scanning_angle: Some(50.000),
max_angle: Some(80.000),
scan_left: None,
scan_right: None,
}));
pub static MissionControlCluster:Entity = Entity::new(
crate::lang::Game::MissionControlCluster,
"MissionControlCluster",
2.000,
Params::BuildingRocketry(BuildingRocketry{
tags: &[
Tag::ScienceBuilding,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
electrity_consummation: Some(&[
Some(960.000),
]),
external_heat: Some(0.500),
size: crate::units::Size {width: 3, height: 3},
hp: Some(100),
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(400.000),
flood_threshold: Some(crate::units::Percent(0.350)),
deconstructable: true,
enableable: Some(true),
provides_o2: None,
range_max: None,
rotations: None,
internal_heat: Some(2.000),
invincible: None,
decor: Some(crate::units::Decor {value: -5, radius: 1}),
not_in_rocket: None,
links: None,
only_in_rocket: None,
lauch_speed: None,
rotation_speed: None,
range_min: None,
scanning_angle: None,
max_angle: None,
scan_left: Some(1.000),
scan_right: Some(1.000),
}));
pub static ModularLaunchpadPortBridge:Entity = Entity::new(
crate::lang::Game::ModularLaunchpadPortBridge,
"ModularLaunchpadPortBridge",
18.000,
Params::BuildingRocketry(BuildingRocketry{
tags: &[
Tag::ModularConduitPort,
Tag::NotRocketInteriorBuilding,
Tag::ModularLaunchpadPort,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
electrity_consummation: None,
external_heat: None,
size: crate::units::Size {width: 1, height: 2},
hp: Some(1000),
high_temp_warning: Some(crate::units::Temperature(2273.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(200.000),
flood_threshold: None,
deconstructable: true,
enableable: Some(true),
provides_o2: None,
range_max: None,
rotations: None,
internal_heat: None,
invincible: None,
decor: None,
not_in_rocket: Some(true),
links: Some(&[
Link::LaunchPad,
Link::ModularLaunchpadPort,
]),
only_in_rocket: None,
lauch_speed: None,
rotation_speed: None,
range_min: None,
scanning_angle: None,
max_angle: None,
scan_left: None,
scan_right: None,
}));
pub static RailGun:Entity = Entity::new(
crate::lang::Game::RailGun,
"RailGun",
14.000,
Params::BuildingRocketry(BuildingRocketry{
tags: &[
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(240.000),
]),
external_heat: Some(0.500),
size: crate::units::Size {width: 5, height: 6},
hp: Some(250),
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(400.000),
flood_threshold: None,
deconstructable: true,
enableable: Some(true),
provides_o2: None,
range_max: None,
rotations: None,
internal_heat: Some(2.000),
invincible: None,
decor: None,
not_in_rocket: None,
links: None,
only_in_rocket: None,
lauch_speed: None,
rotation_speed: None,
range_min: None,
scanning_angle: None,
max_angle: None,
scan_left: None,
scan_right: None,
}));
pub static RailGunPayloadOpener:Entity = Entity::new(
crate::lang::Game::RailGunPayloadOpener,
"RailGunPayloadOpener",
15.000,
Params::BuildingRocketry(BuildingRocketry{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(120.000),
]),
external_heat: None,
size: crate::units::Size {width: 3, height: 3},
hp: Some(250),
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(100.000),
flood_threshold: None,
deconstructable: true,
enableable: Some(true),
provides_o2: None,
range_max: None,
rotations: None,
internal_heat: Some(0.500),
invincible: None,
decor: None,
not_in_rocket: None,
links: None,
only_in_rocket: None,
lauch_speed: None,
rotation_speed: None,
range_min: None,
scanning_angle: None,
max_angle: None,
scan_left: None,
scan_right: None,
}));
pub static RocketControlStation:Entity = Entity::new(
crate::lang::Game::RocketControlStation,
"RocketControlStation",
5.000,
Params::BuildingRocketry(BuildingRocketry{
tags: &[
Tag::RocketInteriorBuilding,
Tag::UniquePerWorld,
Tag::RocketInterior,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: None,
external_heat: None,
size: crate::units::Size {width: 2, height: 2},
hp: Some(30),
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(100.000),
flood_threshold: None,
deconstructable: true,
enableable: Some(true),
provides_o2: None,
range_max: None,
rotations: None,
internal_heat: None,
invincible: None,
decor: Some(crate::units::Decor {value: 15, radius: 3}),
not_in_rocket: None,
links: None,
only_in_rocket: Some(true),
lauch_speed: None,
rotation_speed: None,
range_min: None,
scanning_angle: None,
max_angle: None,
scan_left: None,
scan_right: None,
}));
pub static RocketInteriorGasInput:Entity = Entity::new(
crate::lang::Game::RocketInteriorGasInput,
"RocketInteriorGasInput",
9.000,
Params::BuildingRocketry(BuildingRocketry{
tags: &[
Tag::RocketInteriorBuilding,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnRocketEnvelope,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: None,
external_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: Some(30),
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
flood_threshold: None,
deconstructable: true,
enableable: Some(true),
provides_o2: None,
range_max: None,
rotations: Some(Rotation::R360),
internal_heat: None,
invincible: None,
decor: Some(crate::units::Decor {value: -15, radius: 3}),
not_in_rocket: None,
links: None,
only_in_rocket: Some(true),
lauch_speed: None,
rotation_speed: None,
range_min: None,
scanning_angle: None,
max_angle: None,
scan_left: None,
scan_right: None,
}));
pub static RocketInteriorGasOutput:Entity = Entity::new(
crate::lang::Game::RocketInteriorGasOutput,
"RocketInteriorGasOutput",
10.000,
Params::BuildingRocketry(BuildingRocketry{
tags: &[
Tag::RocketInteriorBuilding,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnRocketEnvelope,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(60.000),
]),
external_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: Some(30),
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
flood_threshold: None,
deconstructable: true,
enableable: Some(true),
provides_o2: None,
range_max: None,
rotations: Some(Rotation::R360),
internal_heat: Some(0.500),
invincible: None,
decor: Some(crate::units::Decor {value: -15, radius: 3}),
not_in_rocket: None,
links: None,
only_in_rocket: Some(true),
lauch_speed: None,
rotation_speed: None,
range_min: None,
scanning_angle: None,
max_angle: None,
scan_left: None,
scan_right: None,
}));
pub static RocketInteriorLiquidInput:Entity = Entity::new(
crate::lang::Game::RocketInteriorLiquidInput,
"RocketInteriorLiquidInput",
7.000,
Params::BuildingRocketry(BuildingRocketry{
tags: &[
Tag::RocketInteriorBuilding,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnRocketEnvelope,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: None,
external_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: Some(30),
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
flood_threshold: None,
deconstructable: true,
enableable: Some(true),
provides_o2: None,
range_max: None,
rotations: Some(Rotation::R360),
internal_heat: None,
invincible: None,
decor: Some(crate::units::Decor {value: -15, radius: 3}),
not_in_rocket: None,
links: None,
only_in_rocket: Some(true),
lauch_speed: None,
rotation_speed: None,
range_min: None,
scanning_angle: None,
max_angle: None,
scan_left: None,
scan_right: None,
}));
pub static RocketInteriorLiquidOutput:Entity = Entity::new(
crate::lang::Game::RocketInteriorLiquidOutput,
"RocketInteriorLiquidOutput",
8.000,
Params::BuildingRocketry(BuildingRocketry{
tags: &[
Tag::RocketInteriorBuilding,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnRocketEnvelope,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(60.000),
]),
external_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: Some(30),
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
flood_threshold: None,
deconstructable: true,
enableable: Some(true),
provides_o2: None,
range_max: None,
rotations: Some(Rotation::R360),
internal_heat: Some(0.500),
invincible: None,
decor: Some(crate::units::Decor {value: -15, radius: 3}),
not_in_rocket: None,
links: None,
only_in_rocket: Some(true),
lauch_speed: None,
rotation_speed: None,
range_min: None,
scanning_angle: None,
max_angle: None,
scan_left: None,
scan_right: None,
}));
pub static RocketInteriorPowerPlug:Entity = Entity::new(
crate::lang::Game::RocketInteriorPowerPlug,
"RocketInteriorPowerPlug",
6.000,
Params::BuildingRocketry(BuildingRocketry{
tags: &[
Tag::RocketInteriorBuilding,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnRocketEnvelope,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: None,
external_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: Some(30),
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
flood_threshold: None,
deconstructable: true,
enableable: Some(true),
provides_o2: None,
range_max: None,
rotations: Some(Rotation::R360),
internal_heat: None,
invincible: None,
decor: Some(crate::units::Decor {value: -15, radius: 3}),
not_in_rocket: None,
links: None,
only_in_rocket: Some(true),
lauch_speed: None,
rotation_speed: None,
range_min: None,
scanning_angle: None,
max_angle: None,
scan_left: None,
scan_right: None,
}));
pub static RocketInteriorSolidInput:Entity = Entity::new(
crate::lang::Game::RocketInteriorSolidInput,
"RocketInteriorSolidInput",
11.000,
Params::BuildingRocketry(BuildingRocketry{
tags: &[
Tag::RocketInteriorBuilding,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnRocketEnvelope,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: None,
external_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: Some(30),
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
flood_threshold: None,
deconstructable: true,
enableable: Some(true),
provides_o2: None,
range_max: None,
rotations: Some(Rotation::R360),
internal_heat: None,
invincible: None,
decor: Some(crate::units::Decor {value: -15, radius: 3}),
not_in_rocket: None,
links: None,
only_in_rocket: Some(true),
lauch_speed: None,
rotation_speed: None,
range_min: None,
scanning_angle: None,
max_angle: None,
scan_left: None,
scan_right: None,
}));
pub static RocketInteriorSolidOutput:Entity = Entity::new(
crate::lang::Game::RocketInteriorSolidOutput,
"RocketInteriorSolidOutput",
12.000,
Params::BuildingRocketry(BuildingRocketry{
tags: &[
Tag::RocketInteriorBuilding,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnRocketEnvelope,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(60.000),
]),
external_heat: None,
size: crate::units::Size {width: 1, height: 1},
hp: Some(30),
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(25.000),
flood_threshold: None,
deconstructable: true,
enableable: Some(true),
provides_o2: None,
range_max: None,
rotations: Some(Rotation::R360),
internal_heat: Some(0.500),
invincible: None,
decor: Some(crate::units::Decor {value: -15, radius: 3}),
not_in_rocket: None,
links: None,
only_in_rocket: Some(true),
lauch_speed: None,
rotation_speed: None,
range_min: None,
scanning_angle: None,
max_angle: None,
scan_left: None,
scan_right: None,
}));
pub struct BuildingGravitas{
pub tags: &'static [Tag],
pub thermal_conductivity: Option<crate::units::DtuPerMetreSecondPerDegree>,
pub location_rule: Option<LocationRule>,
pub material_category: Option<&'static [MaterialCategory]>,
pub rotations: Option<Rotation>,
pub size: Option<crate::units::Size>,
pub hp: Option<i32>,
pub mass: crate::units::Kg,
pub decor: Option<crate::units::Decor>,
pub primary_element: Option<&'static Entity>,
pub deconstructable: Option<bool>,
pub enableable: Option<bool>,
pub flood_threshold: Option<crate::units::Percent>,
pub invincible: Option<bool>,
pub high_temp_warning: Option<crate::units::Temperature>,
pub high_temp_fatal: Option<crate::units::Temperature>,
pub external_heat: Option<f32>,
pub internal_heat: Option<f32>,
pub transparent: Option<bool>,
pub electrity_consummation: Option<&'static [Option<f32>]>,
}
pub static FacilityBackWallWindow:Entity = Entity::new(
crate::lang::Game::FacilityBackWallWindow,
"FacilityBackWallWindow",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::BuildableAny,
Tag::Transparent,
Tag::Solid,
Tag::ManufacturedMaterial,
Tag::Gravitas,
],
thermal_conductivity: Some(crate::units::DtuPerMetreSecondPerDegree(1.000)),
location_rule: Some(LocationRule::NotInTiles),
material_category: Some(&[
MaterialCategory::Solid(&Glass),
]),
rotations: Some(Rotation::R90),
size: Some(crate::units::Size {width: 1, height: 6}),
hp: Some(30),
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: 25, radius: 4}),
primary_element: Some(&Glass),
deconstructable: Some(true),
enableable: Some(true),
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static FossilDig:Entity = Entity::new(
crate::lang::Game::FossilDig,
"FossilDig",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Solid,
Tag::BuildableRaw,
],
thermal_conductivity: Some(crate::units::DtuPerMetreSecondPerDegree(1.000)),
location_rule: Some(LocationRule::OnFloor),
material_category: Some(&[
MaterialCategory::Solid(&Fossil),
]),
rotations: None,
size: Some(crate::units::Size {width: 5, height: 3}),
hp: Some(30),
mass: crate::units::Kg(2000.000),
decor: Some(crate::units::Decor {value: 10, radius: 2}),
primary_element: Some(&Fossil),
deconstructable: Some(false),
enableable: None,
flood_threshold: Some(crate::units::Percent(0.350)),
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static GravitasContainer:Entity = Entity::new(
crate::lang::Game::GravitasContainer,
"GravitasContainer",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
],
thermal_conductivity: Some(crate::units::DtuPerMetreSecondPerDegree(1.000)),
location_rule: Some(LocationRule::OnFloor),
material_category: Some(&[
MaterialCategory::Tag(Tag::Metal),
]),
rotations: None,
size: Some(crate::units::Size {width: 2, height: 2}),
hp: None,
mass: crate::units::Kg(200.000),
decor: None,
primary_element: None,
deconstructable: Some(false),
enableable: Some(true),
flood_threshold: None,
invincible: Some(true),
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static GravitasCreatureManipulator:Entity = Entity::new(
crate::lang::Game::GravitasCreatureManipulator,
"GravitasCreatureManipulator",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::IndustrialMachinery,
Tag::Metal,
Tag::RefinedMetal,
Tag::BuildableAny,
Tag::Solid,
Tag::ManufacturedMaterial,
],
thermal_conductivity: Some(crate::units::DtuPerMetreSecondPerDegree(1.000)),
location_rule: Some(LocationRule::OnFloor),
material_category: Some(&[
MaterialCategory::Tag(Tag::RefinedMetal),
]),
rotations: None,
size: Some(crate::units::Size {width: 3, height: 4}),
hp: Some(250),
mass: crate::units::Kg(800.000),
decor: Some(crate::units::Decor {value: 15, radius: 3}),
primary_element: Some(&Steel),
deconstructable: Some(false),
enableable: Some(true),
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static GravitasDoor:Entity = Entity::new(
crate::lang::Game::GravitasDoor,
"GravitasDoor",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
],
thermal_conductivity: Some(crate::units::DtuPerMetreSecondPerDegree(1.000)),
location_rule: Some(LocationRule::Tile),
material_category: Some(&[
MaterialCategory::Tag(Tag::Metal),
]),
rotations: Some(Rotation::R90),
size: Some(crate::units::Size {width: 1, height: 3}),
hp: None,
mass: crate::units::Kg(100.000),
decor: None,
primary_element: None,
deconstructable: Some(true),
enableable: None,
flood_threshold: None,
invincible: Some(true),
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static GravitasLabLight:Entity = Entity::new(
crate::lang::Game::GravitasLabLight,
"GravitasLabLight",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
],
thermal_conductivity: Some(crate::units::DtuPerMetreSecondPerDegree(1.000)),
location_rule: Some(LocationRule::OnCeiling),
material_category: Some(&[
MaterialCategory::Tag(Tag::Metal),
]),
rotations: None,
size: Some(crate::units::Size {width: 1, height: 1}),
hp: None,
mass: crate::units::Kg(25.000),
decor: None,
primary_element: None,
deconstructable: Some(true),
enableable: Some(true),
flood_threshold: None,
invincible: Some(true),
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static GravitasPedestal:Entity = Entity::new(
crate::lang::Game::GravitasPedestal,
"GravitasPedestal",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Decoration,
],
thermal_conductivity: Some(crate::units::DtuPerMetreSecondPerDegree(1.000)),
location_rule: Some(LocationRule::OnFloor),
material_category: Some(&[
MaterialCategory::Tag(Tag::BuildableRaw),
]),
rotations: None,
size: Some(crate::units::Size {width: 1, height: 2}),
hp: Some(10),
mass: crate::units::Kg(100.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: None,
deconstructable: Some(true),
enableable: Some(true),
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static Headquarters:Entity = Entity::new(
crate::lang::Game::Headquarters,
"Headquarters",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Telepad,
Tag::LightSource,
Tag::Experimental,
],
thermal_conductivity: Some(crate::units::DtuPerMetreSecondPerDegree(1.000)),
location_rule: Some(LocationRule::OnFloor),
material_category: Some(&[
MaterialCategory::Tag(Tag::Metal),
]),
rotations: None,
size: Some(crate::units::Size {width: 4, height: 4}),
hp: Some(250),
mass: crate::units::Kg(2000.000),
decor: Some(crate::units::Decor {value: 30, radius: 6}),
primary_element: None,
deconstructable: Some(true),
enableable: Some(true),
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static MassiveHeatSink:Entity = Entity::new(
crate::lang::Game::MassiveHeatSink,
"MassiveHeatSink",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::IndustrialMachinery,
Tag::BuildableAny,
Tag::Solid,
Tag::RefinedMetal,
],
thermal_conductivity: Some(crate::units::DtuPerMetreSecondPerDegree(1.000)),
location_rule: Some(LocationRule::OnFloor),
material_category: Some(&[
MaterialCategory::Tag(Tag::Metal),
]),
rotations: None,
size: Some(crate::units::Size {width: 4, height: 4}),
hp: Some(100),
mass: crate::units::Kg(800.000),
decor: Some(crate::units::Decor {value: 15, radius: 3}),
primary_element: Some(&Iron),
deconstructable: Some(false),
enableable: Some(true),
flood_threshold: Some(crate::units::Percent(0.350)),
invincible: None,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
external_heat: Some(-16.000),
internal_heat: Some(-64.000),
transparent: None,
electrity_consummation: None,
}));
pub static MegaBrainTank:Entity = Entity::new(
crate::lang::Game::MegaBrainTank,
"MegaBrainTank",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::IndustrialMachinery,
Tag::Gravitas,
Tag::Metal,
Tag::RefinedMetal,
Tag::BuildableAny,
Tag::Solid,
Tag::ManufacturedMaterial,
],
thermal_conductivity: Some(crate::units::DtuPerMetreSecondPerDegree(1.000)),
location_rule: Some(LocationRule::OnFloor),
material_category: Some(&[
MaterialCategory::Tag(Tag::Metal),
]),
rotations: None,
size: Some(crate::units::Size {width: 7, height: 7}),
hp: None,
mass: crate::units::Kg(800.000),
decor: Some(crate::units::Decor {value: -20, radius: 5}),
primary_element: Some(&Steel),
deconstructable: Some(false),
enableable: Some(true),
flood_threshold: Some(crate::units::Percent(0.350)),
invincible: Some(true),
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static MorbRoverMaker:Entity = Entity::new(
crate::lang::Game::MorbRoverMaker,
"MorbRoverMaker",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Metal,
Tag::RefinedMetal,
Tag::BuildableAny,
Tag::Solid,
Tag::ManufacturedMaterial,
],
thermal_conductivity: Some(crate::units::DtuPerMetreSecondPerDegree(1.000)),
location_rule: Some(LocationRule::OnFloor),
material_category: Some(&[
MaterialCategory::Tag(Tag::RefinedMetal),
]),
rotations: None,
size: Some(crate::units::Size {width: 5, height: 4}),
hp: Some(250),
mass: crate::units::Kg(800.000),
decor: Some(crate::units::Decor {value: 10, radius: 2}),
primary_element: Some(&Steel),
deconstructable: Some(false),
enableable: Some(true),
flood_threshold: Some(crate::units::Percent(0.350)),
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static POIDoorInternal:Entity = Entity::new(
crate::lang::Game::POIDoorInternal,
"POIDoorInternal",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
],
thermal_conductivity: Some(crate::units::DtuPerMetreSecondPerDegree(1.000)),
location_rule: Some(LocationRule::Tile),
material_category: Some(&[
MaterialCategory::Tag(Tag::Metal),
]),
rotations: Some(Rotation::R90),
size: Some(crate::units::Size {width: 1, height: 2}),
hp: None,
mass: crate::units::Kg(100.000),
decor: None,
primary_element: None,
deconstructable: Some(true),
enableable: None,
flood_threshold: None,
invincible: Some(true),
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropGravitasLabWall:Entity = Entity::new(
crate::lang::Game::PropGravitasLabWall,
"PropGravitasLabWall",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::BuildableAny,
Tag::Transparent,
Tag::Solid,
Tag::ManufacturedMaterial,
Tag::Gravitas,
],
thermal_conductivity: Some(crate::units::DtuPerMetreSecondPerDegree(1.000)),
location_rule: Some(LocationRule::NotInTiles),
material_category: Some(&[
MaterialCategory::Tag(Tag::BuildableRaw),
]),
rotations: Some(Rotation::R90),
size: Some(crate::units::Size {width: 2, height: 3}),
hp: Some(30),
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: Some(&Glass),
deconstructable: Some(true),
enableable: Some(true),
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropGravitasLabWindow:Entity = Entity::new(
crate::lang::Game::PropGravitasLabWindow,
"PropGravitasLabWindow",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::BuildableAny,
Tag::Transparent,
Tag::Solid,
Tag::ManufacturedMaterial,
Tag::Gravitas,
],
thermal_conductivity: Some(crate::units::DtuPerMetreSecondPerDegree(1.000)),
location_rule: Some(LocationRule::NotInTiles),
material_category: Some(&[
MaterialCategory::Solid(&Glass),
]),
rotations: None,
size: Some(crate::units::Size {width: 2, height: 3}),
hp: Some(30),
mass: crate::units::Kg(5.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: Some(&Glass),
deconstructable: Some(true),
enableable: Some(true),
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropGravitasLabWindowHorizontal:Entity = Entity::new(
crate::lang::Game::PropGravitasLabWindowHorizontal,
"PropGravitasLabWindowHorizontal",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::BuildableAny,
Tag::Transparent,
Tag::Solid,
Tag::ManufacturedMaterial,
Tag::Gravitas,
],
thermal_conductivity: Some(crate::units::DtuPerMetreSecondPerDegree(1.000)),
location_rule: Some(LocationRule::NotInTiles),
material_category: Some(&[
MaterialCategory::Solid(&Glass),
]),
rotations: None,
size: Some(crate::units::Size {width: 3, height: 2}),
hp: Some(30),
mass: crate::units::Kg(5.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: Some(&Glass),
deconstructable: Some(true),
enableable: Some(true),
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropGravitasWall:Entity = Entity::new(
crate::lang::Game::PropGravitasWall,
"PropGravitasWall",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Plumbable,
Tag::Crushable,
Tag::BuildableAny,
Tag::PreciousRock,
Tag::Solid,
Tag::BuildableRaw,
Tag::Gravitas,
],
thermal_conductivity: Some(crate::units::DtuPerMetreSecondPerDegree(1.000)),
location_rule: Some(LocationRule::NotInTiles),
material_category: Some(&[
MaterialCategory::Tag(Tag::BuildableRaw),
]),
rotations: Some(Rotation::R360),
size: Some(crate::units::Size {width: 1, height: 1}),
hp: Some(30),
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: Some(&Granite),
deconstructable: Some(true),
enableable: Some(true),
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static RocketEnvelopeWindowTile:Entity = Entity::new(
crate::lang::Game::RocketEnvelopeWindowTile,
"RocketEnvelopeWindowTile",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Window,
Tag::Bunker,
Tag::FloorTiles,
Tag::NoRocketRefund,
],
thermal_conductivity: Some(crate::units::DtuPerMetreSecondPerDegree(1.000)),
location_rule: Some(LocationRule::Tile),
material_category: Some(&[
MaterialCategory::Tag(Tag::Transparent),
]),
rotations: None,
size: Some(crate::units::Size {width: 1, height: 1}),
hp: None,
mass: crate::units::Kg(100.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: None,
deconstructable: Some(false),
enableable: None,
flood_threshold: None,
invincible: Some(true),
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: Some(true),
electrity_consummation: None,
}));
pub static RocketInteriorGasInputPort:Entity = Entity::new(
crate::lang::Game::RocketInteriorGasInputPort,
"RocketInteriorGasInputPort",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Bunker,
Tag::FloorTiles,
Tag::NoRocketRefund,
],
thermal_conductivity: Some(crate::units::DtuPerMetreSecondPerDegree(1.000)),
location_rule: Some(LocationRule::Tile),
material_category: Some(&[
MaterialCategory::Tag(Tag::RefinedMetal),
]),
rotations: None,
size: Some(crate::units::Size {width: 1, height: 1}),
hp: None,
mass: crate::units::Kg(100.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: None,
deconstructable: Some(false),
enableable: None,
flood_threshold: None,
invincible: Some(true),
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static RocketInteriorGasOutputPort:Entity = Entity::new(
crate::lang::Game::RocketInteriorGasOutputPort,
"RocketInteriorGasOutputPort",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Bunker,
Tag::FloorTiles,
Tag::NoRocketRefund,
],
thermal_conductivity: Some(crate::units::DtuPerMetreSecondPerDegree(1.000)),
location_rule: Some(LocationRule::Tile),
material_category: Some(&[
MaterialCategory::Tag(Tag::RefinedMetal),
]),
rotations: None,
size: Some(crate::units::Size {width: 1, height: 1}),
hp: None,
mass: crate::units::Kg(100.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: None,
deconstructable: Some(false),
enableable: None,
flood_threshold: None,
invincible: Some(true),
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static RocketInteriorLiquidInputPort:Entity = Entity::new(
crate::lang::Game::RocketInteriorLiquidInputPort,
"RocketInteriorLiquidInputPort",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Bunker,
Tag::FloorTiles,
Tag::NoRocketRefund,
],
thermal_conductivity: Some(crate::units::DtuPerMetreSecondPerDegree(1.000)),
location_rule: Some(LocationRule::Tile),
material_category: Some(&[
MaterialCategory::Tag(Tag::RefinedMetal),
]),
rotations: None,
size: Some(crate::units::Size {width: 1, height: 1}),
hp: None,
mass: crate::units::Kg(100.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: None,
deconstructable: Some(false),
enableable: None,
flood_threshold: None,
invincible: Some(true),
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static RocketInteriorLiquidOutputPort:Entity = Entity::new(
crate::lang::Game::RocketInteriorLiquidOutputPort,
"RocketInteriorLiquidOutputPort",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Bunker,
Tag::FloorTiles,
Tag::NoRocketRefund,
],
thermal_conductivity: Some(crate::units::DtuPerMetreSecondPerDegree(1.000)),
location_rule: Some(LocationRule::Tile),
material_category: Some(&[
MaterialCategory::Tag(Tag::RefinedMetal),
]),
rotations: None,
size: Some(crate::units::Size {width: 1, height: 1}),
hp: None,
mass: crate::units::Kg(100.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: None,
deconstructable: Some(false),
enableable: None,
flood_threshold: None,
invincible: Some(true),
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static TeleportalPad:Entity = Entity::new(
crate::lang::Game::TeleportalPad,
"TeleportalPad",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Solid,
Tag::Special,
],
thermal_conductivity: Some(crate::units::DtuPerMetreSecondPerDegree(1.000)),
location_rule: Some(LocationRule::OnFloor),
material_category: Some(&[
MaterialCategory::Tag(Tag::Metal),
]),
rotations: None,
size: Some(crate::units::Size {width: 4, height: 4}),
hp: Some(250),
mass: crate::units::Kg(2000.000),
decor: Some(crate::units::Decor {value: 30, radius: 6}),
primary_element: Some(&Unobtanium),
deconstructable: Some(true),
enableable: Some(true),
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: Some(16.000),
internal_heat: Some(64.000),
transparent: None,
electrity_consummation: Some(&[
Some(1600.000),
]),
}));
pub static WarpConduitReceiver:Entity = Entity::new(
crate::lang::Game::WarpConduitReceiver,
"WarpConduitReceiver",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Solid,
Tag::Special,
Tag::Gravitas,
],
thermal_conductivity: Some(crate::units::DtuPerMetreSecondPerDegree(1.000)),
location_rule: Some(LocationRule::OnFloor),
material_category: Some(&[
MaterialCategory::Tag(Tag::Metal),
]),
rotations: None,
size: Some(crate::units::Size {width: 4, height: 3}),
hp: None,
mass: crate::units::Kg(100.000),
decor: None,
primary_element: Some(&Unobtanium),
deconstructable: Some(false),
enableable: Some(true),
flood_threshold: None,
invincible: Some(true),
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static WarpConduitSender:Entity = Entity::new(
crate::lang::Game::WarpConduitSender,
"WarpConduitSender",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Solid,
Tag::Special,
],
thermal_conductivity: Some(crate::units::DtuPerMetreSecondPerDegree(1.000)),
location_rule: Some(LocationRule::OnFloor),
material_category: Some(&[
MaterialCategory::Tag(Tag::Metal),
]),
rotations: None,
size: Some(crate::units::Size {width: 4, height: 3}),
hp: None,
mass: crate::units::Kg(400.000),
decor: None,
primary_element: Some(&Unobtanium),
deconstructable: Some(false),
enableable: Some(true),
flood_threshold: None,
invincible: Some(true),
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static ClustercraftInteriorDoor:Entity = Entity::new(
crate::lang::Game::ClustercraftInteriorDoor,
"ClustercraftInteriorDoor",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::NotRoomAssignable,
Tag::Solid,
Tag::Special,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(400.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Unobtanium),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropLadder:Entity = Entity::new(
crate::lang::Game::PropLadder,
"PropLadder",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Antiseptic,
Tag::Plastic,
Tag::BuildableAny,
Tag::Solid,
Tag::ManufacturedMaterial,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Polypropylene),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static GeneShuffler:Entity = Entity::new(
crate::lang::Game::GeneShuffler,
"GeneShuffler",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::NotRoomAssignable,
Tag::Solid,
Tag::Special,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(2000.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Unobtanium),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static FossilRock:Entity = Entity::new(
crate::lang::Game::FossilRock,
"FossilRock",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Solid,
Tag::BuildableRaw,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(4000.000),
decor: Some(crate::units::Decor {value: 25, radius: 5}),
primary_element: Some(&Fossil),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static FossilResin:Entity = Entity::new(
crate::lang::Game::FossilResin,
"FossilResin",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Solid,
Tag::BuildableRaw,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(4000.000),
decor: Some(crate::units::Decor {value: 25, radius: 5}),
primary_element: Some(&Fossil),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static FossilIce:Entity = Entity::new(
crate::lang::Game::FossilIce,
"FossilIce",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Solid,
Tag::BuildableRaw,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(4000.000),
decor: Some(crate::units::Decor {value: 25, radius: 5}),
primary_element: Some(&Fossil),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropGravitasLabTable:Entity = Entity::new(
crate::lang::Game::PropGravitasLabTable,
"PropGravitasLabTable",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Plumbable,
Tag::Crushable,
Tag::BuildableAny,
Tag::PreciousRock,
Tag::Solid,
Tag::BuildableRaw,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Granite),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropGravitasJar2:Entity = Entity::new(
crate::lang::Game::PropGravitasJar2,
"PropGravitasJar2",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Plumbable,
Tag::Crushable,
Tag::BuildableAny,
Tag::PreciousRock,
Tag::Solid,
Tag::BuildableRaw,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Granite),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropGravitasJar1:Entity = Entity::new(
crate::lang::Game::PropGravitasJar1,
"PropGravitasJar1",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Plumbable,
Tag::Crushable,
Tag::BuildableAny,
Tag::PreciousRock,
Tag::Solid,
Tag::BuildableRaw,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Granite),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropGravitasHandScanner:Entity = Entity::new(
crate::lang::Game::PropGravitasHandScanner,
"PropGravitasHandScanner",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Plumbable,
Tag::Crushable,
Tag::BuildableAny,
Tag::PreciousRock,
Tag::Solid,
Tag::BuildableRaw,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Granite),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropGravitasFloorRobot:Entity = Entity::new(
crate::lang::Game::PropGravitasFloorRobot,
"PropGravitasFloorRobot",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Plumbable,
Tag::Crushable,
Tag::BuildableAny,
Tag::PreciousRock,
Tag::Solid,
Tag::BuildableRaw,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Granite),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropGravitasFirstAidKit:Entity = Entity::new(
crate::lang::Game::PropGravitasFirstAidKit,
"PropGravitasFirstAidKit",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Plumbable,
Tag::Crushable,
Tag::BuildableAny,
Tag::PreciousRock,
Tag::Solid,
Tag::BuildableRaw,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Granite),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropGravitasDisplay4:Entity = Entity::new(
crate::lang::Game::PropGravitasDisplay4,
"PropGravitasDisplay4",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Plumbable,
Tag::Crushable,
Tag::BuildableAny,
Tag::PreciousRock,
Tag::Solid,
Tag::BuildableRaw,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Granite),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropGravitasRobitcTable:Entity = Entity::new(
crate::lang::Game::PropGravitasRobitcTable,
"PropGravitasRobitcTable",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Plumbable,
Tag::Crushable,
Tag::BuildableAny,
Tag::PreciousRock,
Tag::Solid,
Tag::BuildableRaw,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Granite),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropGravitasDeskPodium:Entity = Entity::new(
crate::lang::Game::PropGravitasDeskPodium,
"PropGravitasDeskPodium",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Plumbable,
Tag::Crushable,
Tag::BuildableAny,
Tag::PreciousRock,
Tag::Solid,
Tag::BuildableRaw,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Granite),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropGravitasCreaturePoster:Entity = Entity::new(
crate::lang::Game::PropGravitasCreaturePoster,
"PropGravitasCreaturePoster",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Plumbable,
Tag::Crushable,
Tag::BuildableAny,
Tag::PreciousRock,
Tag::Solid,
Tag::BuildableRaw,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Granite),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropGravitasCeilingRobot:Entity = Entity::new(
crate::lang::Game::PropGravitasCeilingRobot,
"PropGravitasCeilingRobot",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Plumbable,
Tag::Crushable,
Tag::BuildableAny,
Tag::PreciousRock,
Tag::Solid,
Tag::BuildableRaw,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Granite),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropFacilityWallDegree:Entity = Entity::new(
crate::lang::Game::PropFacilityWallDegree,
"PropFacilityWallDegree",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Plumbable,
Tag::Crushable,
Tag::BuildableAny,
Tag::PreciousRock,
Tag::Solid,
Tag::BuildableRaw,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Granite),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropFacilityTable:Entity = Entity::new(
crate::lang::Game::PropFacilityTable,
"PropFacilityTable",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Metal,
Tag::RefinedMetal,
Tag::BuildableAny,
Tag::Solid,
Tag::ManufacturedMaterial,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Steel),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropFacilityStatue:Entity = Entity::new(
crate::lang::Game::PropFacilityStatue,
"PropFacilityStatue",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Plumbable,
Tag::Crushable,
Tag::BuildableAny,
Tag::PreciousRock,
Tag::Solid,
Tag::BuildableRaw,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Granite),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropFacilityPainting:Entity = Entity::new(
crate::lang::Game::PropFacilityPainting,
"PropFacilityPainting",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Plumbable,
Tag::Crushable,
Tag::BuildableAny,
Tag::PreciousRock,
Tag::Solid,
Tag::BuildableRaw,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Granite),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropFacilityHangingLight:Entity = Entity::new(
crate::lang::Game::PropFacilityHangingLight,
"PropFacilityHangingLight",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Metal,
Tag::RefinedMetal,
Tag::BuildableAny,
Tag::Solid,
Tag::ManufacturedMaterial,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Steel),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropGravitasDecorativeWindow:Entity = Entity::new(
crate::lang::Game::PropGravitasDecorativeWindow,
"PropGravitasDecorativeWindow",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::BuildableAny,
Tag::Transparent,
Tag::Solid,
Tag::ManufacturedMaterial,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 15, radius: 3}),
primary_element: Some(&Glass),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropFacilityGlobeDroors:Entity = Entity::new(
crate::lang::Game::PropFacilityGlobeDroors,
"PropFacilityGlobeDroors",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Plumbable,
Tag::Crushable,
Tag::BuildableAny,
Tag::PreciousRock,
Tag::Solid,
Tag::BuildableRaw,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Granite),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropGravitasShelf:Entity = Entity::new(
crate::lang::Game::PropGravitasShelf,
"PropGravitasShelf",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Plumbable,
Tag::Crushable,
Tag::BuildableAny,
Tag::PreciousRock,
Tag::Solid,
Tag::BuildableRaw,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Granite),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropReceptionDesk:Entity = Entity::new(
crate::lang::Game::PropReceptionDesk,
"PropReceptionDesk",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Metal,
Tag::RefinedMetal,
Tag::BuildableAny,
Tag::Solid,
Tag::ManufacturedMaterial,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Steel),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static WarpReceiver:Entity = Entity::new(
crate::lang::Game::WarpReceiver,
"WarpReceiver",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::NotRoomAssignable,
Tag::WarpTech,
Tag::Gravitas,
Tag::Solid,
Tag::Special,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(2000.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Unobtanium),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static WarpPortal:Entity = Entity::new(
crate::lang::Game::WarpPortal,
"WarpPortal",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::NotRoomAssignable,
Tag::WarpTech,
Tag::Gravitas,
Tag::Solid,
Tag::Special,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(2000.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Unobtanium),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static VendingMachine:Entity = Entity::new(
crate::lang::Game::VendingMachine,
"VendingMachine",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Solid,
Tag::Special,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(100.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Unobtanium),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static SetLocker:Entity = Entity::new(
crate::lang::Game::SetLocker,
"SetLocker",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Solid,
Tag::Special,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(100.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Unobtanium),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropGravitasSmallSeedLocker:Entity = Entity::new(
crate::lang::Game::PropGravitasSmallSeedLocker,
"PropGravitasSmallSeedLocker",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Solid,
Tag::Special,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Unobtanium),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static CryoTank:Entity = Entity::new(
crate::lang::Game::CryoTank,
"CryoTank",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Solid,
Tag::Special,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(100.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Unobtanium),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropLight:Entity = Entity::new(
crate::lang::Game::PropLight,
"PropLight",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Metal,
Tag::RefinedMetal,
Tag::BuildableAny,
Tag::Solid,
Tag::ManufacturedMaterial,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Steel),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropTallPlant:Entity = Entity::new(
crate::lang::Game::PropTallPlant,
"PropTallPlant",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Antiseptic,
Tag::Plastic,
Tag::BuildableAny,
Tag::Solid,
Tag::ManufacturedMaterial,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Polypropylene),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropTable:Entity = Entity::new(
crate::lang::Game::PropTable,
"PropTable",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Solid,
Tag::Special,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Unobtanium),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropSurfaceSatellite3:Entity = Entity::new(
crate::lang::Game::PropSurfaceSatellite3,
"PropSurfaceSatellite3",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Solid,
Tag::Special,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Unobtanium),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropSurfaceSatellite2:Entity = Entity::new(
crate::lang::Game::PropSurfaceSatellite2,
"PropSurfaceSatellite2",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Solid,
Tag::Special,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Unobtanium),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropSurfaceSatellite1:Entity = Entity::new(
crate::lang::Game::PropSurfaceSatellite1,
"PropSurfaceSatellite1",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Solid,
Tag::Special,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Unobtanium),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropSkeleton:Entity = Entity::new(
crate::lang::Game::PropSkeleton,
"PropSkeleton",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Solid,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 30, radius: 6}),
primary_element: Some(&Creature),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropFacilityDisplay:Entity = Entity::new(
crate::lang::Game::PropFacilityDisplay,
"PropFacilityDisplay",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Metal,
Tag::RefinedMetal,
Tag::BuildableAny,
Tag::Solid,
Tag::ManufacturedMaterial,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Steel),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropFacilityDisplay2:Entity = Entity::new(
crate::lang::Game::PropFacilityDisplay2,
"PropFacilityDisplay2",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Metal,
Tag::RefinedMetal,
Tag::BuildableAny,
Tag::Solid,
Tag::ManufacturedMaterial,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Steel),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropFacilityDisplay3:Entity = Entity::new(
crate::lang::Game::PropFacilityDisplay3,
"PropFacilityDisplay3",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Metal,
Tag::RefinedMetal,
Tag::BuildableAny,
Tag::Solid,
Tag::ManufacturedMaterial,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Steel),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropFacilityDesk:Entity = Entity::new(
crate::lang::Game::PropFacilityDesk,
"PropFacilityDesk",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Plumbable,
Tag::Crushable,
Tag::BuildableAny,
Tag::PreciousRock,
Tag::Solid,
Tag::BuildableRaw,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Granite),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropFacilityCouch:Entity = Entity::new(
crate::lang::Game::PropFacilityCouch,
"PropFacilityCouch",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Plumbable,
Tag::Crushable,
Tag::BuildableAny,
Tag::PreciousRock,
Tag::Solid,
Tag::BuildableRaw,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Granite),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropFacilityChandelier:Entity = Entity::new(
crate::lang::Game::PropFacilityChandelier,
"PropFacilityChandelier",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Metal,
Tag::RefinedMetal,
Tag::BuildableAny,
Tag::Solid,
Tag::ManufacturedMaterial,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Steel),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropFacilityChairFlip:Entity = Entity::new(
crate::lang::Game::PropFacilityChairFlip,
"PropFacilityChairFlip",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Plumbable,
Tag::Crushable,
Tag::BuildableAny,
Tag::PreciousRock,
Tag::Solid,
Tag::BuildableRaw,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Granite),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropFacilityChair:Entity = Entity::new(
crate::lang::Game::PropFacilityChair,
"PropFacilityChair",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Plumbable,
Tag::Crushable,
Tag::BuildableAny,
Tag::PreciousRock,
Tag::Solid,
Tag::BuildableRaw,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Granite),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropElevator:Entity = Entity::new(
crate::lang::Game::PropElevator,
"PropElevator",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Metal,
Tag::RefinedMetal,
Tag::BuildableAny,
Tag::Solid,
Tag::ManufacturedMaterial,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Steel),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropDesk:Entity = Entity::new(
crate::lang::Game::PropDesk,
"PropDesk",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Metal,
Tag::RefinedMetal,
Tag::BuildableAny,
Tag::Solid,
Tag::ManufacturedMaterial,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Steel),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub static PropClock:Entity = Entity::new(
crate::lang::Game::PropClock,
"PropClock",
177013.000,
Params::BuildingGravitas(BuildingGravitas{
tags: &[
Tag::Gravitas,
Tag::Solid,
Tag::Special,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
rotations: None,
size: None,
hp: None,
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: Some(&Unobtanium),
deconstructable: None,
enableable: None,
flood_threshold: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
external_heat: None,
internal_heat: None,
transparent: None,
electrity_consummation: None,
}));
pub struct BuildingHep{
pub tags: &'static [Tag],
pub thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree,
pub location_rule: LocationRule,
pub material_category: &'static [MaterialCategory],
pub electrity_consummation: Option<&'static [Option<f32>]>,
pub external_heat: Option<f32>,
pub internal_heat: Option<f32>,
pub size: crate::units::Size,
pub hp: Option<i32>,
pub mass: crate::units::Kg,
pub decor: Option<crate::units::Decor>,
pub deconstructable: bool,
pub enableable: Option<bool>,
pub launch_rate: Option<f32>,
pub radbolt_decay: Option<f32>,
pub radbolt_storage: Option<f32>,
pub rotations: Option<Rotation>,
pub invincible: Option<bool>,
pub high_temp_warning: Option<crate::units::Temperature>,
pub high_temp_fatal: Option<crate::units::Temperature>,
pub flood_threshold: Option<crate::units::Percent>,
}
pub static HEPBattery:Entity = Entity::new(
crate::lang::Game::HEPBattery,
"HEPBattery",
6.000,
Params::BuildingHep(BuildingHep{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
electrity_consummation: Some(&[
Some(120.000),
]),
external_heat: Some(0.250),
internal_heat: Some(1.000),
size: crate::units::Size {width: 3, height: 3},
hp: Some(30),
mass: crate::units::Kg(400.000),
decor: Some(crate::units::Decor {value: -15, radius: 3}),
deconstructable: true,
enableable: Some(true),
launch_rate: Some(1.000),
radbolt_decay: Some(0.500),
radbolt_storage: Some(100.000),
rotations: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
flood_threshold: None,
}));
pub static HEPBridgeTile:Entity = Entity::new(
crate::lang::Game::HEPBridgeTile,
"HEPBridgeTile",
7.000,
Params::BuildingHep(BuildingHep{
tags: &[
Tag::HEPPassThrough,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::Tile,
material_category: &[
MaterialCategory::Tag(Tag::Plastic),
],
electrity_consummation: None,
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 2, height: 1},
hp: Some(100),
mass: crate::units::Kg(200.000),
decor: Some(crate::units::Decor {value: -25, radius: 6}),
deconstructable: true,
enableable: None,
launch_rate: None,
radbolt_decay: None,
radbolt_storage: None,
rotations: Some(Rotation::R360),
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
flood_threshold: None,
}));
pub static HighEnergyParticleRedirector:Entity = Entity::new(
crate::lang::Game::HighEnergyParticleRedirector,
"HighEnergyParticleRedirector",
5.000,
Params::BuildingHep(BuildingHep{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::NotInTiles,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
electrity_consummation: None,
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 2},
hp: Some(30),
mass: crate::units::Kg(400.000),
decor: Some(crate::units::Decor {value: -10, radius: 2}),
deconstructable: true,
enableable: Some(true),
launch_rate: None,
radbolt_decay: None,
radbolt_storage: None,
rotations: Some(Rotation::R360),
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
flood_threshold: None,
}));
pub static HighEnergyParticleSpawner:Entity = Entity::new(
crate::lang::Game::HighEnergyParticleSpawner,
"HighEnergyParticleSpawner",
4.000,
Params::BuildingHep(BuildingHep{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::NotInTiles,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
electrity_consummation: Some(&[
Some(480.000),
]),
external_heat: Some(1.000),
internal_heat: Some(4.000),
size: crate::units::Size {width: 1, height: 2},
hp: Some(30),
mass: crate::units::Kg(400.000),
decor: Some(crate::units::Decor {value: -10, radius: 2}),
deconstructable: true,
enableable: Some(true),
launch_rate: None,
radbolt_decay: None,
radbolt_storage: None,
rotations: Some(Rotation::R360),
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
flood_threshold: None,
}));
pub static ManualHighEnergyParticleSpawner:Entity = Entity::new(
crate::lang::Game::ManualHighEnergyParticleSpawner,
"ManualHighEnergyParticleSpawner",
1.000,
Params::BuildingHep(BuildingHep{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::BuildableRaw),
],
electrity_consummation: None,
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 1, height: 3},
hp: Some(30),
mass: crate::units::Kg(800.000),
decor: Some(crate::units::Decor {value: -10, radius: 2}),
deconstructable: true,
enableable: Some(true),
launch_rate: None,
radbolt_decay: None,
radbolt_storage: None,
rotations: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
flood_threshold: None,
}));
pub static NuclearReactor:Entity = Entity::new(
crate::lang::Game::NuclearReactor,
"NuclearReactor",
2.000,
Params::BuildingHep(BuildingHep{
tags: &[
Tag::IndustrialMachinery,
Tag::CorrosionProof,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.100),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
],
electrity_consummation: None,
external_heat: None,
internal_heat: None,
size: crate::units::Size {width: 5, height: 6},
hp: None,
mass: crate::units::Kg(800.000),
decor: Some(crate::units::Decor {value: -15, radius: 3}),
deconstructable: true,
enableable: None,
launch_rate: None,
radbolt_decay: None,
radbolt_storage: None,
rotations: None,
invincible: Some(true),
high_temp_warning: None,
high_temp_fatal: None,
flood_threshold: None,
}));
pub static RadiationLight:Entity = Entity::new(
crate::lang::Game::RadiationLight,
"RadiationLight",
0.000,
Params::BuildingHep(BuildingHep{
tags: &[
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnWall,
material_category: &[
MaterialCategory::Tag(Tag::Metal),
],
electrity_consummation: Some(&[
Some(60.000),
]),
external_heat: None,
internal_heat: Some(0.500),
size: crate::units::Size {width: 1, height: 1},
hp: Some(10),
mass: crate::units::Kg(50.000),
decor: None,
deconstructable: true,
enableable: Some(true),
launch_rate: None,
radbolt_decay: None,
radbolt_storage: None,
rotations: Some(Rotation::FlipH),
invincible: None,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
flood_threshold: Some(crate::units::Percent(0.350)),
}));
pub static UraniumCentrifuge:Entity = Entity::new(
crate::lang::Game::UraniumCentrifuge,
"UraniumCentrifuge",
3.000,
Params::BuildingHep(BuildingHep{
tags: &[
Tag::IndustrialMachinery,
],
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
location_rule: LocationRule::OnFloor,
material_category: &[
MaterialCategory::Tag(Tag::RefinedMetal),
MaterialCategory::Tag(Tag::Plastic),
],
electrity_consummation: Some(&[
Some(480.000),
]),
external_heat: Some(0.125),
internal_heat: Some(0.500),
size: crate::units::Size {width: 3, height: 4},
hp: Some(100),
mass: crate::units::Kg(900.000),
decor: Some(crate::units::Decor {value: -10, radius: 2}),
deconstructable: true,
enableable: Some(true),
launch_rate: None,
radbolt_decay: None,
radbolt_storage: None,
rotations: None,
invincible: None,
high_temp_warning: None,
high_temp_fatal: None,
flood_threshold: Some(crate::units::Percent(0.350)),
}));
pub struct BuildingQuest{
pub tags: &'static [Tag],
pub thermal_conductivity: Option<crate::units::DtuPerMetreSecondPerDegree>,
pub location_rule: Option<LocationRule>,
pub material_category: Option<&'static [MaterialCategory]>,
pub electrity_consummation: Option<&'static [Option<f32>]>,
pub size: Option<crate::units::Size>,
pub hp: Option<i32>,
pub high_temp_warning: Option<crate::units::Temperature>,
pub high_temp_fatal: Option<crate::units::Temperature>,
pub mass: crate::units::Kg,
pub flood_threshold: Option<crate::units::Percent>,
pub decor: crate::units::Decor,
pub deconstructable: Option<bool>,
pub enableable: Option<bool>,
pub invincible: Option<bool>,
pub primary_element: Option<&'static Entity>,
pub low_temp_warning: Option<crate::units::Temperature>,
pub low_temp_fatal: Option<crate::units::Temperature>,
}
pub static LonelyMinionHouse:Entity = Entity::new(
crate::lang::Game::LonelyMinionHouse,
"LonelyMinionHouse",
177013.000,
Params::BuildingQuest(BuildingQuest{
tags: &[
],
thermal_conductivity: Some(crate::units::DtuPerMetreSecondPerDegree(1.000)),
location_rule: Some(LocationRule::OnFloor),
material_category: Some(&[
MaterialCategory::Solid(&Steel),
]),
electrity_consummation: Some(&[
Some(60.000),
]),
size: Some(crate::units::Size {width: 4, height: 6}),
hp: Some(1000),
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(800.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: crate::units::Decor {value: -25, radius: 6},
deconstructable: Some(false),
enableable: None,
invincible: None,
primary_element: None,
low_temp_warning: None,
low_temp_fatal: None,
}));
pub static LonelyMailBox:Entity = Entity::new(
crate::lang::Game::LonelyMailBox,
"LonelyMailBox",
177013.000,
Params::BuildingQuest(BuildingQuest{
tags: &[
],
thermal_conductivity: Some(crate::units::DtuPerMetreSecondPerDegree(1.000)),
location_rule: Some(LocationRule::OnFloor),
material_category: Some(&[
MaterialCategory::Tag(Tag::Metal),
]),
electrity_consummation: None,
size: Some(crate::units::Size {width: 2, height: 2}),
hp: Some(10),
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(100.000),
flood_threshold: None,
decor: crate::units::Decor {value: -15, radius: 3},
deconstructable: Some(false),
enableable: Some(true),
invincible: None,
primary_element: None,
low_temp_warning: None,
low_temp_fatal: None,
}));
pub static TemporalTearOpener:Entity = Entity::new(
crate::lang::Game::TemporalTearOpener,
"TemporalTearOpener",
177013.000,
Params::BuildingQuest(BuildingQuest{
tags: &[
Tag::Solid,
Tag::Special,
],
thermal_conductivity: Some(crate::units::DtuPerMetreSecondPerDegree(1.000)),
location_rule: Some(LocationRule::OnFloor),
material_category: Some(&[
MaterialCategory::Tag(Tag::Metal),
]),
electrity_consummation: None,
size: Some(crate::units::Size {width: 3, height: 4}),
hp: None,
high_temp_warning: Some(crate::units::Temperature(348.150)),
high_temp_fatal: Some(crate::units::Temperature(533.150)),
mass: crate::units::Kg(800.000),
flood_threshold: Some(crate::units::Percent(0.350)),
decor: crate::units::Decor {value: 15, radius: 3},
deconstructable: Some(false),
enableable: Some(true),
invincible: Some(true),
primary_element: Some(&Unobtanium),
low_temp_warning: None,
low_temp_fatal: None,
}));
pub static FossilBitsLarge:Entity = Entity::new(
crate::lang::Game::FossilBitsLarge,
"FossilBitsLarge",
177013.000,
Params::BuildingQuest(BuildingQuest{
tags: &[
Tag::Gravitas,
Tag::Solid,
Tag::BuildableRaw,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
electrity_consummation: None,
size: None,
hp: None,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(2000.000),
flood_threshold: None,
decor: crate::units::Decor {value: 5, radius: 1},
deconstructable: None,
enableable: None,
invincible: None,
primary_element: Some(&Fossil),
low_temp_warning: None,
low_temp_fatal: None,
}));
pub static FossilBitsSmall:Entity = Entity::new(
crate::lang::Game::FossilBitsSmall,
"FossilBitsSmall",
177013.000,
Params::BuildingQuest(BuildingQuest{
tags: &[
Tag::Gravitas,
Tag::Solid,
Tag::BuildableRaw,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
electrity_consummation: None,
size: None,
hp: None,
high_temp_warning: None,
high_temp_fatal: None,
mass: crate::units::Kg(1500.000),
flood_threshold: None,
decor: crate::units::Decor {value: 5, radius: 1},
deconstructable: None,
enableable: None,
invincible: None,
primary_element: Some(&Fossil),
low_temp_warning: None,
low_temp_fatal: None,
}));
pub static SapTree:Entity = Entity::new(
crate::lang::Game::SapTree,
"SapTree",
177013.000,
Params::BuildingQuest(BuildingQuest{
tags: &[
Tag::Decoration,
],
thermal_conductivity: None,
location_rule: None,
material_category: None,
electrity_consummation: None,
size: None,
hp: None,
high_temp_warning: Some(crate::units::Temperature(373.150)),
high_temp_fatal: Some(crate::units::Temperature(1023.150)),
mass: crate::units::Kg(1.000),
flood_threshold: None,
decor: crate::units::Decor {value: 35, radius: 6},
deconstructable: None,
enableable: None,
invincible: None,
primary_element: Some(&Creature),
low_temp_warning: Some(crate::units::Temperature(173.150)),
low_temp_fatal: Some(crate::units::Temperature(0.000)),
}));
pub struct BuildingLander{
pub tags: &'static [Tag],
pub mass: crate::units::Kg,
pub decor: crate::units::Decor,
pub primary_element: &'static Entity,
pub deconstructable: bool,
}
pub static ScoutLander:Entity = Entity::new(
crate::lang::Game::ScoutLander,
"ScoutLander",
177013.000,
Params::BuildingLander(BuildingLander{
tags: &[
],
mass: crate::units::Kg(400.000),
decor: crate::units::Decor {value: 5, radius: 1},
primary_element: &Creature,
deconstructable: true,
}));
pub static PioneerLander:Entity = Entity::new(
crate::lang::Game::PioneerLander,
"PioneerLander",
177013.000,
Params::BuildingLander(BuildingLander{
tags: &[
],
mass: crate::units::Kg(400.000),
decor: crate::units::Decor {value: 5, radius: 1},
primary_element: &Creature,
deconstructable: true,
}));
pub struct ElementSolid{
pub dlc: &'static [crate::dlc::Dlc],
pub tags: &'static [Tag],
pub molar_mass: crate::units::GramPerMole,
pub hardness: f32,
pub shc: crate::units::DtuPerGramPerDegree,
pub strength: Option<f32>,
pub radiation_absorption_factor: crate::units::Percent,
pub thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree,
pub decor: crate::units::Decor,
pub clearable: bool,
pub default_mass: crate::units::Kg,
pub min_horizontal_flow: Option<f32>,
}
pub static Algae:Entity = Entity::new(
crate::lang::Game::Algae,
"Algae",
1.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Life,
Tag::PedestalDisplayable,
Tag::Solid,
Tag::Organics,
],
molar_mass: crate::units::GramPerMole(4.000),
hardness: 2.000,
shc: crate::units::DtuPerGramPerDegree(0.200),
strength: Some(0.200),
radiation_absorption_factor: crate::units::Percent(0.650),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(2.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(200.000),
min_horizontal_flow: None,
}));
pub static BleachStone:Entity = Entity::new(
crate::lang::Game::BleachStone,
"BleachStone",
6.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::FlyingCritterEdible,
Tag::Solid,
Tag::ConsumableOre,
],
molar_mass: crate::units::GramPerMole(43.000),
hardness: 50.000,
shc: crate::units::DtuPerGramPerDegree(0.500),
strength: Some(1.000),
radiation_absorption_factor: crate::units::Percent(0.730),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(4.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(50.000),
min_horizontal_flow: None,
}));
pub static OxyRock:Entity = Entity::new(
crate::lang::Game::OxyRock,
"OxyRock",
6.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::FlyingCritterEdible,
Tag::Oxidizer,
Tag::Solid,
Tag::ConsumableOre,
],
molar_mass: crate::units::GramPerMole(43.000),
hardness: 10.000,
shc: crate::units::DtuPerGramPerDegree(1.000),
strength: Some(1.000),
radiation_absorption_factor: crate::units::Percent(0.820),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(4.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(200.000),
min_horizontal_flow: None,
}));
pub static SlimeMold:Entity = Entity::new(
crate::lang::Game::SlimeMold,
"SlimeMold",
1.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::FlyingCritterEdible,
Tag::Solid,
Tag::Organics,
],
molar_mass: crate::units::GramPerMole(4.000),
hardness: 2.000,
shc: crate::units::DtuPerGramPerDegree(0.200),
strength: Some(0.200),
radiation_absorption_factor: crate::units::Percent(0.650),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(2.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(200.000),
min_horizontal_flow: None,
}));
pub static ToxicSand:Entity = Entity::new(
crate::lang::Game::ToxicSand,
"ToxicSand",
1.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Compostable,
Tag::Solid,
Tag::Organics,
],
molar_mass: crate::units::GramPerMole(50.000),
hardness: 10.000,
shc: crate::units::DtuPerGramPerDegree(0.830),
strength: Some(0.250),
radiation_absorption_factor: crate::units::Percent(0.700),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(2.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(1000.000),
min_horizontal_flow: Some(50.000),
}));
pub static CrushedIce:Entity = Entity::new(
crate::lang::Game::CrushedIce,
"CrushedIce",
8.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::IceOre,
Tag::Unstable,
Tag::Solid,
Tag::Liquifiable,
],
molar_mass: crate::units::GramPerMole(18.015),
hardness: 10.000,
shc: crate::units::DtuPerGramPerDegree(2.050),
strength: Some(0.400),
radiation_absorption_factor: crate::units::Percent(0.700),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(2.180),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(10.000),
min_horizontal_flow: Some(50.000),
}));
pub static Diamond:Entity = Entity::new(
crate::lang::Game::Diamond,
"Diamond",
12.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::BuildableAny,
Tag::Transparent,
Tag::FlyingCritterEdible,
Tag::Solid,
Tag::Other,
],
molar_mass: crate::units::GramPerMole(12.011),
hardness: 250.000,
shc: crate::units::DtuPerGramPerDegree(0.516),
strength: Some(2.500),
radiation_absorption_factor: crate::units::Percent(0.800),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(80.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(700.000),
min_horizontal_flow: None,
}));
pub static Isoresin:Entity = Entity::new(
crate::lang::Game::Isoresin,
"Isoresin",
10.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::BuildableRaw,
Tag::Solid,
Tag::RareMaterials,
],
molar_mass: crate::units::GramPerMole(162.140),
hardness: 10.000,
shc: crate::units::DtuPerGramPerDegree(1.300),
strength: Some(0.400),
radiation_absorption_factor: crate::units::Percent(0.750),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.170),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(30.000),
min_horizontal_flow: None,
}));
pub static Sucrose:Entity = Entity::new(
crate::lang::Game::Sucrose,
"Sucrose",
6.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Solid,
Tag::ConsumableOre,
],
molar_mass: crate::units::GramPerMole(342.300),
hardness: 5.000,
shc: crate::units::DtuPerGramPerDegree(1.255),
strength: Some(0.100),
radiation_absorption_factor: crate::units::Percent(0.700),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.150),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(500.000),
min_horizontal_flow: None,
}));
pub static MilkFat:Entity = Entity::new(
crate::lang::Game::MilkFat,
"MilkFat",
6.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Solid,
Tag::ConsumableOre,
],
molar_mass: crate::units::GramPerMole(42.080),
hardness: 1.000,
shc: crate::units::DtuPerGramPerDegree(1.920),
strength: Some(0.400),
radiation_absorption_factor: crate::units::Percent(0.850),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.150),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(913.000),
min_horizontal_flow: None,
}));
pub static Niobium:Entity = Entity::new(
crate::lang::Game::Niobium,
"Niobium",
5.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Metal,
Tag::RefinedMetal,
Tag::BuildableAny,
Tag::Solid,
Tag::RareMaterials,
],
molar_mass: crate::units::GramPerMole(92.900),
hardness: 50.000,
shc: crate::units::DtuPerGramPerDegree(0.265),
strength: Some(0.800),
radiation_absorption_factor: crate::units::Percent(0.490),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(54.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(30.000),
min_horizontal_flow: None,
}));
pub static MilkIce:Entity = Entity::new(
crate::lang::Game::MilkIce,
"MilkIce",
8.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::IceOre,
Tag::BuildableAny,
Tag::Solid,
Tag::Liquifiable,
],
molar_mass: crate::units::GramPerMole(18.015),
hardness: 25.000,
shc: crate::units::DtuPerGramPerDegree(3.400),
strength: Some(1.000),
radiation_absorption_factor: crate::units::Percent(0.800),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(2.180),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(1000.000),
min_horizontal_flow: None,
}));
pub static Cuprite:Entity = Entity::new(
crate::lang::Game::Cuprite,
"Cuprite",
5.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Ore,
Tag::BuildableAny,
Tag::Solid,
Tag::Metal,
],
molar_mass: crate::units::GramPerMole(143.090),
hardness: 25.000,
shc: crate::units::DtuPerGramPerDegree(0.386),
strength: Some(0.700),
radiation_absorption_factor: crate::units::Percent(0.560),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(4.500),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(800.000),
min_horizontal_flow: None,
}));
pub static Copper:Entity = Entity::new(
crate::lang::Game::Copper,
"Copper",
4.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::BuildableAny,
Tag::Solid,
Tag::RefinedMetal,
],
molar_mass: crate::units::GramPerMole(63.546),
hardness: 25.000,
shc: crate::units::DtuPerGramPerDegree(0.385),
strength: Some(0.800),
radiation_absorption_factor: crate::units::Percent(0.610),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(60.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(900.000),
min_horizontal_flow: None,
}));
pub static SuperInsulator:Entity = Entity::new(
crate::lang::Game::SuperInsulator,
"SuperInsulator",
7.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::BuildableRaw,
Tag::Plumbable,
Tag::Crushable,
Tag::BuildableAny,
Tag::Insulator,
Tag::Solid,
Tag::ManufacturedMaterial,
],
molar_mass: crate::units::GramPerMole(341.760),
hardness: 200.000,
shc: crate::units::DtuPerGramPerDegree(5.570),
strength: Some(2.000),
radiation_absorption_factor: crate::units::Percent(0.600),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(900.000),
min_horizontal_flow: None,
}));
pub static BrineIce:Entity = Entity::new(
crate::lang::Game::BrineIce,
"BrineIce",
8.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::IceOre,
Tag::BuildableAny,
Tag::Solid,
Tag::Liquifiable,
],
molar_mass: crate::units::GramPerMole(18.015),
hardness: 25.000,
shc: crate::units::DtuPerGramPerDegree(3.400),
strength: Some(1.000),
radiation_absorption_factor: crate::units::Percent(0.800),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(2.180),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(1000.000),
min_horizontal_flow: None,
}));
pub static SolidViscoGel:Entity = Entity::new(
crate::lang::Game::SolidViscoGel,
"SolidViscoGel",
9.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Plastic,
Tag::Solid,
Tag::ManufacturedMaterial,
],
molar_mass: crate::units::GramPerMole(95.000),
hardness: 2.000,
shc: crate::units::DtuPerGramPerDegree(1.550),
strength: Some(0.100),
radiation_absorption_factor: crate::units::Percent(0.600),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.450),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(100.000),
min_horizontal_flow: None,
}));
pub static Ceramic:Entity = Entity::new(
crate::lang::Game::Ceramic,
"Ceramic",
7.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Plumbable,
Tag::Crushable,
Tag::BuildableAny,
Tag::Insulator,
Tag::Solid,
Tag::BuildableRaw,
],
molar_mass: crate::units::GramPerMole(25.000),
hardness: 50.000,
shc: crate::units::DtuPerGramPerDegree(0.840),
strength: Some(1.000),
radiation_absorption_factor: crate::units::Percent(0.650),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.620),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(1000.000),
min_horizontal_flow: None,
}));
pub static Cobaltite:Entity = Entity::new(
crate::lang::Game::Cobaltite,
"Cobaltite",
5.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Ore,
Tag::BuildableAny,
Tag::Solid,
Tag::Metal,
],
molar_mass: crate::units::GramPerMole(165.900),
hardness: 25.000,
shc: crate::units::DtuPerGramPerDegree(0.420),
strength: Some(0.900),
radiation_absorption_factor: crate::units::Percent(0.580),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(4.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(1250.000),
min_horizontal_flow: None,
}));
pub static Fertilizer:Entity = Entity::new(
crate::lang::Game::Fertilizer,
"Fertilizer",
3.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Oxidizer,
Tag::Solid,
Tag::Agriculture,
],
molar_mass: crate::units::GramPerMole(50.000),
hardness: 2.000,
shc: crate::units::DtuPerGramPerDegree(0.830),
strength: Some(0.200),
radiation_absorption_factor: crate::units::Percent(0.700),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(2.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(200.000),
min_horizontal_flow: None,
}));
pub static SolidCrudeOil:Entity = Entity::new(
crate::lang::Game::SolidCrudeOil,
"SolidCrudeOil",
11.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Solid,
Tag::Liquifiable,
],
molar_mass: crate::units::GramPerMole(500.000),
hardness: 2.000,
shc: crate::units::DtuPerGramPerDegree(1.690),
strength: Some(0.100),
radiation_absorption_factor: crate::units::Percent(0.800),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(2.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(870.000),
min_horizontal_flow: None,
}));
pub static Wolframite:Entity = Entity::new(
crate::lang::Game::Wolframite,
"Wolframite",
5.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Plumbable,
Tag::BuildableAny,
Tag::Solid,
Tag::Metal,
],
molar_mass: crate::units::GramPerMole(150.000),
hardness: 150.000,
shc: crate::units::DtuPerGramPerDegree(0.134),
strength: Some(0.800),
radiation_absorption_factor: crate::units::Percent(0.650),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(15.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(600.000),
min_horizontal_flow: None,
}));
pub static Polypropylene:Entity = Entity::new(
crate::lang::Game::Polypropylene,
"Polypropylene",
9.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Antiseptic,
Tag::Plastic,
Tag::BuildableAny,
Tag::Solid,
Tag::ManufacturedMaterial,
],
molar_mass: crate::units::GramPerMole(42.080),
hardness: 1.000,
shc: crate::units::DtuPerGramPerDegree(1.920),
strength: Some(0.400),
radiation_absorption_factor: crate::units::Percent(0.850),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.150),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(913.000),
min_horizontal_flow: None,
}));
pub static SolidNaphtha:Entity = Entity::new(
crate::lang::Game::SolidNaphtha,
"SolidNaphtha",
11.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Solid,
Tag::Liquifiable,
],
molar_mass: crate::units::GramPerMole(102.200),
hardness: 2.000,
shc: crate::units::DtuPerGramPerDegree(2.191),
strength: Some(0.100),
radiation_absorption_factor: crate::units::Percent(0.600),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.200),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(740.000),
min_horizontal_flow: None,
}));
pub static Tungsten:Entity = Entity::new(
crate::lang::Game::Tungsten,
"Tungsten",
4.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Plumbable,
Tag::BuildableAny,
Tag::Solid,
Tag::RefinedMetal,
],
molar_mass: crate::units::GramPerMole(183.840),
hardness: 200.000,
shc: crate::units::DtuPerGramPerDegree(0.134),
strength: Some(0.900),
radiation_absorption_factor: crate::units::Percent(0.350),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(60.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(200.000),
min_horizontal_flow: None,
}));
pub static RefinedCarbon:Entity = Entity::new(
crate::lang::Game::RefinedCarbon,
"RefinedCarbon",
6.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Insulator,
Tag::Solid,
Tag::ConsumableOre,
],
molar_mass: crate::units::GramPerMole(12.011),
hardness: 2.000,
shc: crate::units::DtuPerGramPerDegree(1.740),
strength: Some(0.800),
radiation_absorption_factor: crate::units::Percent(0.840),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(3.100),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(600.000),
min_horizontal_flow: None,
}));
pub static Steel:Entity = Entity::new(
crate::lang::Game::Steel,
"Steel",
5.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Metal,
Tag::RefinedMetal,
Tag::BuildableAny,
Tag::Solid,
Tag::ManufacturedMaterial,
],
molar_mass: crate::units::GramPerMole(54.970),
hardness: 50.000,
shc: crate::units::DtuPerGramPerDegree(0.490),
strength: Some(2.000),
radiation_absorption_factor: crate::units::Percent(0.740),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(54.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(400.000),
min_horizontal_flow: None,
}));
pub static Phosphorite:Entity = Entity::new(
crate::lang::Game::Phosphorite,
"Phosphorite",
3.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::FlyingCritterEdible,
Tag::Solid,
Tag::Agriculture,
],
molar_mass: crate::units::GramPerMole(95.610),
hardness: 25.000,
shc: crate::units::DtuPerGramPerDegree(0.150),
strength: Some(0.800),
radiation_absorption_factor: crate::units::Percent(0.750),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(2.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(600.000),
min_horizontal_flow: None,
}));
pub static SolidHydrogen:Entity = Entity::new(
crate::lang::Game::SolidHydrogen,
"SolidHydrogen",
11.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Solid,
Tag::Liquifiable,
],
molar_mass: crate::units::GramPerMole(44.100),
hardness: 2.000,
shc: crate::units::DtuPerGramPerDegree(2.400),
strength: Some(0.250),
radiation_absorption_factor: crate::units::Percent(0.900),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(600.000),
min_horizontal_flow: None,
}));
pub static Lead:Entity = Entity::new(
crate::lang::Game::Lead,
"Lead",
4.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::BuildableAny,
Tag::Solid,
Tag::RefinedMetal,
],
molar_mass: crate::units::GramPerMole(55.845),
hardness: 10.000,
shc: crate::units::DtuPerGramPerDegree(0.128),
strength: Some(0.800),
radiation_absorption_factor: crate::units::Percent(0.850),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(35.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(2000.000),
min_horizontal_flow: None,
}));
pub static Sulfur:Entity = Entity::new(
crate::lang::Game::Sulfur,
"Sulfur",
12.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Solid,
Tag::Other,
],
molar_mass: crate::units::GramPerMole(50.000),
hardness: 5.000,
shc: crate::units::DtuPerGramPerDegree(0.700),
strength: Some(0.100),
radiation_absorption_factor: crate::units::Percent(0.740),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.200),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(500.000),
min_horizontal_flow: None,
}));
pub static Lime:Entity = Entity::new(
crate::lang::Game::Lime,
"Lime",
6.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Solid,
Tag::ConsumableOre,
],
molar_mass: crate::units::GramPerMole(200.000),
hardness: 50.000,
shc: crate::units::DtuPerGramPerDegree(0.834),
strength: Some(0.200),
radiation_absorption_factor: crate::units::Percent(0.750),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(2.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(1000.000),
min_horizontal_flow: None,
}));
pub static SolidChlorine:Entity = Entity::new(
crate::lang::Game::SolidChlorine,
"SolidChlorine",
11.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Solid,
Tag::Liquifiable,
],
molar_mass: crate::units::GramPerMole(34.453),
hardness: 25.000,
shc: crate::units::DtuPerGramPerDegree(0.480),
strength: Some(0.500),
radiation_absorption_factor: crate::units::Percent(0.730),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.750),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(600.000),
min_horizontal_flow: None,
}));
pub static SolidNuclearWaste:Entity = Entity::new(
crate::lang::Game::SolidNuclearWaste,
"SolidNuclearWaste",
12.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::EmitsLight,
Tag::Solid,
Tag::Other,
],
molar_mass: crate::units::GramPerMole(196.967),
hardness: 0.000,
shc: crate::units::DtuPerGramPerDegree(7.440),
strength: None,
radiation_absorption_factor: crate::units::Percent(0.300),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(6.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(1840.000),
min_horizontal_flow: None,
}));
pub static Obsidian:Entity = Entity::new(
crate::lang::Game::Obsidian,
"Obsidian",
7.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Plumbable,
Tag::Crushable,
Tag::BuildableAny,
Tag::PreciousRock,
Tag::Solid,
Tag::BuildableRaw,
],
molar_mass: crate::units::GramPerMole(50.000),
hardness: 200.000,
shc: crate::units::DtuPerGramPerDegree(0.200),
strength: Some(1.000),
radiation_absorption_factor: crate::units::Percent(0.750),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(2.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(1000.000),
min_horizontal_flow: None,
}));
pub static SolidPetroleum:Entity = Entity::new(
crate::lang::Game::SolidPetroleum,
"SolidPetroleum",
11.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Solid,
Tag::Liquifiable,
],
molar_mass: crate::units::GramPerMole(82.200),
hardness: 2.000,
shc: crate::units::DtuPerGramPerDegree(1.760),
strength: Some(0.100),
radiation_absorption_factor: crate::units::Percent(0.800),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(2.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(740.000),
min_horizontal_flow: None,
}));
pub static SolidSuperCoolant:Entity = Entity::new(
crate::lang::Game::SolidSuperCoolant,
"SolidSuperCoolant",
9.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Solid,
Tag::ManufacturedMaterial,
],
molar_mass: crate::units::GramPerMole(250.000),
hardness: 2.000,
shc: crate::units::DtuPerGramPerDegree(8.440),
strength: Some(0.100),
radiation_absorption_factor: crate::units::Percent(0.600),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(9.460),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(740.000),
min_horizontal_flow: None,
}));
pub static IgneousRock:Entity = Entity::new(
crate::lang::Game::IgneousRock,
"IgneousRock",
7.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Plumbable,
Tag::Crushable,
Tag::BuildableAny,
Tag::Solid,
Tag::BuildableRaw,
],
molar_mass: crate::units::GramPerMole(50.000),
hardness: 25.000,
shc: crate::units::DtuPerGramPerDegree(1.000),
strength: Some(1.000),
radiation_absorption_factor: crate::units::Percent(0.750),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(2.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(1840.000),
min_horizontal_flow: None,
}));
pub static EnrichedUranium:Entity = Entity::new(
crate::lang::Game::EnrichedUranium,
"EnrichedUranium",
9.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Solid,
Tag::ManufacturedMaterial,
],
molar_mass: crate::units::GramPerMole(120.000),
hardness: 250.000,
shc: crate::units::DtuPerGramPerDegree(1.000),
strength: Some(1.000),
radiation_absorption_factor: crate::units::Percent(0.300),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(20.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(100.000),
min_horizontal_flow: None,
}));
pub static Gold:Entity = Entity::new(
crate::lang::Game::Gold,
"Gold",
4.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::BuildableAny,
Tag::Solid,
Tag::RefinedMetal,
],
molar_mass: crate::units::GramPerMole(196.967),
hardness: 2.000,
shc: crate::units::DtuPerGramPerDegree(0.129),
strength: Some(0.700),
radiation_absorption_factor: crate::units::Percent(0.350),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(60.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(870.000),
min_horizontal_flow: None,
}));
pub static Rust:Entity = Entity::new(
crate::lang::Game::Rust,
"Rust",
6.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Solid,
Tag::ConsumableOre,
],
molar_mass: crate::units::GramPerMole(159.688),
hardness: 25.000,
shc: crate::units::DtuPerGramPerDegree(0.449),
strength: Some(0.900),
radiation_absorption_factor: crate::units::Percent(0.700),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(4.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(800.000),
min_horizontal_flow: None,
}));
pub static Corium:Entity = Entity::new(
crate::lang::Game::Corium,
"Corium",
12.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Solid,
Tag::Other,
],
molar_mass: crate::units::GramPerMole(196.967),
hardness: 251.000,
shc: crate::units::DtuPerGramPerDegree(7.440),
strength: Some(0.450),
radiation_absorption_factor: crate::units::Percent(0.300),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(6.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(200.000),
min_horizontal_flow: None,
}));
pub static Phosphorus:Entity = Entity::new(
crate::lang::Game::Phosphorus,
"Phosphorus",
6.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::FlyingCritterEdible,
Tag::Solid,
Tag::ConsumableOre,
],
molar_mass: crate::units::GramPerMole(30.974),
hardness: 0.000,
shc: crate::units::DtuPerGramPerDegree(0.770),
strength: Some(0.850),
radiation_absorption_factor: crate::units::Percent(0.750),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.236),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(200.000),
min_horizontal_flow: None,
}));
pub static Granite:Entity = Entity::new(
crate::lang::Game::Granite,
"Granite",
7.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Plumbable,
Tag::Crushable,
Tag::BuildableAny,
Tag::PreciousRock,
Tag::Solid,
Tag::BuildableRaw,
],
molar_mass: crate::units::GramPerMole(50.000),
hardness: 80.000,
shc: crate::units::DtuPerGramPerDegree(0.790),
strength: Some(1.500),
radiation_absorption_factor: crate::units::Percent(0.700),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(3.390),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(1840.000),
min_horizontal_flow: None,
}));
pub static SolidCarbonDioxide:Entity = Entity::new(
crate::lang::Game::SolidCarbonDioxide,
"SolidCarbonDioxide",
11.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Solid,
Tag::Liquifiable,
],
molar_mass: crate::units::GramPerMole(44.010),
hardness: 2.000,
shc: crate::units::DtuPerGramPerDegree(0.846),
strength: Some(0.600),
radiation_absorption_factor: crate::units::Percent(0.800),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.460),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(600.000),
min_horizontal_flow: None,
}));
pub static Cobalt:Entity = Entity::new(
crate::lang::Game::Cobalt,
"Cobalt",
4.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::BuildableAny,
Tag::Solid,
Tag::RefinedMetal,
],
molar_mass: crate::units::GramPerMole(58.900),
hardness: 75.000,
shc: crate::units::DtuPerGramPerDegree(0.420),
strength: Some(0.900),
radiation_absorption_factor: crate::units::Percent(0.630),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(100.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(800.000),
min_horizontal_flow: None,
}));
pub static UraniumOre:Entity = Entity::new(
crate::lang::Game::UraniumOre,
"UraniumOre",
5.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::BuildableAny,
Tag::Metal,
Tag::Noncrushable,
Tag::Solid,
],
molar_mass: crate::units::GramPerMole(120.000),
hardness: 150.000,
shc: crate::units::DtuPerGramPerDegree(1.000),
strength: Some(1.000),
radiation_absorption_factor: crate::units::Percent(0.300),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(20.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(100.000),
min_horizontal_flow: None,
}));
pub static AluminumOre:Entity = Entity::new(
crate::lang::Game::AluminumOre,
"AluminumOre",
5.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Ore,
Tag::BuildableAny,
Tag::Solid,
Tag::Metal,
],
molar_mass: crate::units::GramPerMole(143.090),
hardness: 25.000,
shc: crate::units::DtuPerGramPerDegree(0.910),
strength: Some(0.700),
radiation_absorption_factor: crate::units::Percent(0.720),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(20.500),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(500.000),
min_horizontal_flow: None,
}));
pub static SedimentaryRock:Entity = Entity::new(
crate::lang::Game::SedimentaryRock,
"SedimentaryRock",
7.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Plumbable,
Tag::Crushable,
Tag::BuildableAny,
Tag::Solid,
Tag::BuildableRaw,
],
molar_mass: crate::units::GramPerMole(50.000),
hardness: 2.000,
shc: crate::units::DtuPerGramPerDegree(0.200),
strength: Some(0.200),
radiation_absorption_factor: crate::units::Percent(0.700),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(2.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(1840.000),
min_horizontal_flow: None,
}));
pub static Fullerene:Entity = Entity::new(
crate::lang::Game::Fullerene,
"Fullerene",
10.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Solid,
Tag::RareMaterials,
],
molar_mass: crate::units::GramPerMole(12.011),
hardness: 250.000,
shc: crate::units::DtuPerGramPerDegree(0.950),
strength: Some(1.000),
radiation_absorption_factor: crate::units::Percent(0.600),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(50.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(30.000),
min_horizontal_flow: None,
}));
pub static GoldAmalgam:Entity = Entity::new(
crate::lang::Game::GoldAmalgam,
"GoldAmalgam",
5.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Ore,
Tag::BuildableAny,
Tag::Solid,
Tag::Metal,
],
molar_mass: crate::units::GramPerMole(95.610),
hardness: 2.000,
shc: crate::units::DtuPerGramPerDegree(0.150),
strength: Some(0.800),
radiation_absorption_factor: crate::units::Percent(0.300),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(2.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(800.000),
min_horizontal_flow: None,
}));
pub static Salt:Entity = Entity::new(
crate::lang::Game::Salt,
"Salt",
6.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Solid,
Tag::ConsumableOre,
],
molar_mass: crate::units::GramPerMole(50.000),
hardness: 5.000,
shc: crate::units::DtuPerGramPerDegree(0.700),
strength: Some(0.100),
radiation_absorption_factor: crate::units::Percent(0.750),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.444),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(500.000),
min_horizontal_flow: None,
}));
pub static Sand:Entity = Entity::new(
crate::lang::Game::Sand,
"Sand",
3.500,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Unstable,
Tag::Solid,
Tag::Filter,
],
molar_mass: crate::units::GramPerMole(50.000),
hardness: 10.000,
shc: crate::units::DtuPerGramPerDegree(0.830),
strength: Some(0.250),
radiation_absorption_factor: crate::units::Percent(0.700),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(2.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(1000.000),
min_horizontal_flow: Some(50.000),
}));
pub static Snow:Entity = Entity::new(
crate::lang::Game::Snow,
"Snow",
8.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::IceOre,
Tag::Unstable,
Tag::Solid,
Tag::Liquifiable,
],
molar_mass: crate::units::GramPerMole(18.015),
hardness: 10.000,
shc: crate::units::DtuPerGramPerDegree(2.050),
strength: Some(0.300),
radiation_absorption_factor: crate::units::Percent(0.700),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.545),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(10.000),
min_horizontal_flow: Some(50.000),
}));
pub static SandStone:Entity = Entity::new(
crate::lang::Game::SandStone,
"SandStone",
7.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Plumbable,
Tag::Crushable,
Tag::BuildableAny,
Tag::Solid,
Tag::BuildableRaw,
],
molar_mass: crate::units::GramPerMole(50.000),
hardness: 10.000,
shc: crate::units::DtuPerGramPerDegree(0.800),
strength: Some(0.500),
radiation_absorption_factor: crate::units::Percent(0.700),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(2.900),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(1000.000),
min_horizontal_flow: None,
}));
pub static Glass:Entity = Entity::new(
crate::lang::Game::Glass,
"Glass",
9.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::BuildableAny,
Tag::Transparent,
Tag::Solid,
Tag::ManufacturedMaterial,
],
molar_mass: crate::units::GramPerMole(25.000),
hardness: 10.000,
shc: crate::units::DtuPerGramPerDegree(0.840),
strength: Some(1.000),
radiation_absorption_factor: crate::units::Percent(0.650),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.110),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(800.000),
min_horizontal_flow: None,
}));
pub static Clay:Entity = Entity::new(
crate::lang::Game::Clay,
"Clay",
2.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::BuildableAny,
Tag::Solid,
Tag::Farmable,
],
molar_mass: crate::units::GramPerMole(200.000),
hardness: 5.000,
shc: crate::units::DtuPerGramPerDegree(0.920),
strength: Some(0.200),
radiation_absorption_factor: crate::units::Percent(0.650),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(2.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(1000.000),
min_horizontal_flow: None,
}));
pub static Ice:Entity = Entity::new(
crate::lang::Game::Ice,
"Ice",
8.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::IceOre,
Tag::BuildableAny,
Tag::Solid,
Tag::Liquifiable,
],
molar_mass: crate::units::GramPerMole(18.015),
hardness: 25.000,
shc: crate::units::DtuPerGramPerDegree(2.050),
strength: Some(1.000),
radiation_absorption_factor: crate::units::Percent(0.800),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(2.180),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(1000.000),
min_horizontal_flow: None,
}));
pub static Graphite:Entity = Entity::new(
crate::lang::Game::Graphite,
"Graphite",
7.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Solid,
Tag::BuildableRaw,
],
molar_mass: crate::units::GramPerMole(12.011),
hardness: 0.000,
shc: crate::units::DtuPerGramPerDegree(0.710),
strength: Some(0.100),
radiation_absorption_factor: crate::units::Percent(0.850),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(8.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(200.000),
min_horizontal_flow: None,
}));
pub static ToxicMud:Entity = Entity::new(
crate::lang::Game::ToxicMud,
"ToxicMud",
1.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Unstable,
Tag::Solid,
Tag::Organics,
],
molar_mass: crate::units::GramPerMole(50.000),
hardness: 10.000,
shc: crate::units::DtuPerGramPerDegree(0.830),
strength: Some(0.250),
radiation_absorption_factor: crate::units::Percent(0.700),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(2.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(1000.000),
min_horizontal_flow: Some(50.000),
}));
pub static Mud:Entity = Entity::new(
crate::lang::Game::Mud,
"Mud",
1.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Unstable,
Tag::Solid,
Tag::Organics,
],
molar_mass: crate::units::GramPerMole(50.000),
hardness: 10.000,
shc: crate::units::DtuPerGramPerDegree(0.830),
strength: Some(0.250),
radiation_absorption_factor: crate::units::Percent(0.700),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(2.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(1000.000),
min_horizontal_flow: Some(50.000),
}));
pub static Carbon:Entity = Entity::new(
crate::lang::Game::Carbon,
"Carbon",
6.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Coal,
Tag::BuildableAny,
Tag::Solid,
Tag::ConsumableOre,
],
molar_mass: crate::units::GramPerMole(12.011),
hardness: 2.000,
shc: crate::units::DtuPerGramPerDegree(0.710),
strength: Some(0.800),
radiation_absorption_factor: crate::units::Percent(0.840),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.250),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(600.000),
min_horizontal_flow: None,
}));
pub static SolidOxygen:Entity = Entity::new(
crate::lang::Game::SolidOxygen,
"SolidOxygen",
11.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Solid,
Tag::Liquifiable,
],
molar_mass: crate::units::GramPerMole(50.000),
hardness: 2.000,
shc: crate::units::DtuPerGramPerDegree(1.010),
strength: Some(0.500),
radiation_absorption_factor: crate::units::Percent(0.820),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(500.000),
min_horizontal_flow: None,
}));
pub static Creature:Entity = Entity::new(
crate::lang::Game::Creature,
"Creature",
15.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Solid,
],
molar_mass: crate::units::GramPerMole(25.000),
hardness: 10.000,
shc: crate::units::DtuPerGramPerDegree(3.470),
strength: Some(1.000),
radiation_absorption_factor: crate::units::Percent(0.250),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.600),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(40.000),
min_horizontal_flow: None,
}));
pub static DepletedUranium:Entity = Entity::new(
crate::lang::Game::DepletedUranium,
"DepletedUranium",
4.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::BuildableAny,
Tag::RefinedMetal,
Tag::Solid,
],
molar_mass: crate::units::GramPerMole(120.000),
hardness: 250.000,
shc: crate::units::DtuPerGramPerDegree(1.000),
strength: Some(1.000),
radiation_absorption_factor: crate::units::Percent(0.850),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(20.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(100.000),
min_horizontal_flow: None,
}));
pub static Katairite:Entity = Entity::new(
crate::lang::Game::Katairite,
"Katairite",
12.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Solid,
Tag::Other,
],
molar_mass: crate::units::GramPerMole(341.760),
hardness: 150.000,
shc: crate::units::DtuPerGramPerDegree(4.000),
strength: Some(2.000),
radiation_absorption_factor: crate::units::Percent(0.900),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(500.000),
min_horizontal_flow: None,
}));
pub static SolidMethane:Entity = Entity::new(
crate::lang::Game::SolidMethane,
"SolidMethane",
6.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Solid,
Tag::ConsumableOre,
],
molar_mass: crate::units::GramPerMole(16.044),
hardness: 2.000,
shc: crate::units::DtuPerGramPerDegree(2.191),
strength: Some(1.000),
radiation_absorption_factor: crate::units::Percent(0.750),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.030),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(500.000),
min_horizontal_flow: None,
}));
pub static HardPolypropylene:Entity = Entity::new(
crate::lang::Game::HardPolypropylene,
"HardPolypropylene",
9.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Antiseptic,
Tag::Plastic,
Tag::BuildableAny,
Tag::Solid,
Tag::ManufacturedMaterial,
],
molar_mass: crate::units::GramPerMole(100.016),
hardness: 1.000,
shc: crate::units::DtuPerGramPerDegree(1.500),
strength: Some(0.400),
radiation_absorption_factor: crate::units::Percent(0.850),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.250),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(913.000),
min_horizontal_flow: None,
}));
pub static MaficRock:Entity = Entity::new(
crate::lang::Game::MaficRock,
"MaficRock",
7.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::BuildableAny,
Tag::Solid,
Tag::BuildableRaw,
],
molar_mass: crate::units::GramPerMole(50.000),
hardness: 2.000,
shc: crate::units::DtuPerGramPerDegree(0.200),
strength: Some(1.000),
radiation_absorption_factor: crate::units::Percent(0.650),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(1840.000),
min_horizontal_flow: None,
}));
pub static Iron:Entity = Entity::new(
crate::lang::Game::Iron,
"Iron",
4.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::BuildableAny,
Tag::Solid,
Tag::RefinedMetal,
],
molar_mass: crate::units::GramPerMole(55.845),
hardness: 50.000,
shc: crate::units::DtuPerGramPerDegree(0.449),
strength: Some(1.000),
radiation_absorption_factor: crate::units::Percent(0.660),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(55.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(1000.000),
min_horizontal_flow: None,
}));
pub static Regolith:Entity = Entity::new(
crate::lang::Game::Regolith,
"Regolith",
3.500,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Unstable,
Tag::Solid,
Tag::Filter,
],
molar_mass: crate::units::GramPerMole(50.000),
hardness: 2.000,
shc: crate::units::DtuPerGramPerDegree(0.200),
strength: Some(0.500),
radiation_absorption_factor: crate::units::Percent(0.600),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(1000.000),
min_horizontal_flow: Some(50.000),
}));
pub static SolidResin:Entity = Entity::new(
crate::lang::Game::SolidResin,
"SolidResin",
1.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Solid,
Tag::Organics,
],
molar_mass: crate::units::GramPerMole(52.500),
hardness: 10.000,
shc: crate::units::DtuPerGramPerDegree(1.300),
strength: Some(0.200),
radiation_absorption_factor: crate::units::Percent(0.750),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.170),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(30.000),
min_horizontal_flow: None,
}));
pub static TempConductorSolid:Entity = Entity::new(
crate::lang::Game::TempConductorSolid,
"TempConductorSolid",
5.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Metal,
Tag::RefinedMetal,
Tag::Plumbable,
Tag::BuildableAny,
Tag::Solid,
Tag::ManufacturedMaterial,
],
molar_mass: crate::units::GramPerMole(174.350),
hardness: 80.000,
shc: crate::units::DtuPerGramPerDegree(0.622),
strength: Some(0.800),
radiation_absorption_factor: crate::units::Percent(0.600),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(220.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(900.000),
min_horizontal_flow: None,
}));
pub static IronOre:Entity = Entity::new(
crate::lang::Game::IronOre,
"IronOre",
5.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Ore,
Tag::BuildableAny,
Tag::Solid,
Tag::Metal,
],
molar_mass: crate::units::GramPerMole(159.688),
hardness: 25.000,
shc: crate::units::DtuPerGramPerDegree(0.449),
strength: Some(0.900),
radiation_absorption_factor: crate::units::Percent(0.610),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(4.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(800.000),
min_horizontal_flow: None,
}));
pub static Dirt:Entity = Entity::new(
crate::lang::Game::Dirt,
"Dirt",
2.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::BuildableAny,
Tag::Solid,
Tag::Farmable,
],
molar_mass: crate::units::GramPerMole(50.000),
hardness: 2.000,
shc: crate::units::DtuPerGramPerDegree(1.480),
strength: Some(0.200),
radiation_absorption_factor: crate::units::Percent(0.750),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(2.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(1840.000),
min_horizontal_flow: None,
}));
pub static DirtyIce:Entity = Entity::new(
crate::lang::Game::DirtyIce,
"DirtyIce",
8.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::IceOre,
Tag::Mixture,
Tag::BuildableAny,
Tag::Solid,
Tag::Liquifiable,
],
molar_mass: crate::units::GramPerMole(25.000),
hardness: 10.000,
shc: crate::units::DtuPerGramPerDegree(3.050),
strength: Some(1.000),
radiation_absorption_factor: crate::units::Percent(0.750),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(500.000),
min_horizontal_flow: None,
}));
pub static Fossil:Entity = Entity::new(
crate::lang::Game::Fossil,
"Fossil",
7.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Solid,
Tag::BuildableRaw,
],
molar_mass: crate::units::GramPerMole(200.000),
hardness: 50.000,
shc: crate::units::DtuPerGramPerDegree(0.910),
strength: Some(0.200),
radiation_absorption_factor: crate::units::Percent(0.700),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(2.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(500.000),
min_horizontal_flow: None,
}));
pub static Unobtanium:Entity = Entity::new(
crate::lang::Game::Unobtanium,
"Unobtanium",
12.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Solid,
Tag::Special,
],
molar_mass: crate::units::GramPerMole(10000.000),
hardness: 255.000,
shc: crate::units::DtuPerGramPerDegree(0.000),
strength: None,
radiation_absorption_factor: crate::units::Percent(0.900),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(20000.000),
min_horizontal_flow: None,
}));
pub static SolidEthanol:Entity = Entity::new(
crate::lang::Game::SolidEthanol,
"SolidEthanol",
8.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::IceOre,
Tag::BuildableAny,
Tag::Solid,
Tag::Liquifiable,
],
molar_mass: crate::units::GramPerMole(46.070),
hardness: 250.000,
shc: crate::units::DtuPerGramPerDegree(2.460),
strength: Some(1.000),
radiation_absorption_factor: crate::units::Percent(0.700),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(20.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(100.000),
min_horizontal_flow: None,
}));
pub static Aluminum:Entity = Entity::new(
crate::lang::Game::Aluminum,
"Aluminum",
4.000,
Params::ElementSolid(ElementSolid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::BuildableAny,
Tag::Solid,
Tag::RefinedMetal,
],
molar_mass: crate::units::GramPerMole(55.845),
hardness: 25.000,
shc: crate::units::DtuPerGramPerDegree(0.910),
strength: Some(1.000),
radiation_absorption_factor: crate::units::Percent(0.770),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(205.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
default_mass: crate::units::Kg(200.000),
min_horizontal_flow: None,
}));
pub struct ElementLiquid{
pub dlc: &'static [crate::dlc::Dlc],
pub tags: &'static [Tag],
pub molar_mass: crate::units::GramPerMole,
pub shc: crate::units::DtuPerGramPerDegree,
pub max_compression: f32,
pub viscosity: f32,
pub min_horizontal_flow: f32,
pub min_vertical_flow: f32,
pub radiation_absorption_factor: crate::units::Percent,
pub thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree,
pub decor: crate::units::Decor,
pub clearable: bool,
pub light_absorption: crate::units::Percent,
pub default_mass: crate::units::Kg,
}
pub static DirtyWater:Entity = Entity::new(
crate::lang::Game::DirtyWater,
"DirtyWater",
15.000,
Params::ElementLiquid(ElementLiquid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Mixture,
Tag::AnyWater,
Tag::Liquid,
],
molar_mass: crate::units::GramPerMole(20.000),
shc: crate::units::DtuPerGramPerDegree(4.179),
max_compression: 1.010,
viscosity: 125.000,
min_horizontal_flow: 0.010,
min_vertical_flow: 0.010,
radiation_absorption_factor: crate::units::Percent(0.800),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.580),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.700),
default_mass: crate::units::Kg(1000.000),
}));
pub static NuclearWaste:Entity = Entity::new(
crate::lang::Game::NuclearWaste,
"NuclearWaste",
15.000,
Params::ElementLiquid(ElementLiquid{
dlc: &[
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::EmitsLight,
Tag::Liquid,
],
molar_mass: crate::units::GramPerMole(196.967),
shc: crate::units::DtuPerGramPerDegree(7.440),
max_compression: 1.010,
viscosity: 100.000,
min_horizontal_flow: 25.000,
min_vertical_flow: 1.000,
radiation_absorption_factor: crate::units::Percent(0.300),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(6.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(1.000),
default_mass: crate::units::Kg(500.000),
}));
pub static LiquidOxygen:Entity = Entity::new(
crate::lang::Game::LiquidOxygen,
"LiquidOxygen",
15.000,
Params::ElementLiquid(ElementLiquid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Oxidizer,
Tag::Liquid,
],
molar_mass: crate::units::GramPerMole(15.999),
shc: crate::units::DtuPerGramPerDegree(1.010),
max_compression: 1.010,
viscosity: 200.000,
min_horizontal_flow: 0.010,
min_vertical_flow: 0.010,
radiation_absorption_factor: crate::units::Percent(0.820),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(2.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(1.000),
default_mass: crate::units::Kg(300.000),
}));
pub static ViscoGel:Entity = Entity::new(
crate::lang::Game::ViscoGel,
"ViscoGel",
15.000,
Params::ElementLiquid(ElementLiquid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Liquid,
],
molar_mass: crate::units::GramPerMole(10.000),
shc: crate::units::DtuPerGramPerDegree(1.550),
max_compression: 1.010,
viscosity: 1.000,
min_horizontal_flow: 10.000,
min_vertical_flow: 10.000,
radiation_absorption_factor: crate::units::Percent(0.600),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.450),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.100),
default_mass: crate::units::Kg(100.000),
}));
pub static MoltenAluminum:Entity = Entity::new(
crate::lang::Game::MoltenAluminum,
"MoltenAluminum",
5.000,
Params::ElementLiquid(ElementLiquid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Metal,
Tag::RefinedMetal,
Tag::EmitsLight,
Tag::Liquid,
],
molar_mass: crate::units::GramPerMole(55.845),
shc: crate::units::DtuPerGramPerDegree(0.910),
max_compression: 1.010,
viscosity: 100.000,
min_horizontal_flow: 30.000,
min_vertical_flow: 3.000,
radiation_absorption_factor: crate::units::Percent(0.770),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(20.500),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(1.000),
default_mass: crate::units::Kg(1000.000),
}));
pub static MoltenLead:Entity = Entity::new(
crate::lang::Game::MoltenLead,
"MoltenLead",
5.000,
Params::ElementLiquid(ElementLiquid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Metal,
Tag::RefinedMetal,
Tag::EmitsLight,
Tag::Liquid,
],
molar_mass: crate::units::GramPerMole(196.967),
shc: crate::units::DtuPerGramPerDegree(0.128),
max_compression: 1.010,
viscosity: 100.000,
min_horizontal_flow: 25.000,
min_vertical_flow: 1.000,
radiation_absorption_factor: crate::units::Percent(0.850),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(11.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(1.000),
default_mass: crate::units::Kg(3000.000),
}));
pub static LiquidCarbonDioxide:Entity = Entity::new(
crate::lang::Game::LiquidCarbonDioxide,
"LiquidCarbonDioxide",
15.000,
Params::ElementLiquid(ElementLiquid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Liquid,
],
molar_mass: crate::units::GramPerMole(44.010),
shc: crate::units::DtuPerGramPerDegree(0.846),
max_compression: 1.010,
viscosity: 125.000,
min_horizontal_flow: 0.010,
min_vertical_flow: 0.010,
radiation_absorption_factor: crate::units::Percent(0.800),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.460),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(1.000),
default_mass: crate::units::Kg(600.000),
}));
pub static CrudeOil:Entity = Entity::new(
crate::lang::Game::CrudeOil,
"CrudeOil",
15.000,
Params::ElementLiquid(ElementLiquid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Liquid,
],
molar_mass: crate::units::GramPerMole(500.000),
shc: crate::units::DtuPerGramPerDegree(1.690),
max_compression: 1.010,
viscosity: 50.000,
min_horizontal_flow: 0.100,
min_vertical_flow: 0.100,
radiation_absorption_factor: crate::units::Percent(0.800),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(2.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(1.000),
default_mass: crate::units::Kg(870.000),
}));
pub static MoltenGlass:Entity = Entity::new(
crate::lang::Game::MoltenGlass,
"MoltenGlass",
15.000,
Params::ElementLiquid(ElementLiquid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::EmitsLight,
Tag::Liquid,
],
molar_mass: crate::units::GramPerMole(50.000),
shc: crate::units::DtuPerGramPerDegree(0.200),
max_compression: 1.010,
viscosity: 60.000,
min_horizontal_flow: 50.000,
min_vertical_flow: 20.000,
radiation_absorption_factor: crate::units::Percent(0.650),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.700),
default_mass: crate::units::Kg(200.000),
}));
pub static LiquidSulfur:Entity = Entity::new(
crate::lang::Game::LiquidSulfur,
"LiquidSulfur",
15.000,
Params::ElementLiquid(ElementLiquid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Liquid,
],
molar_mass: crate::units::GramPerMole(32.000),
shc: crate::units::DtuPerGramPerDegree(0.700),
max_compression: 1.010,
viscosity: 50.000,
min_horizontal_flow: 0.100,
min_vertical_flow: 0.100,
radiation_absorption_factor: crate::units::Percent(0.740),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.200),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.100),
default_mass: crate::units::Kg(190.000),
}));
pub static MoltenGold:Entity = Entity::new(
crate::lang::Game::MoltenGold,
"MoltenGold",
5.000,
Params::ElementLiquid(ElementLiquid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Metal,
Tag::RefinedMetal,
Tag::EmitsLight,
Tag::Liquid,
],
molar_mass: crate::units::GramPerMole(196.967),
shc: crate::units::DtuPerGramPerDegree(0.129),
max_compression: 1.010,
viscosity: 100.000,
min_horizontal_flow: 25.000,
min_vertical_flow: 1.000,
radiation_absorption_factor: crate::units::Percent(0.350),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(6.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(1.000),
default_mass: crate::units::Kg(870.000),
}));
pub static Magma:Entity = Entity::new(
crate::lang::Game::Magma,
"Magma",
15.000,
Params::ElementLiquid(ElementLiquid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::EmitsLight,
Tag::Liquid,
],
molar_mass: crate::units::GramPerMole(50.000),
shc: crate::units::DtuPerGramPerDegree(1.000),
max_compression: 1.010,
viscosity: 60.000,
min_horizontal_flow: 50.000,
min_vertical_flow: 20.000,
radiation_absorption_factor: crate::units::Percent(0.800),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(1.000),
default_mass: crate::units::Kg(1840.000),
}));
pub static Chlorine:Entity = Entity::new(
crate::lang::Game::Chlorine,
"Chlorine",
15.000,
Params::ElementLiquid(ElementLiquid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Liquid,
],
molar_mass: crate::units::GramPerMole(34.453),
shc: crate::units::DtuPerGramPerDegree(0.480),
max_compression: 1.010,
viscosity: 180.000,
min_horizontal_flow: 0.010,
min_vertical_flow: 0.010,
radiation_absorption_factor: crate::units::Percent(0.730),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.008),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(1.000),
default_mass: crate::units::Kg(600.000),
}));
pub static LiquidHydrogen:Entity = Entity::new(
crate::lang::Game::LiquidHydrogen,
"LiquidHydrogen",
15.000,
Params::ElementLiquid(ElementLiquid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Liquid,
],
molar_mass: crate::units::GramPerMole(1.008),
shc: crate::units::DtuPerGramPerDegree(2.400),
max_compression: 1.010,
viscosity: 180.000,
min_horizontal_flow: 0.010,
min_vertical_flow: 0.010,
radiation_absorption_factor: crate::units::Percent(0.900),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.100),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(1.000),
default_mass: crate::units::Kg(600.000),
}));
pub static Resin:Entity = Entity::new(
crate::lang::Game::Resin,
"Resin",
15.000,
Params::ElementLiquid(ElementLiquid{
dlc: &[
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Liquid,
],
molar_mass: crate::units::GramPerMole(52.500),
shc: crate::units::DtuPerGramPerDegree(1.110),
max_compression: 1.010,
viscosity: 1.100,
min_horizontal_flow: 1.100,
min_vertical_flow: 0.010,
radiation_absorption_factor: crate::units::Percent(0.750),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.150),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.800),
default_mass: crate::units::Kg(920.000),
}));
pub static MoltenTungsten:Entity = Entity::new(
crate::lang::Game::MoltenTungsten,
"MoltenTungsten",
5.000,
Params::ElementLiquid(ElementLiquid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Metal,
Tag::RefinedMetal,
Tag::Liquid,
],
molar_mass: crate::units::GramPerMole(183.840),
shc: crate::units::DtuPerGramPerDegree(0.134),
max_compression: 1.010,
viscosity: 100.000,
min_horizontal_flow: 20.000,
min_vertical_flow: 10.000,
radiation_absorption_factor: crate::units::Percent(0.350),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(4.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.700),
default_mass: crate::units::Kg(200.000),
}));
pub static Petroleum:Entity = Entity::new(
crate::lang::Game::Petroleum,
"Petroleum",
15.000,
Params::ElementLiquid(ElementLiquid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::CombustibleLiquid,
Tag::Liquid,
],
molar_mass: crate::units::GramPerMole(82.200),
shc: crate::units::DtuPerGramPerDegree(1.760),
max_compression: 1.010,
viscosity: 50.000,
min_horizontal_flow: 0.100,
min_vertical_flow: 0.100,
radiation_absorption_factor: crate::units::Percent(0.800),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(2.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.800),
default_mass: crate::units::Kg(740.000),
}));
pub static MoltenSalt:Entity = Entity::new(
crate::lang::Game::MoltenSalt,
"MoltenSalt",
15.000,
Params::ElementLiquid(ElementLiquid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Liquid,
],
molar_mass: crate::units::GramPerMole(32.000),
shc: crate::units::DtuPerGramPerDegree(0.700),
max_compression: 1.010,
viscosity: 50.000,
min_horizontal_flow: 0.100,
min_vertical_flow: 0.100,
radiation_absorption_factor: crate::units::Percent(0.750),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.444),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.100),
default_mass: crate::units::Kg(190.000),
}));
pub static MoltenCobalt:Entity = Entity::new(
crate::lang::Game::MoltenCobalt,
"MoltenCobalt",
5.000,
Params::ElementLiquid(ElementLiquid{
dlc: &[
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Metal,
Tag::RefinedMetal,
Tag::EmitsLight,
Tag::Liquid,
],
molar_mass: crate::units::GramPerMole(58.900),
shc: crate::units::DtuPerGramPerDegree(0.420),
max_compression: 1.010,
viscosity: 100.000,
min_horizontal_flow: 30.000,
min_vertical_flow: 3.000,
radiation_absorption_factor: crate::units::Percent(0.630),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(4.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(1.000),
default_mass: crate::units::Kg(1000.000),
}));
pub static Brine:Entity = Entity::new(
crate::lang::Game::Brine,
"Brine",
15.000,
Params::ElementLiquid(ElementLiquid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::AnyWater,
Tag::Liquid,
],
molar_mass: crate::units::GramPerMole(22.000),
shc: crate::units::DtuPerGramPerDegree(3.400),
max_compression: 1.010,
viscosity: 100.000,
min_horizontal_flow: 0.010,
min_vertical_flow: 0.010,
radiation_absorption_factor: crate::units::Percent(0.800),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.609),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.250),
default_mass: crate::units::Kg(1200.000),
}));
pub static SuperCoolant:Entity = Entity::new(
crate::lang::Game::SuperCoolant,
"SuperCoolant",
15.000,
Params::ElementLiquid(ElementLiquid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Liquid,
],
molar_mass: crate::units::GramPerMole(250.000),
shc: crate::units::DtuPerGramPerDegree(8.440),
max_compression: 1.010,
viscosity: 150.000,
min_horizontal_flow: 0.010,
min_vertical_flow: 0.010,
radiation_absorption_factor: crate::units::Percent(0.600),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(9.460),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.900),
default_mass: crate::units::Kg(800.000),
}));
pub static Ethanol:Entity = Entity::new(
crate::lang::Game::Ethanol,
"Ethanol",
15.000,
Params::ElementLiquid(ElementLiquid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::CombustibleLiquid,
Tag::Liquid,
],
molar_mass: crate::units::GramPerMole(46.070),
shc: crate::units::DtuPerGramPerDegree(2.460),
max_compression: 1.010,
viscosity: 125.000,
min_horizontal_flow: 0.010,
min_vertical_flow: 0.010,
radiation_absorption_factor: crate::units::Percent(0.700),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.171),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.250),
default_mass: crate::units::Kg(1000.000),
}));
pub static Milk:Entity = Entity::new(
crate::lang::Game::Milk,
"Milk",
15.000,
Params::ElementLiquid(ElementLiquid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Liquid,
],
molar_mass: crate::units::GramPerMole(23.000),
shc: crate::units::DtuPerGramPerDegree(4.100),
max_compression: 1.010,
viscosity: 100.000,
min_horizontal_flow: 0.010,
min_vertical_flow: 0.010,
radiation_absorption_factor: crate::units::Percent(0.800),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.609),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.800),
default_mass: crate::units::Kg(1100.000),
}));
pub static LiquidMethane:Entity = Entity::new(
crate::lang::Game::LiquidMethane,
"LiquidMethane",
15.000,
Params::ElementLiquid(ElementLiquid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Liquid,
],
molar_mass: crate::units::GramPerMole(16.044),
shc: crate::units::DtuPerGramPerDegree(2.191),
max_compression: 1.010,
viscosity: 180.000,
min_horizontal_flow: 0.010,
min_vertical_flow: 0.010,
radiation_absorption_factor: crate::units::Percent(0.750),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.030),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.600),
default_mass: crate::units::Kg(600.000),
}));
pub static MoltenIron:Entity = Entity::new(
crate::lang::Game::MoltenIron,
"MoltenIron",
5.000,
Params::ElementLiquid(ElementLiquid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Metal,
Tag::RefinedMetal,
Tag::EmitsLight,
Tag::Liquid,
],
molar_mass: crate::units::GramPerMole(55.845),
shc: crate::units::DtuPerGramPerDegree(0.449),
max_compression: 1.010,
viscosity: 100.000,
min_horizontal_flow: 30.000,
min_vertical_flow: 3.000,
radiation_absorption_factor: crate::units::Percent(0.660),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(4.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(1.000),
default_mass: crate::units::Kg(1000.000),
}));
pub static MoltenCarbon:Entity = Entity::new(
crate::lang::Game::MoltenCarbon,
"MoltenCarbon",
15.000,
Params::ElementLiquid(ElementLiquid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Liquid,
],
molar_mass: crate::units::GramPerMole(12.011),
shc: crate::units::DtuPerGramPerDegree(0.710),
max_compression: 1.010,
viscosity: 150.000,
min_horizontal_flow: 0.010,
min_vertical_flow: 0.010,
radiation_absorption_factor: crate::units::Percent(0.840),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(2.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(1.000),
default_mass: crate::units::Kg(600.000),
}));
pub static Naphtha:Entity = Entity::new(
crate::lang::Game::Naphtha,
"Naphtha",
15.000,
Params::ElementLiquid(ElementLiquid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Oil,
Tag::Liquid,
],
molar_mass: crate::units::GramPerMole(102.200),
shc: crate::units::DtuPerGramPerDegree(2.191),
max_compression: 1.010,
viscosity: 30.000,
min_horizontal_flow: 10.000,
min_vertical_flow: 10.000,
radiation_absorption_factor: crate::units::Percent(0.600),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.200),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.800),
default_mass: crate::units::Kg(740.000),
}));
pub static MoltenSucrose:Entity = Entity::new(
crate::lang::Game::MoltenSucrose,
"MoltenSucrose",
15.000,
Params::ElementLiquid(ElementLiquid{
dlc: &[
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Liquid,
],
molar_mass: crate::units::GramPerMole(32.000),
shc: crate::units::DtuPerGramPerDegree(1.255),
max_compression: 1.010,
viscosity: 50.000,
min_horizontal_flow: 0.100,
min_vertical_flow: 0.100,
radiation_absorption_factor: crate::units::Percent(0.700),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.150),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.100),
default_mass: crate::units::Kg(190.000),
}));
pub static LiquidPhosphorus:Entity = Entity::new(
crate::lang::Game::LiquidPhosphorus,
"LiquidPhosphorus",
15.000,
Params::ElementLiquid(ElementLiquid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::EmitsLight,
Tag::Liquid,
],
molar_mass: crate::units::GramPerMole(30.974),
shc: crate::units::DtuPerGramPerDegree(0.770),
max_compression: 1.010,
viscosity: 100.000,
min_horizontal_flow: 2.000,
min_vertical_flow: 1.000,
radiation_absorption_factor: crate::units::Percent(0.750),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.236),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(1.000),
default_mass: crate::units::Kg(200.000),
}));
pub static MoltenSteel:Entity = Entity::new(
crate::lang::Game::MoltenSteel,
"MoltenSteel",
5.000,
Params::ElementLiquid(ElementLiquid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Metal,
Tag::RefinedMetal,
Tag::EmitsLight,
Tag::Liquid,
],
molar_mass: crate::units::GramPerMole(63.546),
shc: crate::units::DtuPerGramPerDegree(0.386),
max_compression: 1.010,
viscosity: 100.000,
min_horizontal_flow: 20.000,
min_vertical_flow: 10.000,
radiation_absorption_factor: crate::units::Percent(0.740),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(80.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(1.000),
default_mass: crate::units::Kg(900.000),
}));
pub static MoltenNiobium:Entity = Entity::new(
crate::lang::Game::MoltenNiobium,
"MoltenNiobium",
5.000,
Params::ElementLiquid(ElementLiquid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Metal,
Tag::RefinedMetal,
Tag::EmitsLight,
Tag::Liquid,
],
molar_mass: crate::units::GramPerMole(92.900),
shc: crate::units::DtuPerGramPerDegree(0.265),
max_compression: 1.010,
viscosity: 100.000,
min_horizontal_flow: 20.000,
min_vertical_flow: 10.000,
radiation_absorption_factor: crate::units::Percent(0.490),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(54.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(1.000),
default_mass: crate::units::Kg(900.000),
}));
pub static Water:Entity = Entity::new(
crate::lang::Game::Water,
"Water",
15.000,
Params::ElementLiquid(ElementLiquid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::AnyWater,
Tag::Liquid,
],
molar_mass: crate::units::GramPerMole(18.015),
shc: crate::units::DtuPerGramPerDegree(4.179),
max_compression: 1.010,
viscosity: 125.000,
min_horizontal_flow: 0.010,
min_vertical_flow: 0.010,
radiation_absorption_factor: crate::units::Percent(0.800),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.609),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.250),
default_mass: crate::units::Kg(1000.000),
}));
pub static SaltWater:Entity = Entity::new(
crate::lang::Game::SaltWater,
"SaltWater",
15.000,
Params::ElementLiquid(ElementLiquid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::AnyWater,
Tag::Liquid,
],
molar_mass: crate::units::GramPerMole(21.000),
shc: crate::units::DtuPerGramPerDegree(4.100),
max_compression: 1.010,
viscosity: 100.000,
min_horizontal_flow: 0.010,
min_vertical_flow: 0.010,
radiation_absorption_factor: crate::units::Percent(0.800),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.609),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.250),
default_mass: crate::units::Kg(1100.000),
}));
pub static MoltenUranium:Entity = Entity::new(
crate::lang::Game::MoltenUranium,
"MoltenUranium",
5.000,
Params::ElementLiquid(ElementLiquid{
dlc: &[
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Metal,
Tag::RefinedMetal,
Tag::EmitsLight,
Tag::Liquid,
],
molar_mass: crate::units::GramPerMole(196.967),
shc: crate::units::DtuPerGramPerDegree(1.690),
max_compression: 1.010,
viscosity: 100.000,
min_horizontal_flow: 25.000,
min_vertical_flow: 1.000,
radiation_absorption_factor: crate::units::Percent(0.300),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(2.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(1.000),
default_mass: crate::units::Kg(3000.000),
}));
pub static MoltenCopper:Entity = Entity::new(
crate::lang::Game::MoltenCopper,
"MoltenCopper",
5.000,
Params::ElementLiquid(ElementLiquid{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Metal,
Tag::RefinedMetal,
Tag::EmitsLight,
Tag::Liquid,
],
molar_mass: crate::units::GramPerMole(63.546),
shc: crate::units::DtuPerGramPerDegree(0.386),
max_compression: 1.010,
viscosity: 100.000,
min_horizontal_flow: 20.000,
min_vertical_flow: 2.000,
radiation_absorption_factor: crate::units::Percent(0.610),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(12.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(1.000),
default_mass: crate::units::Kg(900.000),
}));
pub struct ElementGas{
pub dlc: &'static [crate::dlc::Dlc],
pub tags: &'static [Tag],
pub molar_mass: crate::units::GramPerMole,
pub shc: crate::units::DtuPerGramPerDegree,
pub flow: f32,
pub radiation_absorption_factor: crate::units::Percent,
pub thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree,
pub decor: crate::units::Decor,
pub clearable: bool,
pub light_absorption: crate::units::Percent,
pub default_mass: crate::units::Kg,
}
pub static SulfurGas:Entity = Entity::new(
crate::lang::Game::SulfurGas,
"SulfurGas",
15.000,
Params::ElementGas(ElementGas{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Gas,
Tag::Unbreathable,
],
molar_mass: crate::units::GramPerMole(32.000),
shc: crate::units::DtuPerGramPerDegree(0.700),
flow: 0.100,
radiation_absorption_factor: crate::units::Percent(0.070),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.200),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.100),
default_mass: crate::units::Kg(1.000),
}));
pub static SaltGas:Entity = Entity::new(
crate::lang::Game::SaltGas,
"SaltGas",
15.000,
Params::ElementGas(ElementGas{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Gas,
Tag::Unbreathable,
],
molar_mass: crate::units::GramPerMole(50.000),
shc: crate::units::DtuPerGramPerDegree(0.880),
flow: 0.100,
radiation_absorption_factor: crate::units::Percent(0.070),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.444),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.100),
default_mass: crate::units::Kg(1.000),
}));
pub static NiobiumGas:Entity = Entity::new(
crate::lang::Game::NiobiumGas,
"NiobiumGas",
5.000,
Params::ElementGas(ElementGas{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Metal,
Tag::RefinedMetal,
Tag::EmitsLight,
Tag::Gas,
Tag::Unbreathable,
],
molar_mass: crate::units::GramPerMole(92.900),
shc: crate::units::DtuPerGramPerDegree(0.265),
flow: 0.100,
radiation_absorption_factor: crate::units::Percent(0.050),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.500),
default_mass: crate::units::Kg(1.000),
}));
pub static Oxygen:Entity = Entity::new(
crate::lang::Game::Oxygen,
"Oxygen",
15.000,
Params::ElementGas(ElementGas{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Gas,
Tag::Breathable,
],
molar_mass: crate::units::GramPerMole(15.999),
shc: crate::units::DtuPerGramPerDegree(1.005),
flow: 0.120,
radiation_absorption_factor: crate::units::Percent(0.080),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.024),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.000),
default_mass: crate::units::Kg(1.000),
}));
pub static CobaltGas:Entity = Entity::new(
crate::lang::Game::CobaltGas,
"CobaltGas",
5.000,
Params::ElementGas(ElementGas{
dlc: &[
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Metal,
Tag::RefinedMetal,
Tag::EmitsLight,
Tag::Gas,
Tag::Unbreathable,
],
molar_mass: crate::units::GramPerMole(58.900),
shc: crate::units::DtuPerGramPerDegree(0.420),
flow: 0.100,
radiation_absorption_factor: crate::units::Percent(0.060),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.500),
default_mass: crate::units::Kg(1.000),
}));
pub static SteelGas:Entity = Entity::new(
crate::lang::Game::SteelGas,
"SteelGas",
5.000,
Params::ElementGas(ElementGas{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Metal,
Tag::Alloy,
Tag::RefinedMetal,
Tag::EmitsLight,
Tag::Gas,
Tag::Unbreathable,
],
molar_mass: crate::units::GramPerMole(54.970),
shc: crate::units::DtuPerGramPerDegree(0.490),
flow: 0.100,
radiation_absorption_factor: crate::units::Percent(0.070),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.500),
default_mass: crate::units::Kg(1.000),
}));
pub static ChlorineGas:Entity = Entity::new(
crate::lang::Game::ChlorineGas,
"ChlorineGas",
15.000,
Params::ElementGas(ElementGas{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Gas,
Tag::Unbreathable,
],
molar_mass: crate::units::GramPerMole(34.453),
shc: crate::units::DtuPerGramPerDegree(0.480),
flow: 0.100,
radiation_absorption_factor: crate::units::Percent(0.070),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.008),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.200),
default_mass: crate::units::Kg(1.000),
}));
pub static Hydrogen:Entity = Entity::new(
crate::lang::Game::Hydrogen,
"Hydrogen",
15.000,
Params::ElementGas(ElementGas{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Gas,
Tag::Unbreathable,
],
molar_mass: crate::units::GramPerMole(1.008),
shc: crate::units::DtuPerGramPerDegree(2.400),
flow: 0.100,
radiation_absorption_factor: crate::units::Percent(0.090),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.168),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.100),
default_mass: crate::units::Kg(1.000),
}));
pub static SourGas:Entity = Entity::new(
crate::lang::Game::SourGas,
"SourGas",
15.000,
Params::ElementGas(ElementGas{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Gas,
Tag::Unbreathable,
],
molar_mass: crate::units::GramPerMole(19.044),
shc: crate::units::DtuPerGramPerDegree(1.898),
flow: 0.100,
radiation_absorption_factor: crate::units::Percent(0.050),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.018),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.250),
default_mass: crate::units::Kg(1.000),
}));
pub static Steam:Entity = Entity::new(
crate::lang::Game::Steam,
"Steam",
15.000,
Params::ElementGas(ElementGas{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Gas,
Tag::Unbreathable,
],
molar_mass: crate::units::GramPerMole(18.015),
shc: crate::units::DtuPerGramPerDegree(4.179),
flow: 0.100,
radiation_absorption_factor: crate::units::Percent(0.080),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.184),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.100),
default_mass: crate::units::Kg(1.000),
}));
pub static Methane:Entity = Entity::new(
crate::lang::Game::Methane,
"Methane",
15.000,
Params::ElementGas(ElementGas{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::CombustibleGas,
Tag::Gas,
Tag::Unbreathable,
],
molar_mass: crate::units::GramPerMole(16.044),
shc: crate::units::DtuPerGramPerDegree(2.191),
flow: 0.100,
radiation_absorption_factor: crate::units::Percent(0.070),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.035),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.250),
default_mass: crate::units::Kg(1.000),
}));
pub static GoldGas:Entity = Entity::new(
crate::lang::Game::GoldGas,
"GoldGas",
5.000,
Params::ElementGas(ElementGas{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Metal,
Tag::RefinedMetal,
Tag::EmitsLight,
Tag::Gas,
Tag::Unbreathable,
],
molar_mass: crate::units::GramPerMole(196.967),
shc: crate::units::DtuPerGramPerDegree(0.129),
flow: 0.100,
radiation_absorption_factor: crate::units::Percent(0.030),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.500),
default_mass: crate::units::Kg(1.000),
}));
pub static EthanolGas:Entity = Entity::new(
crate::lang::Game::EthanolGas,
"EthanolGas",
15.000,
Params::ElementGas(ElementGas{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Gas,
Tag::Unbreathable,
],
molar_mass: crate::units::GramPerMole(46.070),
shc: crate::units::DtuPerGramPerDegree(2.148),
flow: 0.100,
radiation_absorption_factor: crate::units::Percent(0.070),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.167),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.500),
default_mass: crate::units::Kg(1.000),
}));
pub static RockGas:Entity = Entity::new(
crate::lang::Game::RockGas,
"RockGas",
15.000,
Params::ElementGas(ElementGas{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::EmitsLight,
Tag::Gas,
Tag::Unbreathable,
],
molar_mass: crate::units::GramPerMole(50.000),
shc: crate::units::DtuPerGramPerDegree(1.000),
flow: 0.100,
radiation_absorption_factor: crate::units::Percent(0.070),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.100),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.500),
default_mass: crate::units::Kg(1.000),
}));
pub static CarbonGas:Entity = Entity::new(
crate::lang::Game::CarbonGas,
"CarbonGas",
15.000,
Params::ElementGas(ElementGas{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::EmitsLight,
Tag::Gas,
Tag::Unbreathable,
],
molar_mass: crate::units::GramPerMole(12.011),
shc: crate::units::DtuPerGramPerDegree(0.710),
flow: 0.100,
radiation_absorption_factor: crate::units::Percent(0.080),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.700),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.300),
default_mass: crate::units::Kg(1.000),
}));
pub static SuperCoolantGas:Entity = Entity::new(
crate::lang::Game::SuperCoolantGas,
"SuperCoolantGas",
15.000,
Params::ElementGas(ElementGas{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Gas,
Tag::Unbreathable,
],
molar_mass: crate::units::GramPerMole(190.000),
shc: crate::units::DtuPerGramPerDegree(8.440),
flow: 0.100,
radiation_absorption_factor: crate::units::Percent(0.060),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.200),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.500),
default_mass: crate::units::Kg(1.000),
}));
pub static AluminumGas:Entity = Entity::new(
crate::lang::Game::AluminumGas,
"AluminumGas",
5.000,
Params::ElementGas(ElementGas{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Metal,
Tag::RefinedMetal,
Tag::EmitsLight,
Tag::Gas,
Tag::Unbreathable,
],
molar_mass: crate::units::GramPerMole(63.546),
shc: crate::units::DtuPerGramPerDegree(0.910),
flow: 0.100,
radiation_absorption_factor: crate::units::Percent(0.070),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(2.500),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.500),
default_mass: crate::units::Kg(1.000),
}));
pub static TungstenGas:Entity = Entity::new(
crate::lang::Game::TungstenGas,
"TungstenGas",
5.000,
Params::ElementGas(ElementGas{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Metal,
Tag::RefinedMetal,
Tag::Gas,
Tag::Unbreathable,
],
molar_mass: crate::units::GramPerMole(183.840),
shc: crate::units::DtuPerGramPerDegree(0.134),
flow: 0.100,
radiation_absorption_factor: crate::units::Percent(0.030),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.500),
default_mass: crate::units::Kg(1.000),
}));
pub static ContaminatedOxygen:Entity = Entity::new(
crate::lang::Game::ContaminatedOxygen,
"ContaminatedOxygen",
15.000,
Params::ElementGas(ElementGas{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Gas,
Tag::Breathable,
],
molar_mass: crate::units::GramPerMole(15.999),
shc: crate::units::DtuPerGramPerDegree(1.010),
flow: 0.120,
radiation_absorption_factor: crate::units::Percent(0.080),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.024),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.100),
default_mass: crate::units::Kg(1.000),
}));
pub static LeadGas:Entity = Entity::new(
crate::lang::Game::LeadGas,
"LeadGas",
5.000,
Params::ElementGas(ElementGas{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Metal,
Tag::RefinedMetal,
Tag::EmitsLight,
Tag::Gas,
Tag::Unbreathable,
],
molar_mass: crate::units::GramPerMole(196.967),
shc: crate::units::DtuPerGramPerDegree(0.128),
flow: 0.100,
radiation_absorption_factor: crate::units::Percent(0.080),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(3.500),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.500),
default_mass: crate::units::Kg(1.000),
}));
pub static Fallout:Entity = Entity::new(
crate::lang::Game::Fallout,
"Fallout",
15.000,
Params::ElementGas(ElementGas{
dlc: &[
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::EmitsLight,
Tag::Gas,
Tag::Unbreathable,
],
molar_mass: crate::units::GramPerMole(92.900),
shc: crate::units::DtuPerGramPerDegree(0.265),
flow: 0.100,
radiation_absorption_factor: crate::units::Percent(0.030),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.500),
default_mass: crate::units::Kg(1.000),
}));
pub static IronGas:Entity = Entity::new(
crate::lang::Game::IronGas,
"IronGas",
5.000,
Params::ElementGas(ElementGas{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Metal,
Tag::RefinedMetal,
Tag::EmitsLight,
Tag::Gas,
Tag::Unbreathable,
],
molar_mass: crate::units::GramPerMole(55.845),
shc: crate::units::DtuPerGramPerDegree(0.449),
flow: 0.100,
radiation_absorption_factor: crate::units::Percent(0.060),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.500),
default_mass: crate::units::Kg(1.000),
}));
pub static PhosphorusGas:Entity = Entity::new(
crate::lang::Game::PhosphorusGas,
"PhosphorusGas",
15.000,
Params::ElementGas(ElementGas{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::EmitsLight,
Tag::Gas,
Tag::Unbreathable,
],
molar_mass: crate::units::GramPerMole(30.974),
shc: crate::units::DtuPerGramPerDegree(0.770),
flow: 0.100,
radiation_absorption_factor: crate::units::Percent(0.070),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.236),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.500),
default_mass: crate::units::Kg(1.000),
}));
pub static CarbonDioxide:Entity = Entity::new(
crate::lang::Game::CarbonDioxide,
"CarbonDioxide",
15.000,
Params::ElementGas(ElementGas{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::PedestalDisplayable,
Tag::Gas,
Tag::Unbreathable,
],
molar_mass: crate::units::GramPerMole(44.010),
shc: crate::units::DtuPerGramPerDegree(0.846),
flow: 0.100,
radiation_absorption_factor: crate::units::Percent(0.080),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(0.015),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.100),
default_mass: crate::units::Kg(1.000),
}));
pub static CopperGas:Entity = Entity::new(
crate::lang::Game::CopperGas,
"CopperGas",
5.000,
Params::ElementGas(ElementGas{
dlc: &[
crate::dlc::Dlc::Vanilla,
crate::dlc::Dlc::SpaceOut,
],
tags: &[
Tag::Metal,
Tag::RefinedMetal,
Tag::EmitsLight,
Tag::Gas,
Tag::Unbreathable,
],
molar_mass: crate::units::GramPerMole(63.546),
shc: crate::units::DtuPerGramPerDegree(0.386),
flow: 0.100,
radiation_absorption_factor: crate::units::Percent(0.060),
thermal_conductivity: crate::units::DtuPerMetreSecondPerDegree(1.000),
decor: crate::units::Decor {value: -10, radius: 1},
clearable: true,
light_absorption: crate::units::Percent(0.500),
default_mass: crate::units::Kg(1.000),
}));
pub struct ElementOther{
pub tags: &'static [Tag],
}
pub static HighEnergyParticle:Entity = Entity::new(
crate::lang::Game::HighEnergyParticle,
"HighEnergyParticle",
177013.000,
Params::ElementOther(ElementOther{
tags: &[
],
}));
pub struct SpaceComet{
pub tags: &'static [Tag],
pub mass: crate::units::Kg,
pub primary_element: &'static Entity,
}
pub static RockComet:Entity = Entity::new(
crate::lang::Game::RockComet,
"RockComet",
177013.000,
Params::SpaceComet(SpaceComet{
tags: &[
Tag::Unstable,
Tag::Solid,
Tag::Filter,
Tag::Comet,
],
mass: crate::units::Kg(1.000),
primary_element: &Regolith,
}));
pub static IronComet:Entity = Entity::new(
crate::lang::Game::IronComet,
"IronComet",
177013.000,
Params::SpaceComet(SpaceComet{
tags: &[
Tag::BuildableAny,
Tag::Solid,
Tag::RefinedMetal,
Tag::Comet,
],
mass: crate::units::Kg(1.000),
primary_element: &Iron,
}));
pub static CopperCometConfig:Entity = Entity::new(
crate::lang::Game::CopperCometConfig,
"CopperCometConfig",
177013.000,
Params::SpaceComet(SpaceComet{
tags: &[
Tag::Ore,
Tag::BuildableAny,
Tag::Solid,
Tag::Metal,
Tag::Comet,
],
mass: crate::units::Kg(1.000),
primary_element: &Cuprite,
}));
pub static GoldComet:Entity = Entity::new(
crate::lang::Game::GoldComet,
"GoldComet",
177013.000,
Params::SpaceComet(SpaceComet{
tags: &[
Tag::Ore,
Tag::BuildableAny,
Tag::Solid,
Tag::Metal,
Tag::Comet,
],
mass: crate::units::Kg(1.000),
primary_element: &GoldAmalgam,
}));
pub static FullereneComet:Entity = Entity::new(
crate::lang::Game::FullereneComet,
"FullereneComet",
177013.000,
Params::SpaceComet(SpaceComet{
tags: &[
Tag::Solid,
Tag::RareMaterials,
Tag::Comet,
],
mass: crate::units::Kg(1.000),
primary_element: &Fullerene,
}));
pub static BleachStoneComet:Entity = Entity::new(
crate::lang::Game::BleachStoneComet,
"BleachStoneComet",
177013.000,
Params::SpaceComet(SpaceComet{
tags: &[
Tag::FlyingCritterEdible,
Tag::Solid,
Tag::ConsumableOre,
Tag::Comet,
],
mass: crate::units::Kg(1.000),
primary_element: &BleachStone,
}));
pub static OxyliteComet:Entity = Entity::new(
crate::lang::Game::OxyliteComet,
"OxyliteComet",
177013.000,
Params::SpaceComet(SpaceComet{
tags: &[
Tag::FlyingCritterEdible,
Tag::Oxidizer,
Tag::Solid,
Tag::ConsumableOre,
Tag::Comet,
],
mass: crate::units::Kg(1.000),
primary_element: &OxyRock,
}));
pub static PhosphoricComet:Entity = Entity::new(
crate::lang::Game::PhosphoricComet,
"PhosphoricComet",
177013.000,
Params::SpaceComet(SpaceComet{
tags: &[
Tag::FlyingCritterEdible,
Tag::Solid,
Tag::Agriculture,
Tag::Comet,
],
mass: crate::units::Kg(1.000),
primary_element: &Phosphorite,
}));
pub static AlgaeComet:Entity = Entity::new(
crate::lang::Game::AlgaeComet,
"AlgaeComet",
177013.000,
Params::SpaceComet(SpaceComet{
tags: &[
Tag::Solid,
Tag::Organics,
Tag::Comet,
],
mass: crate::units::Kg(1.000),
primary_element: &Algae,
}));
pub static LightDustComet:Entity = Entity::new(
crate::lang::Game::LightDustComet,
"LightDustComet",
177013.000,
Params::SpaceComet(SpaceComet{
tags: &[
Tag::Unstable,
Tag::Solid,
Tag::Filter,
Tag::Comet,
],
mass: crate::units::Kg(1.000),
primary_element: &Regolith,
}));
pub static HardIceComet:Entity = Entity::new(
crate::lang::Game::HardIceComet,
"HardIceComet",
177013.000,
Params::SpaceComet(SpaceComet{
tags: &[
Tag::IceOre,
Tag::Unstable,
Tag::Solid,
Tag::Liquifiable,
Tag::Comet,
],
mass: crate::units::Kg(1.000),
primary_element: &CrushedIce,
}));
pub static SlimeComet:Entity = Entity::new(
crate::lang::Game::SlimeComet,
"SlimeComet",
177013.000,
Params::SpaceComet(SpaceComet{
tags: &[
Tag::FlyingCritterEdible,
Tag::Solid,
Tag::Organics,
Tag::Comet,
],
mass: crate::units::Kg(1.000),
primary_element: &SlimeMold,
}));
pub static UraniumComet:Entity = Entity::new(
crate::lang::Game::UraniumComet,
"UraniumComet",
177013.000,
Params::SpaceComet(SpaceComet{
tags: &[
Tag::BuildableAny,
Tag::Metal,
Tag::Noncrushable,
Tag::Solid,
Tag::Comet,
],
mass: crate::units::Kg(1.000),
primary_element: &UraniumOre,
}));
pub static GassyMoo:Entity = Entity::new(
crate::lang::Game::GassyMoo,
"GassyMoo",
177013.000,
Params::SpaceComet(SpaceComet{
tags: &[
Tag::Solid,
Tag::Comet,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub static NuclearWasteComet:Entity = Entity::new(
crate::lang::Game::NuclearWasteComet,
"NuclearWasteComet",
177013.000,
Params::SpaceComet(SpaceComet{
tags: &[
Tag::Solid,
Tag::Other,
Tag::Comet,
],
mass: crate::units::Kg(1.000),
primary_element: &Corium,
}));
pub static DustComet:Entity = Entity::new(
crate::lang::Game::DustComet,
"DustComet",
177013.000,
Params::SpaceComet(SpaceComet{
tags: &[
Tag::Unstable,
Tag::Solid,
Tag::Filter,
Tag::Comet,
],
mass: crate::units::Kg(1.000),
primary_element: &Regolith,
}));
pub static SnowballComet:Entity = Entity::new(
crate::lang::Game::SnowballComet,
"SnowballComet",
177013.000,
Params::SpaceComet(SpaceComet{
tags: &[
Tag::IceOre,
Tag::Unstable,
Tag::Solid,
Tag::Liquifiable,
Tag::Comet,
],
mass: crate::units::Kg(1.000),
primary_element: &Snow,
}));
pub struct SpaceArtifact{
pub tags: &'static [Tag],
}
pub static ArtifactSpacePOI_GravitasSpaceStation1:Entity = Entity::new(
crate::lang::Game::ArtifactSpacePOI_GravitasSpaceStation1,
"ArtifactSpacePOI_GravitasSpaceStation1",
177013.000,
Params::SpaceArtifact(SpaceArtifact{
tags: &[
],
}));
pub static ArtifactSpacePOI_GravitasSpaceStation2:Entity = Entity::new(
crate::lang::Game::ArtifactSpacePOI_GravitasSpaceStation2,
"ArtifactSpacePOI_GravitasSpaceStation2",
177013.000,
Params::SpaceArtifact(SpaceArtifact{
tags: &[
],
}));
pub static ArtifactSpacePOI_GravitasSpaceStation3:Entity = Entity::new(
crate::lang::Game::ArtifactSpacePOI_GravitasSpaceStation3,
"ArtifactSpacePOI_GravitasSpaceStation3",
177013.000,
Params::SpaceArtifact(SpaceArtifact{
tags: &[
],
}));
pub static ArtifactSpacePOI_GravitasSpaceStation4:Entity = Entity::new(
crate::lang::Game::ArtifactSpacePOI_GravitasSpaceStation4,
"ArtifactSpacePOI_GravitasSpaceStation4",
177013.000,
Params::SpaceArtifact(SpaceArtifact{
tags: &[
],
}));
pub static ArtifactSpacePOI_GravitasSpaceStation5:Entity = Entity::new(
crate::lang::Game::ArtifactSpacePOI_GravitasSpaceStation5,
"ArtifactSpacePOI_GravitasSpaceStation5",
177013.000,
Params::SpaceArtifact(SpaceArtifact{
tags: &[
],
}));
pub static ArtifactSpacePOI_GravitasSpaceStation6:Entity = Entity::new(
crate::lang::Game::ArtifactSpacePOI_GravitasSpaceStation6,
"ArtifactSpacePOI_GravitasSpaceStation6",
177013.000,
Params::SpaceArtifact(SpaceArtifact{
tags: &[
],
}));
pub static ArtifactSpacePOI_GravitasSpaceStation7:Entity = Entity::new(
crate::lang::Game::ArtifactSpacePOI_GravitasSpaceStation7,
"ArtifactSpacePOI_GravitasSpaceStation7",
177013.000,
Params::SpaceArtifact(SpaceArtifact{
tags: &[
],
}));
pub static ArtifactSpacePOI_GravitasSpaceStation8:Entity = Entity::new(
crate::lang::Game::ArtifactSpacePOI_GravitasSpaceStation8,
"ArtifactSpacePOI_GravitasSpaceStation8",
177013.000,
Params::SpaceArtifact(SpaceArtifact{
tags: &[
],
}));
pub static ArtifactSpacePOI_RussellsTeapot:Entity = Entity::new(
crate::lang::Game::ArtifactSpacePOI_RussellsTeapot,
"ArtifactSpacePOI_RussellsTeapot",
177013.000,
Params::SpaceArtifact(SpaceArtifact{
tags: &[
],
}));
pub struct SpaceHarvestable{
pub tags: &'static [Tag],
}
pub static HarvestableSpacePOI_MetallicAsteroidField:Entity = Entity::new(
crate::lang::Game::HarvestableSpacePOI_MetallicAsteroidField,
"HarvestableSpacePOI_MetallicAsteroidField",
177013.000,
Params::SpaceHarvestable(SpaceHarvestable{
tags: &[
],
}));
pub static HarvestableSpacePOI_SatelliteField:Entity = Entity::new(
crate::lang::Game::HarvestableSpacePOI_SatelliteField,
"HarvestableSpacePOI_SatelliteField",
177013.000,
Params::SpaceHarvestable(SpaceHarvestable{
tags: &[
],
}));
pub static HarvestableSpacePOI_RockyAsteroidField:Entity = Entity::new(
crate::lang::Game::HarvestableSpacePOI_RockyAsteroidField,
"HarvestableSpacePOI_RockyAsteroidField",
177013.000,
Params::SpaceHarvestable(SpaceHarvestable{
tags: &[
],
}));
pub static HarvestableSpacePOI_InterstellarIceField:Entity = Entity::new(
crate::lang::Game::HarvestableSpacePOI_InterstellarIceField,
"HarvestableSpacePOI_InterstellarIceField",
177013.000,
Params::SpaceHarvestable(SpaceHarvestable{
tags: &[
],
}));
pub static HarvestableSpacePOI_OrganicMassField:Entity = Entity::new(
crate::lang::Game::HarvestableSpacePOI_OrganicMassField,
"HarvestableSpacePOI_OrganicMassField",
177013.000,
Params::SpaceHarvestable(SpaceHarvestable{
tags: &[
],
}));
pub static HarvestableSpacePOI_IceAsteroidField:Entity = Entity::new(
crate::lang::Game::HarvestableSpacePOI_IceAsteroidField,
"HarvestableSpacePOI_IceAsteroidField",
177013.000,
Params::SpaceHarvestable(SpaceHarvestable{
tags: &[
],
}));
pub static HarvestableSpacePOI_GasGiantCloud:Entity = Entity::new(
crate::lang::Game::HarvestableSpacePOI_GasGiantCloud,
"HarvestableSpacePOI_GasGiantCloud",
177013.000,
Params::SpaceHarvestable(SpaceHarvestable{
tags: &[
],
}));
pub static HarvestableSpacePOI_ChlorineCloud:Entity = Entity::new(
crate::lang::Game::HarvestableSpacePOI_ChlorineCloud,
"HarvestableSpacePOI_ChlorineCloud",
177013.000,
Params::SpaceHarvestable(SpaceHarvestable{
tags: &[
],
}));
pub static HarvestableSpacePOI_GildedAsteroidField:Entity = Entity::new(
crate::lang::Game::HarvestableSpacePOI_GildedAsteroidField,
"HarvestableSpacePOI_GildedAsteroidField",
177013.000,
Params::SpaceHarvestable(SpaceHarvestable{
tags: &[
],
}));
pub static HarvestableSpacePOI_GlimmeringAsteroidField:Entity = Entity::new(
crate::lang::Game::HarvestableSpacePOI_GlimmeringAsteroidField,
"HarvestableSpacePOI_GlimmeringAsteroidField",
177013.000,
Params::SpaceHarvestable(SpaceHarvestable{
tags: &[
],
}));
pub static HarvestableSpacePOI_HeliumCloud:Entity = Entity::new(
crate::lang::Game::HarvestableSpacePOI_HeliumCloud,
"HarvestableSpacePOI_HeliumCloud",
177013.000,
Params::SpaceHarvestable(SpaceHarvestable{
tags: &[
],
}));
pub static HarvestableSpacePOI_OilyAsteroidField:Entity = Entity::new(
crate::lang::Game::HarvestableSpacePOI_OilyAsteroidField,
"HarvestableSpacePOI_OilyAsteroidField",
177013.000,
Params::SpaceHarvestable(SpaceHarvestable{
tags: &[
],
}));
pub static HarvestableSpacePOI_OxidizedAsteroidField:Entity = Entity::new(
crate::lang::Game::HarvestableSpacePOI_OxidizedAsteroidField,
"HarvestableSpacePOI_OxidizedAsteroidField",
177013.000,
Params::SpaceHarvestable(SpaceHarvestable{
tags: &[
],
}));
pub static HarvestableSpacePOI_SaltyAsteroidField:Entity = Entity::new(
crate::lang::Game::HarvestableSpacePOI_SaltyAsteroidField,
"HarvestableSpacePOI_SaltyAsteroidField",
177013.000,
Params::SpaceHarvestable(SpaceHarvestable{
tags: &[
],
}));
pub static HarvestableSpacePOI_FrozenOreField:Entity = Entity::new(
crate::lang::Game::HarvestableSpacePOI_FrozenOreField,
"HarvestableSpacePOI_FrozenOreField",
177013.000,
Params::SpaceHarvestable(SpaceHarvestable{
tags: &[
],
}));
pub static HarvestableSpacePOI_ForestyOreField:Entity = Entity::new(
crate::lang::Game::HarvestableSpacePOI_ForestyOreField,
"HarvestableSpacePOI_ForestyOreField",
177013.000,
Params::SpaceHarvestable(SpaceHarvestable{
tags: &[
],
}));
pub static HarvestableSpacePOI_SwampyOreField:Entity = Entity::new(
crate::lang::Game::HarvestableSpacePOI_SwampyOreField,
"HarvestableSpacePOI_SwampyOreField",
177013.000,
Params::SpaceHarvestable(SpaceHarvestable{
tags: &[
],
}));
pub static HarvestableSpacePOI_SandyOreField:Entity = Entity::new(
crate::lang::Game::HarvestableSpacePOI_SandyOreField,
"HarvestableSpacePOI_SandyOreField",
177013.000,
Params::SpaceHarvestable(SpaceHarvestable{
tags: &[
],
}));
pub static HarvestableSpacePOI_RadioactiveGasCloud:Entity = Entity::new(
crate::lang::Game::HarvestableSpacePOI_RadioactiveGasCloud,
"HarvestableSpacePOI_RadioactiveGasCloud",
177013.000,
Params::SpaceHarvestable(SpaceHarvestable{
tags: &[
],
}));
pub static HarvestableSpacePOI_RadioactiveAsteroidField:Entity = Entity::new(
crate::lang::Game::HarvestableSpacePOI_RadioactiveAsteroidField,
"HarvestableSpacePOI_RadioactiveAsteroidField",
177013.000,
Params::SpaceHarvestable(SpaceHarvestable{
tags: &[
],
}));
pub static HarvestableSpacePOI_OxygenRichAsteroidField:Entity = Entity::new(
crate::lang::Game::HarvestableSpacePOI_OxygenRichAsteroidField,
"HarvestableSpacePOI_OxygenRichAsteroidField",
177013.000,
Params::SpaceHarvestable(SpaceHarvestable{
tags: &[
],
}));
pub static HarvestableSpacePOI_InterstellarOcean:Entity = Entity::new(
crate::lang::Game::HarvestableSpacePOI_InterstellarOcean,
"HarvestableSpacePOI_InterstellarOcean",
177013.000,
Params::SpaceHarvestable(SpaceHarvestable{
tags: &[
],
}));
pub struct SpaceShower{
pub tags: &'static [Tag],
pub mass: crate::units::Kg,
pub primary_element: &'static Entity,
}
pub static ClusterMapMeteorShower_Biological:Entity = Entity::new(
crate::lang::Game::ClusterMapMeteorShower_Biological,
"ClusterMapMeteorShower_Biological",
177013.000,
Params::SpaceShower(SpaceShower{
tags: &[
],
mass: crate::units::Kg(25.000),
primary_element: &Unobtanium,
}));
pub static ClusterMapMeteorShower_Snow:Entity = Entity::new(
crate::lang::Game::ClusterMapMeteorShower_Snow,
"ClusterMapMeteorShower_Snow",
177013.000,
Params::SpaceShower(SpaceShower{
tags: &[
],
mass: crate::units::Kg(25.000),
primary_element: &Unobtanium,
}));
pub static ClusterMapMeteorShower_Ice:Entity = Entity::new(
crate::lang::Game::ClusterMapMeteorShower_Ice,
"ClusterMapMeteorShower_Ice",
177013.000,
Params::SpaceShower(SpaceShower{
tags: &[
],
mass: crate::units::Kg(25.000),
primary_element: &Unobtanium,
}));
pub static ClusterMapMeteorShower_Copper:Entity = Entity::new(
crate::lang::Game::ClusterMapMeteorShower_Copper,
"ClusterMapMeteorShower_Copper",
177013.000,
Params::SpaceShower(SpaceShower{
tags: &[
],
mass: crate::units::Kg(25.000),
primary_element: &Unobtanium,
}));
pub static ClusterMapMeteorShower_Iron:Entity = Entity::new(
crate::lang::Game::ClusterMapMeteorShower_Iron,
"ClusterMapMeteorShower_Iron",
177013.000,
Params::SpaceShower(SpaceShower{
tags: &[
],
mass: crate::units::Kg(25.000),
primary_element: &Unobtanium,
}));
pub static ClusterMapMeteorShower_Gold:Entity = Entity::new(
crate::lang::Game::ClusterMapMeteorShower_Gold,
"ClusterMapMeteorShower_Gold",
177013.000,
Params::SpaceShower(SpaceShower{
tags: &[
],
mass: crate::units::Kg(25.000),
primary_element: &Unobtanium,
}));
pub static ClusterMapMeteorShower_Uranium:Entity = Entity::new(
crate::lang::Game::ClusterMapMeteorShower_Uranium,
"ClusterMapMeteorShower_Uranium",
177013.000,
Params::SpaceShower(SpaceShower{
tags: &[
],
mass: crate::units::Kg(25.000),
primary_element: &Unobtanium,
}));
pub static ClusterMapMeteorShower_HeavyDust:Entity = Entity::new(
crate::lang::Game::ClusterMapMeteorShower_HeavyDust,
"ClusterMapMeteorShower_HeavyDust",
177013.000,
Params::SpaceShower(SpaceShower{
tags: &[
],
mass: crate::units::Kg(25.000),
primary_element: &Unobtanium,
}));
pub static ClusterMapMeteorShower_LightDust:Entity = Entity::new(
crate::lang::Game::ClusterMapMeteorShower_LightDust,
"ClusterMapMeteorShower_LightDust",
177013.000,
Params::SpaceShower(SpaceShower{
tags: &[
],
mass: crate::units::Kg(25.000),
primary_element: &Unobtanium,
}));
pub static ClusterMapMeteorShower_Moo:Entity = Entity::new(
crate::lang::Game::ClusterMapMeteorShower_Moo,
"ClusterMapMeteorShower_Moo",
177013.000,
Params::SpaceShower(SpaceShower{
tags: &[
],
mass: crate::units::Kg(25.000),
primary_element: &Unobtanium,
}));
pub static ClusterMapMeteorShower_Regolith:Entity = Entity::new(
crate::lang::Game::ClusterMapMeteorShower_Regolith,
"ClusterMapMeteorShower_Regolith",
177013.000,
Params::SpaceShower(SpaceShower{
tags: &[
],
mass: crate::units::Kg(25.000),
primary_element: &Unobtanium,
}));
pub static ClusterMapMeteorShower_Oxylite:Entity = Entity::new(
crate::lang::Game::ClusterMapMeteorShower_Oxylite,
"ClusterMapMeteorShower_Oxylite",
177013.000,
Params::SpaceShower(SpaceShower{
tags: &[
],
mass: crate::units::Kg(25.000),
primary_element: &Unobtanium,
}));
pub static ClusterMapMeteorShower_BleachStone:Entity = Entity::new(
crate::lang::Game::ClusterMapMeteorShower_BleachStone,
"ClusterMapMeteorShower_BleachStone",
177013.000,
Params::SpaceShower(SpaceShower{
tags: &[
],
mass: crate::units::Kg(25.000),
primary_element: &Unobtanium,
}));
pub struct ArtifactAny{
pub tags: &'static [Tag],
pub mass: crate::units::Kg,
pub decor: crate::units::Decor,
pub primary_element: &'static Entity,
}
pub static artifact_sandstone:Entity = Entity::new(
crate::lang::Game::artifact_sandstone,
"artifact_sandstone",
177013.000,
Params::ArtifactAny(ArtifactAny{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Artifact,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 10, radius: 1},
primary_element: &Creature,
}));
pub static artifact_officemug:Entity = Entity::new(
crate::lang::Game::artifact_officemug,
"artifact_officemug",
177013.000,
Params::ArtifactAny(ArtifactAny{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Artifact,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 10, radius: 1},
primary_element: &Creature,
}));
pub static artifact_modernart:Entity = Entity::new(
crate::lang::Game::artifact_modernart,
"artifact_modernart",
177013.000,
Params::ArtifactAny(ArtifactAny{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Artifact,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 20, radius: 3},
primary_element: &Creature,
}));
pub static artifact_shieldgenerator:Entity = Entity::new(
crate::lang::Game::artifact_shieldgenerator,
"artifact_shieldgenerator",
177013.000,
Params::ArtifactAny(ArtifactAny{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Artifact,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 30, radius: 5},
primary_element: &Creature,
}));
pub static artifact_grubstatue:Entity = Entity::new(
crate::lang::Game::artifact_grubstatue,
"artifact_grubstatue",
177013.000,
Params::ArtifactAny(ArtifactAny{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Artifact,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 30, radius: 5},
primary_element: &Creature,
}));
pub static artifact_eggrock:Entity = Entity::new(
crate::lang::Game::artifact_eggrock,
"artifact_eggrock",
177013.000,
Params::ArtifactAny(ArtifactAny{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Artifact,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 35, radius: 6},
primary_element: &Creature,
}));
pub static artifact_hatchfossil:Entity = Entity::new(
crate::lang::Game::artifact_hatchfossil,
"artifact_hatchfossil",
177013.000,
Params::ArtifactAny(ArtifactAny{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Artifact,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 35, radius: 6},
primary_element: &Creature,
}));
pub static artifact_rocktornado:Entity = Entity::new(
crate::lang::Game::artifact_rocktornado,
"artifact_rocktornado",
177013.000,
Params::ArtifactAny(ArtifactAny{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Artifact,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 35, radius: 6},
primary_element: &Creature,
}));
pub static artifact_magmalamp:Entity = Entity::new(
crate::lang::Game::artifact_magmalamp,
"artifact_magmalamp",
177013.000,
Params::ArtifactAny(ArtifactAny{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Artifact,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 35, radius: 6},
primary_element: &Creature,
}));
pub static artifact_rainboweggrock:Entity = Entity::new(
crate::lang::Game::artifact_rainboweggrock,
"artifact_rainboweggrock",
177013.000,
Params::ArtifactAny(ArtifactAny{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Artifact,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 50, radius: 7},
primary_element: &Creature,
}));
pub static artifact_plasmalamp:Entity = Entity::new(
crate::lang::Game::artifact_plasmalamp,
"artifact_plasmalamp",
177013.000,
Params::ArtifactAny(ArtifactAny{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Artifact,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 50, radius: 7},
primary_element: &Creature,
}));
pub static artifact_moodring:Entity = Entity::new(
crate::lang::Game::artifact_moodring,
"artifact_moodring",
177013.000,
Params::ArtifactAny(ArtifactAny{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Artifact,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 50, radius: 7},
primary_element: &Creature,
}));
pub static artifact_reactormodel:Entity = Entity::new(
crate::lang::Game::artifact_reactormodel,
"artifact_reactormodel",
177013.000,
Params::ArtifactAny(ArtifactAny{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Artifact,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 80, radius: 7},
primary_element: &Creature,
}));
pub struct ArtifactTerrestrial{
pub tags: &'static [Tag],
pub mass: crate::units::Kg,
pub decor: crate::units::Decor,
pub primary_element: &'static Entity,
}
pub static artifact_sink:Entity = Entity::new(
crate::lang::Game::artifact_sink,
"artifact_sink",
177013.000,
Params::ArtifactTerrestrial(ArtifactTerrestrial{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Artifact,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 10, radius: 1},
primary_element: &Creature,
}));
pub static artifact_rubikscube:Entity = Entity::new(
crate::lang::Game::artifact_rubikscube,
"artifact_rubikscube",
177013.000,
Params::ArtifactTerrestrial(ArtifactTerrestrial{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Artifact,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 10, radius: 1},
primary_element: &Creature,
}));
pub static artifact_okayxray:Entity = Entity::new(
crate::lang::Game::artifact_okayxray,
"artifact_okayxray",
177013.000,
Params::ArtifactTerrestrial(ArtifactTerrestrial{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Artifact,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 20, radius: 3},
primary_element: &Creature,
}));
pub static artifact_blender:Entity = Entity::new(
crate::lang::Game::artifact_blender,
"artifact_blender",
177013.000,
Params::ArtifactTerrestrial(ArtifactTerrestrial{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Artifact,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 20, radius: 3},
primary_element: &Creature,
}));
pub static artifact_vhs:Entity = Entity::new(
crate::lang::Game::artifact_vhs,
"artifact_vhs",
177013.000,
Params::ArtifactTerrestrial(ArtifactTerrestrial{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Artifact,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 20, radius: 3},
primary_element: &Creature,
}));
pub static artifact_honeyjar:Entity = Entity::new(
crate::lang::Game::artifact_honeyjar,
"artifact_honeyjar",
177013.000,
Params::ArtifactTerrestrial(ArtifactTerrestrial{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Artifact,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 20, radius: 3},
primary_element: &Creature,
}));
pub static artifact_brickphone:Entity = Entity::new(
crate::lang::Game::artifact_brickphone,
"artifact_brickphone",
177013.000,
Params::ArtifactTerrestrial(ArtifactTerrestrial{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Artifact,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 30, radius: 5},
primary_element: &Creature,
}));
pub static artifact_stethoscope:Entity = Entity::new(
crate::lang::Game::artifact_stethoscope,
"artifact_stethoscope",
177013.000,
Params::ArtifactTerrestrial(ArtifactTerrestrial{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Artifact,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 35, radius: 6},
primary_element: &Creature,
}));
pub static artifact_oracle:Entity = Entity::new(
crate::lang::Game::artifact_oracle,
"artifact_oracle",
177013.000,
Params::ArtifactTerrestrial(ArtifactTerrestrial{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Artifact,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 35, radius: 6},
primary_element: &Creature,
}));
pub static artifact_dnamodel:Entity = Entity::new(
crate::lang::Game::artifact_dnamodel,
"artifact_dnamodel",
177013.000,
Params::ArtifactTerrestrial(ArtifactTerrestrial{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Artifact,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 50, radius: 7},
primary_element: &Creature,
}));
pub struct ArtifactSpace{
pub tags: &'static [Tag],
pub mass: crate::units::Kg,
pub decor: crate::units::Decor,
pub primary_element: &'static Entity,
}
pub static artifact_obelisk:Entity = Entity::new(
crate::lang::Game::artifact_obelisk,
"artifact_obelisk",
177013.000,
Params::ArtifactSpace(ArtifactSpace{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Artifact,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 20, radius: 3},
primary_element: &Creature,
}));
pub static artifact_moldavite:Entity = Entity::new(
crate::lang::Game::artifact_moldavite,
"artifact_moldavite",
177013.000,
Params::ArtifactSpace(ArtifactSpace{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Artifact,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 20, radius: 3},
primary_element: &Creature,
}));
pub static artifact_saxophone:Entity = Entity::new(
crate::lang::Game::artifact_saxophone,
"artifact_saxophone",
177013.000,
Params::ArtifactSpace(ArtifactSpace{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Artifact,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 20, radius: 3},
primary_element: &Creature,
}));
pub static artifact_ameliaswatch:Entity = Entity::new(
crate::lang::Game::artifact_ameliaswatch,
"artifact_ameliaswatch",
177013.000,
Params::ArtifactSpace(ArtifactSpace{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Artifact,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 30, radius: 5},
primary_element: &Creature,
}));
pub static artifact_teapot:Entity = Entity::new(
crate::lang::Game::artifact_teapot,
"artifact_teapot",
177013.000,
Params::ArtifactSpace(ArtifactSpace{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Artifact,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 30, radius: 5},
primary_element: &Creature,
}));
pub static artifact_robotarm:Entity = Entity::new(
crate::lang::Game::artifact_robotarm,
"artifact_robotarm",
177013.000,
Params::ArtifactSpace(ArtifactSpace{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Artifact,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 30, radius: 5},
primary_element: &Creature,
}));
pub static artifact_bioluminescentrock:Entity = Entity::new(
crate::lang::Game::artifact_bioluminescentrock,
"artifact_bioluminescentrock",
177013.000,
Params::ArtifactSpace(ArtifactSpace{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Artifact,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 30, radius: 5},
primary_element: &Creature,
}));
pub static artifact_pacupercolator:Entity = Entity::new(
crate::lang::Game::artifact_pacupercolator,
"artifact_pacupercolator",
177013.000,
Params::ArtifactSpace(ArtifactSpace{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Artifact,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 35, radius: 6},
primary_element: &Creature,
}));
pub static artifact_solarsystem:Entity = Entity::new(
crate::lang::Game::artifact_solarsystem,
"artifact_solarsystem",
177013.000,
Params::ArtifactSpace(ArtifactSpace{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Artifact,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 80, radius: 7},
primary_element: &Creature,
}));
pub static artifact_moonmoonmoon:Entity = Entity::new(
crate::lang::Game::artifact_moonmoonmoon,
"artifact_moonmoonmoon",
177013.000,
Params::ArtifactSpace(ArtifactSpace{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Artifact,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 80, radius: 7},
primary_element: &Creature,
}));
pub struct ArtifactQuest{
pub tags: &'static [Tag],
pub mass: crate::units::Kg,
pub decor: crate::units::Decor,
pub primary_element: &'static Entity,
}
pub static keepsake_megabrain:Entity = Entity::new(
crate::lang::Game::keepsake_megabrain,
"keepsake_megabrain",
177013.000,
Params::ArtifactQuest(ArtifactQuest{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Keepsake,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 15, radius: 2},
primary_element: &Creature,
}));
pub static keepsake_crittermanipulator:Entity = Entity::new(
crate::lang::Game::keepsake_crittermanipulator,
"keepsake_crittermanipulator",
177013.000,
Params::ArtifactQuest(ArtifactQuest{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Keepsake,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 15, radius: 2},
primary_element: &Creature,
}));
pub static keepsake_lonelyminion:Entity = Entity::new(
crate::lang::Game::keepsake_lonelyminion,
"keepsake_lonelyminion",
177013.000,
Params::ArtifactQuest(ArtifactQuest{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Keepsake,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 15, radius: 2},
primary_element: &Creature,
}));
pub static keepsake_fossilhunt:Entity = Entity::new(
crate::lang::Game::keepsake_fossilhunt,
"keepsake_fossilhunt",
177013.000,
Params::ArtifactQuest(ArtifactQuest{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Keepsake,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 15, radius: 2},
primary_element: &Creature,
}));
pub static keepsake_morbrovermaker:Entity = Entity::new(
crate::lang::Game::keepsake_morbrovermaker,
"keepsake_morbrovermaker",
177013.000,
Params::ArtifactQuest(ArtifactQuest{
tags: &[
Tag::MiscPickupable,
Tag::PedestalDisplayable,
Tag::Keepsake,
],
mass: crate::units::Kg(25.000),
decor: crate::units::Decor {value: 15, radius: 2},
primary_element: &Creature,
}));
pub struct MiscMedicine{
pub tags: &'static [Tag],
pub mass: crate::units::Kg,
pub primary_element: &'static Entity,
}
pub static IntermediateCure:Entity = Entity::new(
crate::lang::Game::IntermediateCure,
"IntermediateCure",
177013.000,
Params::MiscMedicine(MiscMedicine{
tags: &[
Tag::MedicalSupplies,
Tag::DoctorStationMedicalSupplies,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub static IntermediateBooster:Entity = Entity::new(
crate::lang::Game::IntermediateBooster,
"IntermediateBooster",
177013.000,
Params::MiscMedicine(MiscMedicine{
tags: &[
Tag::Medicine,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub static BasicRadPill:Entity = Entity::new(
crate::lang::Game::BasicRadPill,
"BasicRadPill",
177013.000,
Params::MiscMedicine(MiscMedicine{
tags: &[
Tag::Medicine,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub static BasicCure:Entity = Entity::new(
crate::lang::Game::BasicCure,
"BasicCure",
177013.000,
Params::MiscMedicine(MiscMedicine{
tags: &[
Tag::Medicine,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub static BasicBooster:Entity = Entity::new(
crate::lang::Game::BasicBooster,
"BasicBooster",
177013.000,
Params::MiscMedicine(MiscMedicine{
tags: &[
Tag::Medicine,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub static Antihistamine:Entity = Entity::new(
crate::lang::Game::Antihistamine,
"Antihistamine",
177013.000,
Params::MiscMedicine(MiscMedicine{
tags: &[
Tag::Medicine,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub static AdvancedCure:Entity = Entity::new(
crate::lang::Game::AdvancedCure,
"AdvancedCure",
177013.000,
Params::MiscMedicine(MiscMedicine{
tags: &[
Tag::MedicalSupplies,
Tag::AdvancedDoctorStationMedicalSupplies,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub struct MiscIndustrial{
pub tags: &'static [Tag],
pub mass_per_unit: Option<crate::units::Kg>,
pub mass: crate::units::Kg,
pub primary_element: &'static Entity,
}
pub static WoodLog:Entity = Entity::new(
crate::lang::Game::WoodLog,
"WoodLog",
177013.000,
Params::MiscIndustrial(MiscIndustrial{
tags: &[
Tag::IndustrialIngredient,
Tag::Organics,
Tag::BuildingWood,
],
mass_per_unit: Some(crate::units::Kg(1.000)),
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub static SwampLilyFlower:Entity = Entity::new(
crate::lang::Game::SwampLilyFlower,
"SwampLilyFlower",
177013.000,
Params::MiscIndustrial(MiscIndustrial{
tags: &[
Tag::IndustrialIngredient,
],
mass_per_unit: None,
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub static ResearchDatabank:Entity = Entity::new(
crate::lang::Game::ResearchDatabank,
"ResearchDatabank",
177013.000,
Params::MiscIndustrial(MiscIndustrial{
tags: &[
Tag::IndustrialIngredient,
Tag::Experimental,
],
mass_per_unit: None,
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub static OrbitalResearchDatabank:Entity = Entity::new(
crate::lang::Game::OrbitalResearchDatabank,
"OrbitalResearchDatabank",
177013.000,
Params::MiscIndustrial(MiscIndustrial{
tags: &[
Tag::IndustrialIngredient,
Tag::Experimental,
],
mass_per_unit: None,
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub static CrabWoodShell:Entity = Entity::new(
crate::lang::Game::CrabWoodShell,
"CrabWoodShell",
177013.000,
Params::MiscIndustrial(MiscIndustrial{
tags: &[
Tag::IndustrialIngredient,
Tag::Organics,
Tag::MoltShell,
],
mass_per_unit: Some(crate::units::Kg(100.000)),
mass: crate::units::Kg(100.000),
primary_element: &Creature,
}));
pub static BabyCrabWoodShell:Entity = Entity::new(
crate::lang::Game::BabyCrabWoodShell,
"BabyCrabWoodShell",
177013.000,
Params::MiscIndustrial(MiscIndustrial{
tags: &[
Tag::IndustrialIngredient,
Tag::Organics,
Tag::MoltShell,
],
mass_per_unit: Some(crate::units::Kg(10.000)),
mass: crate::units::Kg(10.000),
primary_element: &Creature,
}));
pub static BabyCrabShell:Entity = Entity::new(
crate::lang::Game::BabyCrabShell,
"BabyCrabShell",
177013.000,
Params::MiscIndustrial(MiscIndustrial{
tags: &[
Tag::IndustrialIngredient,
Tag::Organics,
],
mass_per_unit: Some(crate::units::Kg(5.000)),
mass: crate::units::Kg(5.000),
primary_element: &Creature,
}));
pub static CrabShell:Entity = Entity::new(
crate::lang::Game::CrabShell,
"CrabShell",
177013.000,
Params::MiscIndustrial(MiscIndustrial{
tags: &[
Tag::IndustrialIngredient,
Tag::Organics,
],
mass_per_unit: Some(crate::units::Kg(10.000)),
mass: crate::units::Kg(10.000),
primary_element: &Creature,
}));
pub static MissileBasic:Entity = Entity::new(
crate::lang::Game::MissileBasic,
"MissileBasic",
177013.000,
Params::MiscIndustrial(MiscIndustrial{
tags: &[
Tag::IndustrialProduct,
],
mass_per_unit: None,
mass: crate::units::Kg(10.000),
primary_element: &Iron,
}));
pub static GeneShufflerRecharge:Entity = Entity::new(
crate::lang::Game::GeneShufflerRecharge,
"GeneShufflerRecharge",
177013.000,
Params::MiscIndustrial(MiscIndustrial{
tags: &[
Tag::IndustrialIngredient,
],
mass_per_unit: None,
mass: crate::units::Kg(5.000),
primary_element: &Creature,
}));
pub static BasicFabric:Entity = Entity::new(
crate::lang::Game::BasicFabric,
"BasicFabric",
177013.000,
Params::MiscIndustrial(MiscIndustrial{
tags: &[
Tag::IndustrialIngredient,
Tag::BuildingFiber,
],
mass_per_unit: None,
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub static GingerConfig:Entity = Entity::new(
crate::lang::Game::GingerConfig,
"GingerConfig",
177013.000,
Params::MiscIndustrial(MiscIndustrial{
tags: &[
Tag::IndustrialIngredient,
],
mass_per_unit: None,
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub struct MiscOther{
pub tags: &'static [Tag],
pub mass: crate::units::Kg,
pub primary_element: &'static Entity,
pub mass_per_unit: Option<crate::units::Kg>,
pub decor: Option<crate::units::Decor>,
}
pub static TableSalt:Entity = Entity::new(
crate::lang::Game::TableSalt,
"TableSalt",
177013.000,
Params::MiscOther(MiscOther{
tags: &[
Tag::Other,
],
mass: crate::units::Kg(1.000),
primary_element: &Salt,
mass_per_unit: None,
decor: None,
}));
pub static PowerStationTools:Entity = Entity::new(
crate::lang::Game::PowerStationTools,
"PowerStationTools",
177013.000,
Params::MiscOther(MiscOther{
tags: &[
Tag::MiscPickupable,
],
mass: crate::units::Kg(5.000),
primary_element: &Creature,
mass_per_unit: None,
decor: None,
}));
pub static FarmStationTools:Entity = Entity::new(
crate::lang::Game::FarmStationTools,
"FarmStationTools",
177013.000,
Params::MiscOther(MiscOther{
tags: &[
Tag::MiscPickupable,
],
mass: crate::units::Kg(5.000),
primary_element: &Creature,
mass_per_unit: None,
decor: None,
}));
pub static EggShell:Entity = Entity::new(
crate::lang::Game::EggShell,
"EggShell",
177013.000,
Params::MiscOther(MiscOther{
tags: &[
Tag::Organics,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
mass_per_unit: Some(crate::units::Kg(1.000)),
decor: None,
}));
pub static GasGrassHarvested:Entity = Entity::new(
crate::lang::Game::GasGrassHarvested,
"GasGrassHarvested",
177013.000,
Params::MiscOther(MiscOther{
tags: &[
Tag::Other,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
mass_per_unit: None,
decor: None,
}));
pub static RotPile:Entity = Entity::new(
crate::lang::Game::RotPile,
"RotPile",
177013.000,
Params::MiscOther(MiscOther{
tags: &[
Tag::Organics,
Tag::Compostable,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
mass_per_unit: None,
decor: Some(crate::units::Decor {value: -15, radius: 3}),
}));
pub struct MiscQuest{
pub tags: &'static [Tag],
pub mass: crate::units::Kg,
pub primary_element: &'static Entity,
}
pub static DreamJournal:Entity = Entity::new(
crate::lang::Game::DreamJournal,
"DreamJournal",
177013.000,
Params::MiscQuest(MiscQuest{
tags: &[
Tag::StoryTraitResource,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub struct MiscDupe{
pub tags: &'static [Tag],
pub hp: i32,
pub mass: crate::units::Kg,
pub primary_element: &'static Entity,
pub calories_max: f32,
pub calories_loss: f32,
pub carry_amount: f32,
}
pub static Minion:Entity = Entity::new(
crate::lang::Game::Minion,
"Minion",
177013.000,
Params::MiscDupe(MiscDupe{
tags: &[
Tag::DupeBrain,
Tag::CorrosionProof,
],
hp: 100,
mass: crate::units::Kg(30.000),
primary_element: &Creature,
calories_max: 4000000.000,
calories_loss: -1666.667,
carry_amount: 200.000,
}));
pub struct FoodCooked{
pub tags: &'static [Tag],
pub mass: crate::units::Kg,
pub primary_element: &'static Entity,
pub quality: f32,
pub calories: f32,
pub spoil_time: f32,
}
pub static WormBasicFruit:Entity = Entity::new(
crate::lang::Game::WormBasicFruit,
"WormBasicFruit",
0.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: 0.000,
calories: 800000.000,
spoil_time: 4800.000,
}));
pub static WormBasicFood:Entity = Entity::new(
crate::lang::Game::WormBasicFood,
"WormBasicFood",
1.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: 1.000,
calories: 1200000.000,
spoil_time: 4800.000,
}));
pub static Tofu:Entity = Entity::new(
crate::lang::Game::Tofu,
"Tofu",
2.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: 2.000,
calories: 3600000.000,
spoil_time: 2400.000,
}));
pub static SwampFruit:Entity = Entity::new(
crate::lang::Game::SwampFruit,
"SwampFruit",
0.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: 0.000,
calories: 1840000.000,
spoil_time: 2400.000,
}));
pub static SwampDelights:Entity = Entity::new(
crate::lang::Game::SwampDelights,
"SwampDelights",
1.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: 1.000,
calories: 2240000.000,
spoil_time: 4800.000,
}));
pub static WormSuperFood:Entity = Entity::new(
crate::lang::Game::WormSuperFood,
"WormSuperFood",
3.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: 3.000,
calories: 2400000.000,
spoil_time: 19200.000,
}));
pub static SpicyTofu:Entity = Entity::new(
crate::lang::Game::SpicyTofu,
"SpicyTofu",
5.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: 5.000,
calories: 4000000.000,
spoil_time: 2400.000,
}));
pub static SpiceBread:Entity = Entity::new(
crate::lang::Game::SpiceBread,
"SpiceBread",
5.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: 5.000,
calories: 4000000.000,
spoil_time: 4800.000,
}));
pub static ShellfishMeat:Entity = Entity::new(
crate::lang::Game::ShellfishMeat,
"ShellfishMeat",
2.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: 2.000,
calories: 1000000.000,
spoil_time: 2400.000,
}));
pub static SurfAndTurf:Entity = Entity::new(
crate::lang::Game::SurfAndTurf,
"SurfAndTurf",
4.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: 4.000,
calories: 6000000.000,
spoil_time: 2400.000,
}));
pub static WormSuperFruit:Entity = Entity::new(
crate::lang::Game::WormSuperFruit,
"WormSuperFruit",
1.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: 1.000,
calories: 250000.000,
spoil_time: 2400.000,
}));
pub static Salsa:Entity = Entity::new(
crate::lang::Game::Salsa,
"Salsa",
4.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: 4.000,
calories: 4400000.000,
spoil_time: 2400.000,
}));
pub static RawEgg:Entity = Entity::new(
crate::lang::Game::RawEgg,
"RawEgg",
-1.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: -1.000,
calories: 1600000.000,
spoil_time: 4800.000,
}));
pub static BasicForagePlant:Entity = Entity::new(
crate::lang::Game::BasicForagePlant,
"BasicForagePlant",
-1.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: -1.000,
calories: 800000.000,
spoil_time: 0.000,
}));
pub static ForestForagePlant:Entity = Entity::new(
crate::lang::Game::ForestForagePlant,
"ForestForagePlant",
-1.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: -1.000,
calories: 6400000.000,
spoil_time: 0.000,
}));
pub static ColdWheatBread:Entity = Entity::new(
crate::lang::Game::ColdWheatBread,
"ColdWheatBread",
2.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: 2.000,
calories: 1200000.000,
spoil_time: 4800.000,
}));
pub static CookedEgg:Entity = Entity::new(
crate::lang::Game::CookedEgg,
"CookedEgg",
2.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: 2.000,
calories: 2800000.000,
spoil_time: 2400.000,
}));
pub static CookedFish:Entity = Entity::new(
crate::lang::Game::CookedFish,
"CookedFish",
3.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: 3.000,
calories: 1600000.000,
spoil_time: 2400.000,
}));
pub static CookedMeat:Entity = Entity::new(
crate::lang::Game::CookedMeat,
"CookedMeat",
3.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: 3.000,
calories: 4000000.000,
spoil_time: 2400.000,
}));
pub static Curry:Entity = Entity::new(
crate::lang::Game::Curry,
"Curry",
4.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: 4.000,
calories: 5000000.000,
spoil_time: 9600.000,
}));
pub static FieldRation:Entity = Entity::new(
crate::lang::Game::FieldRation,
"FieldRation",
-1.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: -1.000,
calories: 800000.000,
spoil_time: 0.000,
}));
pub static FishMeat:Entity = Entity::new(
crate::lang::Game::FishMeat,
"FishMeat",
2.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: 2.000,
calories: 1000000.000,
spoil_time: 2400.000,
}));
pub static FriedMushBar:Entity = Entity::new(
crate::lang::Game::FriedMushBar,
"FriedMushBar",
0.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: 0.000,
calories: 1050000.000,
spoil_time: 4800.000,
}));
pub static FriedMushroom:Entity = Entity::new(
crate::lang::Game::FriedMushroom,
"FriedMushroom",
1.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: 1.000,
calories: 2800000.000,
spoil_time: 4800.000,
}));
pub static FruitCake:Entity = Entity::new(
crate::lang::Game::FruitCake,
"FruitCake",
3.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: 3.000,
calories: 4000000.000,
spoil_time: 0.000,
}));
pub static Burger:Entity = Entity::new(
crate::lang::Game::Burger,
"Burger",
6.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: 6.000,
calories: 6000000.000,
spoil_time: 2400.000,
}));
pub static Lettuce:Entity = Entity::new(
crate::lang::Game::Lettuce,
"Lettuce",
0.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: 0.000,
calories: 400000.000,
spoil_time: 2400.000,
}));
pub static Meat:Entity = Entity::new(
crate::lang::Game::Meat,
"Meat",
-1.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: -1.000,
calories: 1600000.000,
spoil_time: 4800.000,
}));
pub static MushBar:Entity = Entity::new(
crate::lang::Game::MushBar,
"MushBar",
-1.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: -1.000,
calories: 800000.000,
spoil_time: 4800.000,
}));
pub static Mushroom:Entity = Entity::new(
crate::lang::Game::Mushroom,
"Mushroom",
0.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: 0.000,
calories: 2400000.000,
spoil_time: 4800.000,
}));
pub static MushroomWrap:Entity = Entity::new(
crate::lang::Game::MushroomWrap,
"MushroomWrap",
4.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: 4.000,
calories: 4800000.000,
spoil_time: 2400.000,
}));
pub static PacuFillet:Entity = Entity::new(
crate::lang::Game::PacuFillet,
"PacuFillet",
2.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: 2.000,
calories: 1000000.000,
spoil_time: 2400.000,
}));
pub static Pancakes:Entity = Entity::new(
crate::lang::Game::Pancakes,
"Pancakes",
3.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: 3.000,
calories: 3600000.000,
spoil_time: 4800.000,
}));
pub static PickledMeal:Entity = Entity::new(
crate::lang::Game::PickledMeal,
"PickledMeal",
-1.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
Tag::Pickled,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: -1.000,
calories: 1800000.000,
spoil_time: 19200.000,
}));
pub static PlantMeat:Entity = Entity::new(
crate::lang::Game::PlantMeat,
"PlantMeat",
1.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: 1.000,
calories: 1200000.000,
spoil_time: 2400.000,
}));
pub static PrickleFruit:Entity = Entity::new(
crate::lang::Game::PrickleFruit,
"PrickleFruit",
0.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: 0.000,
calories: 1600000.000,
spoil_time: 4800.000,
}));
pub static Quiche:Entity = Entity::new(
crate::lang::Game::Quiche,
"Quiche",
5.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: 5.000,
calories: 6400000.000,
spoil_time: 2400.000,
}));
pub static GrilledPrickleFruit:Entity = Entity::new(
crate::lang::Game::GrilledPrickleFruit,
"GrilledPrickleFruit",
1.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: 1.000,
calories: 2000000.000,
spoil_time: 4800.000,
}));
pub static BerryPie:Entity = Entity::new(
crate::lang::Game::BerryPie,
"BerryPie",
5.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: 5.000,
calories: 4200000.000,
spoil_time: 2400.000,
}));
pub static SwampForagePlant:Entity = Entity::new(
crate::lang::Game::SwampForagePlant,
"SwampForagePlant",
-1.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: -1.000,
calories: 2400000.000,
spoil_time: 0.000,
}));
pub static BasicPlantFood:Entity = Entity::new(
crate::lang::Game::BasicPlantFood,
"BasicPlantFood",
-1.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: -1.000,
calories: 600000.000,
spoil_time: 4800.000,
}));
pub static BasicPlantBar:Entity = Entity::new(
crate::lang::Game::BasicPlantBar,
"BasicPlantBar",
0.000,
Params::FoodCooked(FoodCooked{
tags: &[
Tag::PedestalDisplayable,
Tag::Edible,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
quality: 0.000,
calories: 1700000.000,
spoil_time: 4800.000,
}));
pub struct FoodDehydrated{
pub tags: &'static [Tag],
pub mass: crate::units::Kg,
pub primary_element: &'static Entity,
}
pub static DehydratedSurfAndTurf:Entity = Entity::new(
crate::lang::Game::DehydratedSurfAndTurf,
"DehydratedSurfAndTurf",
177013.000,
Params::FoodDehydrated(FoodDehydrated{
tags: &[
Tag::Dehydrated,
Tag::PickupableStorage,
],
mass: crate::units::Kg(1.000),
primary_element: &Polypropylene,
}));
pub static DehydratedSpicyTofu:Entity = Entity::new(
crate::lang::Game::DehydratedSpicyTofu,
"DehydratedSpicyTofu",
177013.000,
Params::FoodDehydrated(FoodDehydrated{
tags: &[
Tag::Dehydrated,
Tag::PickupableStorage,
],
mass: crate::units::Kg(1.000),
primary_element: &Polypropylene,
}));
pub static DehydratedSpiceBread:Entity = Entity::new(
crate::lang::Game::DehydratedSpiceBread,
"DehydratedSpiceBread",
177013.000,
Params::FoodDehydrated(FoodDehydrated{
tags: &[
Tag::Dehydrated,
Tag::PickupableStorage,
],
mass: crate::units::Kg(1.000),
primary_element: &Polypropylene,
}));
pub static DehydratedSalsa:Entity = Entity::new(
crate::lang::Game::DehydratedSalsa,
"DehydratedSalsa",
177013.000,
Params::FoodDehydrated(FoodDehydrated{
tags: &[
Tag::Dehydrated,
Tag::PickupableStorage,
],
mass: crate::units::Kg(1.000),
primary_element: &Polypropylene,
}));
pub static DehydratedQuiche:Entity = Entity::new(
crate::lang::Game::DehydratedQuiche,
"DehydratedQuiche",
177013.000,
Params::FoodDehydrated(FoodDehydrated{
tags: &[
Tag::Dehydrated,
Tag::PickupableStorage,
],
mass: crate::units::Kg(1.000),
primary_element: &Polypropylene,
}));
pub static DehydratedFoodPackage:Entity = Entity::new(
crate::lang::Game::DehydratedFoodPackage,
"DehydratedFoodPackage",
177013.000,
Params::FoodDehydrated(FoodDehydrated{
tags: &[
Tag::Dehydrated,
Tag::PickupableStorage,
],
mass: crate::units::Kg(1.000),
primary_element: &Polypropylene,
}));
pub static DehydratedMushroomWrap:Entity = Entity::new(
crate::lang::Game::DehydratedMushroomWrap,
"DehydratedMushroomWrap",
177013.000,
Params::FoodDehydrated(FoodDehydrated{
tags: &[
Tag::Dehydrated,
Tag::PickupableStorage,
],
mass: crate::units::Kg(1.000),
primary_element: &Polypropylene,
}));
pub static DehydratedBerryPie:Entity = Entity::new(
crate::lang::Game::DehydratedBerryPie,
"DehydratedBerryPie",
177013.000,
Params::FoodDehydrated(FoodDehydrated{
tags: &[
Tag::Dehydrated,
Tag::PickupableStorage,
],
mass: crate::units::Kg(1.000),
primary_element: &Polypropylene,
}));
pub static DehydratedCurry:Entity = Entity::new(
crate::lang::Game::DehydratedCurry,
"DehydratedCurry",
177013.000,
Params::FoodDehydrated(FoodDehydrated{
tags: &[
Tag::Dehydrated,
Tag::PickupableStorage,
],
mass: crate::units::Kg(1.000),
primary_element: &Polypropylene,
}));
pub struct FoodIngredient{
pub tags: &'static [Tag],
pub mass: crate::units::Kg,
pub primary_element: &'static Entity,
}
pub static SpiceNut:Entity = Entity::new(
crate::lang::Game::SpiceNut,
"SpiceNut",
177013.000,
Params::FoodIngredient(FoodIngredient{
tags: &[
Tag::PedestalDisplayable,
Tag::CookingIngredient,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub struct CritterRobot{
pub tags: &'static [Tag],
pub battery: f32,
pub mass: crate::units::Kg,
pub primary_element: &'static Entity,
pub battery_loss: f32,
pub hp: Option<i32>,
pub carry_amount: Option<f32>,
pub deconstructable: Option<bool>,
}
pub static SweepBot:Entity = Entity::new(
crate::lang::Game::SweepBot,
"SweepBot",
-1.000,
Params::CritterRobot(CritterRobot{
tags: &[
Tag::Creature,
Tag::Robot,
Tag::Walker,
Tag::CreatureBrain,
],
battery: 9000.000,
mass: crate::units::Kg(25.000),
primary_element: &Creature,
battery_loss: -17.143,
hp: None,
carry_amount: None,
deconstructable: None,
}));
pub static ScoutRover:Entity = Entity::new(
crate::lang::Game::ScoutRover,
"ScoutRover",
-1.000,
Params::CritterRobot(CritterRobot{
tags: &[
Tag::Experimental,
Tag::DupeBrain,
Tag::Robot,
],
battery: 180000.000,
mass: crate::units::Kg(100.000),
primary_element: &Creature,
battery_loss: -30.000,
hp: Some(100),
carry_amount: Some(200.000),
deconstructable: Some(true),
}));
pub static MorbRover:Entity = Entity::new(
crate::lang::Game::MorbRover,
"MorbRover",
-1.000,
Params::CritterRobot(CritterRobot{
tags: &[
Tag::Experimental,
Tag::DupeBrain,
Tag::Robot,
],
battery: 180000.000,
mass: crate::units::Kg(300.000),
primary_element: &Steel,
battery_loss: -30.000,
hp: Some(100),
carry_amount: Some(400.000),
deconstructable: Some(true),
}));
pub struct CritterEgg{
pub tags: &'static [Tag],
pub mass: crate::units::Kg,
pub primary_element: &'static Entity,
}
pub static SquirrelEgg:Entity = Entity::new(
crate::lang::Game::SquirrelEgg,
"SquirrelEgg",
8.000,
Params::CritterEgg(CritterEgg{
tags: &[
Tag::Egg,
Tag::IncubatableEgg,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(2.000),
primary_element: &Creature,
}));
pub static SquirrelHugEgg:Entity = Entity::new(
crate::lang::Game::SquirrelHugEgg,
"SquirrelHugEgg",
8.000,
Params::CritterEgg(CritterEgg{
tags: &[
Tag::Egg,
Tag::IncubatableEgg,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(2.000),
primary_element: &Creature,
}));
pub static StaterpillarEgg:Entity = Entity::new(
crate::lang::Game::StaterpillarEgg,
"StaterpillarEgg",
10.000,
Params::CritterEgg(CritterEgg{
tags: &[
Tag::Egg,
Tag::IncubatableEgg,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(2.000),
primary_element: &Creature,
}));
pub static StaterpillarLiquidEgg:Entity = Entity::new(
crate::lang::Game::StaterpillarLiquidEgg,
"StaterpillarLiquidEgg",
10.000,
Params::CritterEgg(CritterEgg{
tags: &[
Tag::Egg,
Tag::IncubatableEgg,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(2.000),
primary_element: &Creature,
}));
pub static PuftEgg:Entity = Entity::new(
crate::lang::Game::PuftEgg,
"PuftEgg",
4.000,
Params::CritterEgg(CritterEgg{
tags: &[
Tag::Egg,
Tag::IncubatableEgg,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(0.500),
primary_element: &Creature,
}));
pub static DreckoEgg:Entity = Entity::new(
crate::lang::Game::DreckoEgg,
"DreckoEgg",
2.000,
Params::CritterEgg(CritterEgg{
tags: &[
Tag::Egg,
Tag::IncubatableEgg,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(2.000),
primary_element: &Creature,
}));
pub static DreckoPlasticEgg:Entity = Entity::new(
crate::lang::Game::DreckoPlasticEgg,
"DreckoPlasticEgg",
2.000,
Params::CritterEgg(CritterEgg{
tags: &[
Tag::Egg,
Tag::IncubatableEgg,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(2.000),
primary_element: &Creature,
}));
pub static LightBugBlackEgg:Entity = Entity::new(
crate::lang::Game::LightBugBlackEgg,
"LightBugBlackEgg",
0.000,
Params::CritterEgg(CritterEgg{
tags: &[
Tag::Egg,
Tag::IncubatableEgg,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(0.200),
primary_element: &Creature,
}));
pub static LightBugBlueEgg:Entity = Entity::new(
crate::lang::Game::LightBugBlueEgg,
"LightBugBlueEgg",
0.000,
Params::CritterEgg(CritterEgg{
tags: &[
Tag::Egg,
Tag::IncubatableEgg,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(0.200),
primary_element: &Creature,
}));
pub static LightBugEgg:Entity = Entity::new(
crate::lang::Game::LightBugEgg,
"LightBugEgg",
0.000,
Params::CritterEgg(CritterEgg{
tags: &[
Tag::Egg,
Tag::IncubatableEgg,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(0.200),
primary_element: &Creature,
}));
pub static PuftOxyliteEgg:Entity = Entity::new(
crate::lang::Game::PuftOxyliteEgg,
"PuftOxyliteEgg",
4.000,
Params::CritterEgg(CritterEgg{
tags: &[
Tag::Egg,
Tag::IncubatableEgg,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(0.500),
primary_element: &Creature,
}));
pub static LightBugCrystalEgg:Entity = Entity::new(
crate::lang::Game::LightBugCrystalEgg,
"LightBugCrystalEgg",
0.000,
Params::CritterEgg(CritterEgg{
tags: &[
Tag::Egg,
Tag::IncubatableEgg,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(0.200),
primary_element: &Creature,
}));
pub static LightBugPinkEgg:Entity = Entity::new(
crate::lang::Game::LightBugPinkEgg,
"LightBugPinkEgg",
0.000,
Params::CritterEgg(CritterEgg{
tags: &[
Tag::Egg,
Tag::IncubatableEgg,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(0.200),
primary_element: &Creature,
}));
pub static LightBugPurpleEgg:Entity = Entity::new(
crate::lang::Game::LightBugPurpleEgg,
"LightBugPurpleEgg",
0.000,
Params::CritterEgg(CritterEgg{
tags: &[
Tag::Egg,
Tag::IncubatableEgg,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(0.200),
primary_element: &Creature,
}));
pub static MoleEgg:Entity = Entity::new(
crate::lang::Game::MoleEgg,
"MoleEgg",
7.000,
Params::CritterEgg(CritterEgg{
tags: &[
Tag::Egg,
Tag::IncubatableEgg,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(2.000),
primary_element: &Creature,
}));
pub static MoleDelicacyEgg:Entity = Entity::new(
crate::lang::Game::MoleDelicacyEgg,
"MoleDelicacyEgg",
7.000,
Params::CritterEgg(CritterEgg{
tags: &[
Tag::Egg,
Tag::IncubatableEgg,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(2.000),
primary_element: &Creature,
}));
pub static OilfloaterEgg:Entity = Entity::new(
crate::lang::Game::OilfloaterEgg,
"OilfloaterEgg",
6.000,
Params::CritterEgg(CritterEgg{
tags: &[
Tag::Egg,
Tag::IncubatableEgg,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(2.000),
primary_element: &Creature,
}));
pub static OilfloaterDecorEgg:Entity = Entity::new(
crate::lang::Game::OilfloaterDecorEgg,
"OilfloaterDecorEgg",
6.000,
Params::CritterEgg(CritterEgg{
tags: &[
Tag::Egg,
Tag::IncubatableEgg,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(2.000),
primary_element: &Creature,
}));
pub static OilfloaterHighTempEgg:Entity = Entity::new(
crate::lang::Game::OilfloaterHighTempEgg,
"OilfloaterHighTempEgg",
6.000,
Params::CritterEgg(CritterEgg{
tags: &[
Tag::Egg,
Tag::IncubatableEgg,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(2.000),
primary_element: &Creature,
}));
pub static PuftAlphaEgg:Entity = Entity::new(
crate::lang::Game::PuftAlphaEgg,
"PuftAlphaEgg",
4.000,
Params::CritterEgg(CritterEgg{
tags: &[
Tag::Egg,
Tag::IncubatableEgg,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(0.500),
primary_element: &Creature,
}));
pub static PuftBleachstoneEgg:Entity = Entity::new(
crate::lang::Game::PuftBleachstoneEgg,
"PuftBleachstoneEgg",
4.000,
Params::CritterEgg(CritterEgg{
tags: &[
Tag::Egg,
Tag::IncubatableEgg,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(0.500),
primary_element: &Creature,
}));
pub static LightBugOrangeEgg:Entity = Entity::new(
crate::lang::Game::LightBugOrangeEgg,
"LightBugOrangeEgg",
0.000,
Params::CritterEgg(CritterEgg{
tags: &[
Tag::Egg,
Tag::IncubatableEgg,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(0.200),
primary_element: &Creature,
}));
pub static StaterpillarGasEgg:Entity = Entity::new(
crate::lang::Game::StaterpillarGasEgg,
"StaterpillarGasEgg",
10.000,
Params::CritterEgg(CritterEgg{
tags: &[
Tag::Egg,
Tag::IncubatableEgg,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(2.000),
primary_element: &Creature,
}));
pub static HatchVeggieEgg:Entity = Entity::new(
crate::lang::Game::HatchVeggieEgg,
"HatchVeggieEgg",
1.000,
Params::CritterEgg(CritterEgg{
tags: &[
Tag::Egg,
Tag::IncubatableEgg,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(2.000),
primary_element: &Creature,
}));
pub static HatchEgg:Entity = Entity::new(
crate::lang::Game::HatchEgg,
"HatchEgg",
1.000,
Params::CritterEgg(CritterEgg{
tags: &[
Tag::Egg,
Tag::IncubatableEgg,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(2.000),
primary_element: &Creature,
}));
pub static CrabEgg:Entity = Entity::new(
crate::lang::Game::CrabEgg,
"CrabEgg",
5.000,
Params::CritterEgg(CritterEgg{
tags: &[
Tag::Egg,
Tag::IncubatableEgg,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(2.000),
primary_element: &Creature,
}));
pub static CrabWoodEgg:Entity = Entity::new(
crate::lang::Game::CrabWoodEgg,
"CrabWoodEgg",
5.000,
Params::CritterEgg(CritterEgg{
tags: &[
Tag::Egg,
Tag::IncubatableEgg,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(2.000),
primary_element: &Creature,
}));
pub static CrabFreshWaterEgg:Entity = Entity::new(
crate::lang::Game::CrabFreshWaterEgg,
"CrabFreshWaterEgg",
5.000,
Params::CritterEgg(CritterEgg{
tags: &[
Tag::Egg,
Tag::IncubatableEgg,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(2.000),
primary_element: &Creature,
}));
pub static PacuCleanerEgg:Entity = Entity::new(
crate::lang::Game::PacuCleanerEgg,
"PacuCleanerEgg",
3.000,
Params::CritterEgg(CritterEgg{
tags: &[
Tag::Egg,
Tag::IncubatableEgg,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(4.000),
primary_element: &Creature,
}));
pub static DivergentBeetleEgg:Entity = Entity::new(
crate::lang::Game::DivergentBeetleEgg,
"DivergentBeetleEgg",
9.000,
Params::CritterEgg(CritterEgg{
tags: &[
Tag::Egg,
Tag::IncubatableEgg,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(2.000),
primary_element: &Creature,
}));
pub static HatchHardEgg:Entity = Entity::new(
crate::lang::Game::HatchHardEgg,
"HatchHardEgg",
1.000,
Params::CritterEgg(CritterEgg{
tags: &[
Tag::Egg,
Tag::IncubatableEgg,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(2.000),
primary_element: &Creature,
}));
pub static PacuTropicalEgg:Entity = Entity::new(
crate::lang::Game::PacuTropicalEgg,
"PacuTropicalEgg",
3.000,
Params::CritterEgg(CritterEgg{
tags: &[
Tag::Egg,
Tag::IncubatableEgg,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(4.000),
primary_element: &Creature,
}));
pub static DivergentWormEgg:Entity = Entity::new(
crate::lang::Game::DivergentWormEgg,
"DivergentWormEgg",
9.000,
Params::CritterEgg(CritterEgg{
tags: &[
Tag::Egg,
Tag::IncubatableEgg,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(2.000),
primary_element: &Creature,
}));
pub static HatchMetalEgg:Entity = Entity::new(
crate::lang::Game::HatchMetalEgg,
"HatchMetalEgg",
1.000,
Params::CritterEgg(CritterEgg{
tags: &[
Tag::Egg,
Tag::IncubatableEgg,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(2.000),
primary_element: &Creature,
}));
pub static PacuEgg:Entity = Entity::new(
crate::lang::Game::PacuEgg,
"PacuEgg",
3.000,
Params::CritterEgg(CritterEgg{
tags: &[
Tag::Egg,
Tag::IncubatableEgg,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(4.000),
primary_element: &Creature,
}));
pub struct CritterCritter{
pub tags: &'static [Tag],
pub hp: i32,
pub low_temp_warning: crate::units::Temperature,
pub low_temp_fatal: crate::units::Temperature,
pub high_temp_warning: crate::units::Temperature,
pub high_temp_fatal: crate::units::Temperature,
pub mass: crate::units::Kg,
pub decor: Option<crate::units::Decor>,
pub primary_element: &'static Entity,
pub age: Option<f32>,
pub calories_max: Option<f32>,
pub calories_loss: Option<f32>,
pub milk_consummer: Option<bool>,
pub space_per_critter: Option<f32>,
pub time_wait_plant_seed: Option<(f32, f32)>,
pub time_wait_climb_tree: Option<(f32, f32)>,
pub happy: Option<f32>,
pub glum: Option<f32>,
pub miserable: Option<f32>,
pub friends: Option<&'static [Tag]>,
}
pub static Squirrel:Entity = Entity::new(
crate::lang::Game::Squirrel,
"Squirrel",
8.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::Creature,
Tag::BagableCreature,
Tag::Walker,
Tag::CreatureBrain,
Tag::OriginalCreature,
],
hp: 25,
low_temp_warning: crate::units::Temperature(283.150),
low_temp_fatal: crate::units::Temperature(243.150),
high_temp_warning: crate::units::Temperature(293.150),
high_temp_fatal: crate::units::Temperature(343.150),
mass: crate::units::Kg(100.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: Some(100.000),
calories_max: Some(1000000.000),
calories_loss: Some(-166.667),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
time_wait_plant_seed: Some((60.000, 300.000)),
time_wait_climb_tree: Some((60.000, 120.000)),
happy: Some(4.000),
glum: Some(-1.000),
miserable: Some(-10.000),
friends: None,
}));
pub static SquirrelHug:Entity = Entity::new(
crate::lang::Game::SquirrelHug,
"SquirrelHug",
8.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::Creature,
Tag::BagableCreature,
Tag::Walker,
Tag::CreatureBrain,
],
hp: 25,
low_temp_warning: crate::units::Temperature(283.150),
low_temp_fatal: crate::units::Temperature(243.150),
high_temp_warning: crate::units::Temperature(293.150),
high_temp_fatal: crate::units::Temperature(343.150),
mass: crate::units::Kg(100.000),
decor: Some(crate::units::Decor {value: 25, radius: 4}),
primary_element: &Creature,
age: Some(100.000),
calories_max: Some(1000000.000),
calories_loss: Some(-166.667),
milk_consummer: Some(true),
space_per_critter: Some(4.000),
time_wait_plant_seed: Some((60.000, 300.000)),
time_wait_climb_tree: Some((60.000, 120.000)),
happy: Some(4.000),
glum: Some(-1.000),
miserable: Some(-10.000),
friends: None,
}));
pub static Staterpillar:Entity = Entity::new(
crate::lang::Game::Staterpillar,
"Staterpillar",
10.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::Walker,
Tag::Amphibious,
Tag::Creature,
Tag::BagableCreature,
Tag::CreatureBrain,
Tag::OriginalCreature,
],
hp: 25,
low_temp_warning: crate::units::Temperature(283.150),
low_temp_fatal: crate::units::Temperature(243.150),
high_temp_warning: crate::units::Temperature(293.150),
high_temp_fatal: crate::units::Temperature(343.150),
mass: crate::units::Kg(200.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: Some(100.000),
calories_max: Some(10000000.000),
calories_loss: Some(-3333.333),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
time_wait_plant_seed: None,
time_wait_climb_tree: None,
happy: Some(4.000),
glum: Some(-1.000),
miserable: Some(-10.000),
friends: None,
}));
pub static StaterpillarLiquid:Entity = Entity::new(
crate::lang::Game::StaterpillarLiquid,
"StaterpillarLiquid",
10.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::Walker,
Tag::Amphibious,
Tag::Creature,
Tag::BagableCreature,
Tag::CreatureBrain,
],
hp: 25,
low_temp_warning: crate::units::Temperature(263.150),
low_temp_fatal: crate::units::Temperature(243.150),
high_temp_warning: crate::units::Temperature(343.150),
high_temp_fatal: crate::units::Temperature(363.150),
mass: crate::units::Kg(200.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: Some(100.000),
calories_max: Some(10000000.000),
calories_loss: Some(-3333.333),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
time_wait_plant_seed: None,
time_wait_climb_tree: None,
happy: Some(4.000),
glum: Some(-1.000),
miserable: Some(-10.000),
friends: None,
}));
pub static Puft:Entity = Entity::new(
crate::lang::Game::Puft,
"Puft",
4.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::Creature,
Tag::Flyer,
Tag::BagableCreature,
Tag::CreatureBrain,
Tag::OriginalCreature,
],
hp: 25,
low_temp_warning: crate::units::Temperature(288.150),
low_temp_fatal: crate::units::Temperature(243.150),
high_temp_warning: crate::units::Temperature(328.150),
high_temp_fatal: crate::units::Temperature(378.150),
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: Some(75.000),
calories_max: Some(1200000.000),
calories_loss: Some(-333.333),
milk_consummer: Some(true),
space_per_critter: Some(16.000),
time_wait_plant_seed: None,
time_wait_climb_tree: None,
happy: Some(4.000),
glum: Some(-1.000),
miserable: Some(-10.000),
friends: None,
}));
pub static BeeHive:Entity = Entity::new(
crate::lang::Game::BeeHive,
"BeeHive",
11.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::Experimental,
Tag::Creature,
Tag::CreatureBrain,
],
hp: 25,
low_temp_warning: crate::units::Temperature(183.000),
low_temp_fatal: crate::units::Temperature(173.000),
high_temp_warning: crate::units::Temperature(263.000),
high_temp_fatal: crate::units::Temperature(273.000),
mass: crate::units::Kg(100.000),
decor: Some(crate::units::Decor {value: 5, radius: 1}),
primary_element: &Creature,
age: None,
calories_max: Some(45000000.000),
calories_loss: Some(-2500.000),
milk_consummer: None,
space_per_critter: None,
time_wait_plant_seed: None,
time_wait_climb_tree: None,
happy: None,
glum: None,
miserable: None,
friends: None,
}));
pub static Bee:Entity = Entity::new(
crate::lang::Game::Bee,
"Bee",
11.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::Creature,
Tag::BagableCreature,
Tag::Flyer,
Tag::CreatureBrain,
Tag::OriginalCreature,
],
hp: 5,
low_temp_warning: crate::units::Temperature(183.000),
low_temp_fatal: crate::units::Temperature(173.000),
high_temp_warning: crate::units::Temperature(263.000),
high_temp_fatal: crate::units::Temperature(273.000),
mass: crate::units::Kg(5.000),
decor: Some(crate::units::Decor {value: 30, radius: 5}),
primary_element: &Creature,
age: Some(5.000),
calories_max: None,
calories_loss: None,
milk_consummer: None,
space_per_critter: Some(4.000),
time_wait_plant_seed: None,
time_wait_climb_tree: None,
happy: Some(4.000),
glum: Some(-1.000),
miserable: None,
friends: None,
}));
pub static Drecko:Entity = Entity::new(
crate::lang::Game::Drecko,
"Drecko",
2.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::Walker,
Tag::Creature,
Tag::BagableCreature,
Tag::CreatureBrain,
Tag::OriginalCreature,
],
hp: 25,
low_temp_warning: crate::units::Temperature(308.150),
low_temp_fatal: crate::units::Temperature(288.150),
high_temp_warning: crate::units::Temperature(363.150),
high_temp_fatal: crate::units::Temperature(383.150),
mass: crate::units::Kg(200.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: Some(150.000),
calories_max: Some(10000000.000),
calories_loss: Some(-3333.333),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
time_wait_plant_seed: None,
time_wait_climb_tree: None,
happy: Some(4.000),
glum: Some(-1.000),
miserable: Some(-10.000),
friends: None,
}));
pub static DreckoPlastic:Entity = Entity::new(
crate::lang::Game::DreckoPlastic,
"DreckoPlastic",
2.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::Walker,
Tag::Creature,
Tag::BagableCreature,
Tag::CreatureBrain,
],
hp: 25,
low_temp_warning: crate::units::Temperature(298.150),
low_temp_fatal: crate::units::Temperature(278.150),
high_temp_warning: crate::units::Temperature(333.150),
high_temp_fatal: crate::units::Temperature(353.150),
mass: crate::units::Kg(200.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: Some(150.000),
calories_max: Some(10000000.000),
calories_loss: Some(-3333.333),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
time_wait_plant_seed: None,
time_wait_climb_tree: None,
happy: Some(4.000),
glum: Some(-1.000),
miserable: Some(-10.000),
friends: None,
}));
pub static Glom:Entity = Entity::new(
crate::lang::Game::Glom,
"Glom",
13.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::Walker,
Tag::OriginalCreature,
Tag::Creature,
Tag::BagableCreature,
Tag::CreatureBrain,
],
hp: 25,
low_temp_warning: crate::units::Temperature(293.150),
low_temp_fatal: crate::units::Temperature(273.150),
high_temp_warning: crate::units::Temperature(393.150),
high_temp_fatal: crate::units::Temperature(423.150),
mass: crate::units::Kg(25.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: None,
calories_max: None,
calories_loss: None,
milk_consummer: None,
space_per_critter: None,
time_wait_plant_seed: None,
time_wait_climb_tree: None,
happy: None,
glum: None,
miserable: None,
friends: None,
}));
pub static LightBugBlack:Entity = Entity::new(
crate::lang::Game::LightBugBlack,
"LightBugBlack",
0.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::Creature,
Tag::Flyer,
Tag::BagableCreature,
Tag::CreatureBrain,
],
hp: 5,
low_temp_warning: crate::units::Temperature(263.000),
low_temp_fatal: crate::units::Temperature(253.000),
high_temp_warning: crate::units::Temperature(313.000),
high_temp_fatal: crate::units::Temperature(323.000),
mass: crate::units::Kg(5.000),
decor: Some(crate::units::Decor {value: 80, radius: 7}),
primary_element: &Creature,
age: Some(75.000),
calories_max: Some(320000.000),
calories_loss: Some(-66.667),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
time_wait_plant_seed: None,
time_wait_climb_tree: None,
happy: Some(4.000),
glum: Some(-1.000),
miserable: Some(-10.000),
friends: None,
}));
pub static LightBugBlue:Entity = Entity::new(
crate::lang::Game::LightBugBlue,
"LightBugBlue",
0.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::Creature,
Tag::Flyer,
Tag::BagableCreature,
Tag::CreatureBrain,
],
hp: 5,
low_temp_warning: crate::units::Temperature(263.000),
low_temp_fatal: crate::units::Temperature(253.000),
high_temp_warning: crate::units::Temperature(313.000),
high_temp_fatal: crate::units::Temperature(323.000),
mass: crate::units::Kg(5.000),
decor: Some(crate::units::Decor {value: 50, radius: 7}),
primary_element: &Creature,
age: Some(25.000),
calories_max: Some(320000.000),
calories_loss: Some(-66.667),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
time_wait_plant_seed: None,
time_wait_climb_tree: None,
happy: Some(4.000),
glum: Some(-1.000),
miserable: Some(-10.000),
friends: None,
}));
pub static LightBug:Entity = Entity::new(
crate::lang::Game::LightBug,
"LightBug",
0.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::Creature,
Tag::Flyer,
Tag::BagableCreature,
Tag::CreatureBrain,
Tag::OriginalCreature,
Tag::LightSource,
],
hp: 5,
low_temp_warning: crate::units::Temperature(263.000),
low_temp_fatal: crate::units::Temperature(253.000),
high_temp_warning: crate::units::Temperature(313.000),
high_temp_fatal: crate::units::Temperature(323.000),
mass: crate::units::Kg(5.000),
decor: Some(crate::units::Decor {value: 30, radius: 5}),
primary_element: &Creature,
age: Some(25.000),
calories_max: Some(320000.000),
calories_loss: Some(-66.667),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
time_wait_plant_seed: None,
time_wait_climb_tree: None,
happy: Some(4.000),
glum: Some(-1.000),
miserable: Some(-10.000),
friends: None,
}));
pub static PuftOxylite:Entity = Entity::new(
crate::lang::Game::PuftOxylite,
"PuftOxylite",
4.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::Creature,
Tag::Flyer,
Tag::BagableCreature,
Tag::CreatureBrain,
],
hp: 25,
low_temp_warning: crate::units::Temperature(303.150),
low_temp_fatal: crate::units::Temperature(258.150),
high_temp_warning: crate::units::Temperature(338.150),
high_temp_fatal: crate::units::Temperature(388.150),
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: Some(75.000),
calories_max: Some(1200000.000),
calories_loss: Some(-333.333),
milk_consummer: Some(true),
space_per_critter: Some(16.000),
time_wait_plant_seed: None,
time_wait_climb_tree: None,
happy: Some(4.000),
glum: Some(-1.000),
miserable: Some(-10.000),
friends: None,
}));
pub static LightBugCrystal:Entity = Entity::new(
crate::lang::Game::LightBugCrystal,
"LightBugCrystal",
0.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::Creature,
Tag::Flyer,
Tag::BagableCreature,
Tag::CreatureBrain,
],
hp: 5,
low_temp_warning: crate::units::Temperature(263.000),
low_temp_fatal: crate::units::Temperature(253.000),
high_temp_warning: crate::units::Temperature(313.000),
high_temp_fatal: crate::units::Temperature(323.000),
mass: crate::units::Kg(5.000),
decor: Some(crate::units::Decor {value: 200, radius: 8}),
primary_element: &Creature,
age: Some(75.000),
calories_max: Some(320000.000),
calories_loss: Some(-66.667),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
time_wait_plant_seed: None,
time_wait_climb_tree: None,
happy: Some(4.000),
glum: Some(-1.000),
miserable: Some(-10.000),
friends: None,
}));
pub static LightBugPink:Entity = Entity::new(
crate::lang::Game::LightBugPink,
"LightBugPink",
0.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::Creature,
Tag::Flyer,
Tag::BagableCreature,
Tag::CreatureBrain,
],
hp: 5,
low_temp_warning: crate::units::Temperature(263.000),
low_temp_fatal: crate::units::Temperature(253.000),
high_temp_warning: crate::units::Temperature(313.000),
high_temp_fatal: crate::units::Temperature(323.000),
mass: crate::units::Kg(5.000),
decor: Some(crate::units::Decor {value: 50, radius: 7}),
primary_element: &Creature,
age: Some(25.000),
calories_max: Some(320000.000),
calories_loss: Some(-66.667),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
time_wait_plant_seed: None,
time_wait_climb_tree: None,
happy: Some(4.000),
glum: Some(-1.000),
miserable: Some(-10.000),
friends: None,
}));
pub static LightBugPurple:Entity = Entity::new(
crate::lang::Game::LightBugPurple,
"LightBugPurple",
0.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::Creature,
Tag::Flyer,
Tag::BagableCreature,
Tag::CreatureBrain,
],
hp: 5,
low_temp_warning: crate::units::Temperature(263.000),
low_temp_fatal: crate::units::Temperature(253.000),
high_temp_warning: crate::units::Temperature(313.000),
high_temp_fatal: crate::units::Temperature(323.000),
mass: crate::units::Kg(5.000),
decor: Some(crate::units::Decor {value: 50, radius: 7}),
primary_element: &Creature,
age: Some(25.000),
calories_max: Some(320000.000),
calories_loss: Some(-66.667),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
time_wait_plant_seed: None,
time_wait_climb_tree: None,
happy: Some(4.000),
glum: Some(-1.000),
miserable: Some(-10.000),
friends: None,
}));
pub static Mole:Entity = Entity::new(
crate::lang::Game::Mole,
"Mole",
7.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::Creature,
Tag::BagableCreature,
Tag::Walker,
Tag::CreatureBrain,
Tag::Digger,
Tag::OriginalCreature,
],
hp: 25,
low_temp_warning: crate::units::Temperature(123.150),
low_temp_fatal: crate::units::Temperature(73.150),
high_temp_warning: crate::units::Temperature(673.150),
high_temp_fatal: crate::units::Temperature(773.150),
mass: crate::units::Kg(25.000),
decor: None,
primary_element: &Creature,
age: Some(100.000),
calories_max: Some(48000000.000),
calories_loss: Some(-8000.000),
milk_consummer: Some(true),
space_per_critter: None,
time_wait_plant_seed: None,
time_wait_climb_tree: None,
happy: Some(4.000),
glum: Some(-1.000),
miserable: Some(-10.000),
friends: None,
}));
pub static MoleDelicacy:Entity = Entity::new(
crate::lang::Game::MoleDelicacy,
"MoleDelicacy",
7.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::Creature,
Tag::BagableCreature,
Tag::Walker,
Tag::CreatureBrain,
Tag::Digger,
],
hp: 25,
low_temp_warning: crate::units::Temperature(123.150),
low_temp_fatal: crate::units::Temperature(73.150),
high_temp_warning: crate::units::Temperature(673.150),
high_temp_fatal: crate::units::Temperature(773.150),
mass: crate::units::Kg(25.000),
decor: None,
primary_element: &Creature,
age: Some(100.000),
calories_max: Some(24000000.000),
calories_loss: Some(-8000.000),
milk_consummer: Some(true),
space_per_critter: None,
time_wait_plant_seed: None,
time_wait_climb_tree: None,
happy: Some(4.000),
glum: Some(-1.000),
miserable: Some(-10.000),
friends: None,
}));
pub static Moo:Entity = Entity::new(
crate::lang::Game::Moo,
"Moo",
12.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::Creature,
Tag::Flyer,
Tag::BagableCreature,
Tag::CreatureBrain,
Tag::OriginalCreature,
],
hp: 25,
low_temp_warning: crate::units::Temperature(123.150),
low_temp_fatal: crate::units::Temperature(73.150),
high_temp_warning: crate::units::Temperature(423.150),
high_temp_fatal: crate::units::Temperature(473.150),
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: Some(75.000),
calories_max: Some(1200000.000),
calories_loss: Some(-333.333),
milk_consummer: Some(true),
space_per_critter: Some(16.000),
time_wait_plant_seed: None,
time_wait_climb_tree: None,
happy: Some(4.000),
glum: Some(-1.000),
miserable: Some(-10.000),
friends: None,
}));
pub static Oilfloater:Entity = Entity::new(
crate::lang::Game::Oilfloater,
"Oilfloater",
6.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::Hoverer,
Tag::Creature,
Tag::BagableCreature,
Tag::CreatureBrain,
Tag::OriginalCreature,
],
hp: 25,
low_temp_warning: crate::units::Temperature(323.150),
low_temp_fatal: crate::units::Temperature(308.150),
high_temp_warning: crate::units::Temperature(413.150),
high_temp_fatal: crate::units::Temperature(433.150),
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 15, radius: 2}),
primary_element: &Creature,
age: Some(100.000),
calories_max: Some(600000.000),
calories_loss: Some(-200.000),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
time_wait_plant_seed: None,
time_wait_climb_tree: None,
happy: Some(4.000),
glum: Some(-1.000),
miserable: Some(-10.000),
friends: None,
}));
pub static OilfloaterDecor:Entity = Entity::new(
crate::lang::Game::OilfloaterDecor,
"OilfloaterDecor",
6.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::Hoverer,
Tag::Creature,
Tag::BagableCreature,
Tag::CreatureBrain,
],
hp: 25,
low_temp_warning: crate::units::Temperature(283.150),
low_temp_fatal: crate::units::Temperature(268.150),
high_temp_warning: crate::units::Temperature(343.150),
high_temp_fatal: crate::units::Temperature(363.150),
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 50, radius: 7}),
primary_element: &Creature,
age: Some(150.000),
calories_max: Some(600000.000),
calories_loss: Some(-200.000),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
time_wait_plant_seed: None,
time_wait_climb_tree: None,
happy: Some(4.000),
glum: Some(-1.000),
miserable: Some(-10.000),
friends: None,
}));
pub static OilfloaterHighTemp:Entity = Entity::new(
crate::lang::Game::OilfloaterHighTemp,
"OilfloaterHighTemp",
6.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::Hoverer,
Tag::Creature,
Tag::BagableCreature,
Tag::CreatureBrain,
],
hp: 25,
low_temp_warning: crate::units::Temperature(363.150),
low_temp_fatal: crate::units::Temperature(348.150),
high_temp_warning: crate::units::Temperature(523.150),
high_temp_fatal: crate::units::Temperature(543.150),
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 15, radius: 2}),
primary_element: &Creature,
age: Some(100.000),
calories_max: Some(600000.000),
calories_loss: Some(-200.000),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
time_wait_plant_seed: None,
time_wait_climb_tree: None,
happy: Some(4.000),
glum: Some(-1.000),
miserable: Some(-10.000),
friends: None,
}));
pub static PuftAlpha:Entity = Entity::new(
crate::lang::Game::PuftAlpha,
"PuftAlpha",
4.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::Creature,
Tag::Flyer,
Tag::BagableCreature,
Tag::CreatureBrain,
],
hp: 25,
low_temp_warning: crate::units::Temperature(258.150),
low_temp_fatal: crate::units::Temperature(213.150),
high_temp_warning: crate::units::Temperature(338.150),
high_temp_fatal: crate::units::Temperature(388.150),
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: Some(75.000),
calories_max: Some(1200000.000),
calories_loss: Some(-333.333),
milk_consummer: Some(true),
space_per_critter: Some(16.000),
time_wait_plant_seed: None,
time_wait_climb_tree: None,
happy: Some(4.000),
glum: Some(-1.000),
miserable: Some(-10.000),
friends: None,
}));
pub static PuftBleachstone:Entity = Entity::new(
crate::lang::Game::PuftBleachstone,
"PuftBleachstone",
4.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::Creature,
Tag::Flyer,
Tag::BagableCreature,
Tag::CreatureBrain,
],
hp: 25,
low_temp_warning: crate::units::Temperature(258.150),
low_temp_fatal: crate::units::Temperature(213.150),
high_temp_warning: crate::units::Temperature(308.150),
high_temp_fatal: crate::units::Temperature(358.150),
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: Some(75.000),
calories_max: Some(1200000.000),
calories_loss: Some(-333.333),
milk_consummer: Some(true),
space_per_critter: Some(16.000),
time_wait_plant_seed: None,
time_wait_climb_tree: None,
happy: Some(4.000),
glum: Some(-1.000),
miserable: Some(-10.000),
friends: None,
}));
pub static LightBugOrange:Entity = Entity::new(
crate::lang::Game::LightBugOrange,
"LightBugOrange",
0.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::Creature,
Tag::Flyer,
Tag::BagableCreature,
Tag::CreatureBrain,
],
hp: 5,
low_temp_warning: crate::units::Temperature(263.000),
low_temp_fatal: crate::units::Temperature(253.000),
high_temp_warning: crate::units::Temperature(313.000),
high_temp_fatal: crate::units::Temperature(323.000),
mass: crate::units::Kg(5.000),
decor: Some(crate::units::Decor {value: 50, radius: 7}),
primary_element: &Creature,
age: Some(25.000),
calories_max: Some(320000.000),
calories_loss: Some(-66.667),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
time_wait_plant_seed: None,
time_wait_climb_tree: None,
happy: Some(4.000),
glum: Some(-1.000),
miserable: Some(-10.000),
friends: None,
}));
pub static StaterpillarGas:Entity = Entity::new(
crate::lang::Game::StaterpillarGas,
"StaterpillarGas",
10.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::Walker,
Tag::Amphibious,
Tag::Creature,
Tag::BagableCreature,
Tag::CreatureBrain,
],
hp: 25,
low_temp_warning: crate::units::Temperature(263.150),
low_temp_fatal: crate::units::Temperature(243.150),
high_temp_warning: crate::units::Temperature(343.150),
high_temp_fatal: crate::units::Temperature(363.150),
mass: crate::units::Kg(200.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: Some(100.000),
calories_max: Some(10000000.000),
calories_loss: Some(-3333.333),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
time_wait_plant_seed: None,
time_wait_climb_tree: None,
happy: Some(4.000),
glum: Some(-1.000),
miserable: Some(-10.000),
friends: None,
}));
pub static HatchVeggie:Entity = Entity::new(
crate::lang::Game::HatchVeggie,
"HatchVeggie",
1.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::Creature,
Tag::BagableCreature,
Tag::Walker,
Tag::CreatureBrain,
],
hp: 25,
low_temp_warning: crate::units::Temperature(283.150),
low_temp_fatal: crate::units::Temperature(243.150),
high_temp_warning: crate::units::Temperature(293.150),
high_temp_fatal: crate::units::Temperature(343.150),
mass: crate::units::Kg(100.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: Some(100.000),
calories_max: Some(7000000.000),
calories_loss: Some(-1166.667),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
time_wait_plant_seed: None,
time_wait_climb_tree: None,
happy: Some(4.000),
glum: Some(-1.000),
miserable: Some(-10.000),
friends: None,
}));
pub static Hatch:Entity = Entity::new(
crate::lang::Game::Hatch,
"Hatch",
1.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::Creature,
Tag::BagableCreature,
Tag::Walker,
Tag::CreatureBrain,
Tag::OriginalCreature,
],
hp: 25,
low_temp_warning: crate::units::Temperature(283.150),
low_temp_fatal: crate::units::Temperature(243.150),
high_temp_warning: crate::units::Temperature(293.150),
high_temp_fatal: crate::units::Temperature(343.150),
mass: crate::units::Kg(100.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: Some(100.000),
calories_max: Some(7000000.000),
calories_loss: Some(-1166.667),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
time_wait_plant_seed: None,
time_wait_climb_tree: None,
happy: Some(4.000),
glum: Some(-1.000),
miserable: Some(-10.000),
friends: None,
}));
pub static Crab:Entity = Entity::new(
crate::lang::Game::Crab,
"Crab",
5.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::Creature,
Tag::BagableCreature,
Tag::Walker,
Tag::CrabFriend,
Tag::CreatureBrain,
Tag::Amphibious,
Tag::OriginalCreature,
],
hp: 25,
low_temp_warning: crate::units::Temperature(288.150),
low_temp_fatal: crate::units::Temperature(243.150),
high_temp_warning: crate::units::Temperature(343.150),
high_temp_fatal: crate::units::Temperature(373.150),
mass: crate::units::Kg(100.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: Some(100.000),
calories_max: Some(1000000.000),
calories_loss: Some(-166.667),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
time_wait_plant_seed: None,
time_wait_climb_tree: None,
happy: Some(4.000),
glum: Some(-1.000),
miserable: Some(-10.000),
friends: Some(&[
Tag::CrabFriend,
]),
}));
pub static CrabWood:Entity = Entity::new(
crate::lang::Game::CrabWood,
"CrabWood",
5.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::Creature,
Tag::BagableCreature,
Tag::Walker,
Tag::CrabFriend,
Tag::CreatureBrain,
Tag::Amphibious,
],
hp: 25,
low_temp_warning: crate::units::Temperature(288.150),
low_temp_fatal: crate::units::Temperature(243.150),
high_temp_warning: crate::units::Temperature(343.150),
high_temp_fatal: crate::units::Temperature(373.150),
mass: crate::units::Kg(100.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: Some(100.000),
calories_max: Some(1000000.000),
calories_loss: Some(-166.667),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
time_wait_plant_seed: None,
time_wait_climb_tree: None,
happy: Some(4.000),
glum: Some(-1.000),
miserable: Some(-10.000),
friends: Some(&[
Tag::CrabFriend,
]),
}));
pub static CrabFreshWater:Entity = Entity::new(
crate::lang::Game::CrabFreshWater,
"CrabFreshWater",
5.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::Creature,
Tag::BagableCreature,
Tag::Walker,
Tag::CrabFriend,
Tag::CreatureBrain,
Tag::Amphibious,
],
hp: 25,
low_temp_warning: crate::units::Temperature(288.150),
low_temp_fatal: crate::units::Temperature(243.150),
high_temp_warning: crate::units::Temperature(343.150),
high_temp_fatal: crate::units::Temperature(373.150),
mass: crate::units::Kg(100.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: Some(100.000),
calories_max: Some(1000000.000),
calories_loss: Some(-166.667),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
time_wait_plant_seed: None,
time_wait_climb_tree: None,
happy: Some(4.000),
glum: Some(-1.000),
miserable: Some(-10.000),
friends: Some(&[
Tag::CrabFriend,
]),
}));
pub static PacuCleaner:Entity = Entity::new(
crate::lang::Game::PacuCleaner,
"PacuCleaner",
3.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::SwimmingCreature,
Tag::Swimmer,
Tag::BagableCreature,
Tag::Creature,
Tag::CreatureBrain,
],
hp: 25,
low_temp_warning: crate::units::Temperature(243.150),
low_temp_fatal: crate::units::Temperature(223.150),
high_temp_warning: crate::units::Temperature(278.150),
high_temp_fatal: crate::units::Temperature(298.150),
mass: crate::units::Kg(200.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: Some(25.000),
calories_max: Some(500000.000),
calories_loss: Some(-166.667),
milk_consummer: None,
space_per_critter: Some(8.000),
time_wait_plant_seed: None,
time_wait_climb_tree: None,
happy: Some(4.000),
glum: Some(-1.000),
miserable: Some(-10.000),
friends: None,
}));
pub static DivergentBeetle:Entity = Entity::new(
crate::lang::Game::DivergentBeetle,
"DivergentBeetle",
9.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::Creature,
Tag::BagableCreature,
Tag::Walker,
Tag::CreatureBrain,
Tag::OriginalCreature,
],
hp: 25,
low_temp_warning: crate::units::Temperature(283.150),
low_temp_fatal: crate::units::Temperature(243.150),
high_temp_warning: crate::units::Temperature(293.150),
high_temp_fatal: crate::units::Temperature(343.150),
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: Some(75.000),
calories_max: Some(7000000.000),
calories_loss: Some(-1166.667),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
time_wait_plant_seed: None,
time_wait_climb_tree: None,
happy: Some(4.000),
glum: Some(-1.000),
miserable: Some(-10.000),
friends: None,
}));
pub static HatchHard:Entity = Entity::new(
crate::lang::Game::HatchHard,
"HatchHard",
1.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::Creature,
Tag::BagableCreature,
Tag::Walker,
Tag::CreatureBrain,
],
hp: 200,
low_temp_warning: crate::units::Temperature(283.150),
low_temp_fatal: crate::units::Temperature(243.150),
high_temp_warning: crate::units::Temperature(293.150),
high_temp_fatal: crate::units::Temperature(343.150),
mass: crate::units::Kg(100.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: Some(100.000),
calories_max: Some(7000000.000),
calories_loss: Some(-1166.667),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
time_wait_plant_seed: None,
time_wait_climb_tree: None,
happy: Some(4.000),
glum: Some(-1.000),
miserable: Some(-10.000),
friends: None,
}));
pub static PacuTropical:Entity = Entity::new(
crate::lang::Game::PacuTropical,
"PacuTropical",
3.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::SwimmingCreature,
Tag::Swimmer,
Tag::BagableCreature,
Tag::Creature,
Tag::CreatureBrain,
],
hp: 25,
low_temp_warning: crate::units::Temperature(303.150),
low_temp_fatal: crate::units::Temperature(283.150),
high_temp_warning: crate::units::Temperature(353.150),
high_temp_fatal: crate::units::Temperature(373.150),
mass: crate::units::Kg(200.000),
decor: Some(crate::units::Decor {value: 25, radius: 5}),
primary_element: &Creature,
age: Some(25.000),
calories_max: Some(500000.000),
calories_loss: Some(-166.667),
milk_consummer: None,
space_per_critter: Some(8.000),
time_wait_plant_seed: None,
time_wait_climb_tree: None,
happy: Some(4.000),
glum: Some(-1.000),
miserable: Some(-10.000),
friends: None,
}));
pub static DivergentWorm:Entity = Entity::new(
crate::lang::Game::DivergentWorm,
"DivergentWorm",
9.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::Creature,
Tag::BagableCreature,
Tag::Walker,
Tag::CreatureBrain,
],
hp: 25,
low_temp_warning: crate::units::Temperature(283.150),
low_temp_fatal: crate::units::Temperature(243.150),
high_temp_warning: crate::units::Temperature(293.150),
high_temp_fatal: crate::units::Temperature(343.150),
mass: crate::units::Kg(200.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: Some(150.000),
calories_max: Some(7000000.000),
calories_loss: Some(-1166.667),
milk_consummer: Some(true),
space_per_critter: Some(16.000),
time_wait_plant_seed: None,
time_wait_climb_tree: None,
happy: Some(4.000),
glum: Some(-1.000),
miserable: Some(-10.000),
friends: None,
}));
pub static HatchMetal:Entity = Entity::new(
crate::lang::Game::HatchMetal,
"HatchMetal",
1.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::Creature,
Tag::BagableCreature,
Tag::Walker,
Tag::CreatureBrain,
],
hp: 400,
low_temp_warning: crate::units::Temperature(283.150),
low_temp_fatal: crate::units::Temperature(243.150),
high_temp_warning: crate::units::Temperature(293.150),
high_temp_fatal: crate::units::Temperature(343.150),
mass: crate::units::Kg(100.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: Some(100.000),
calories_max: Some(7000000.000),
calories_loss: Some(-1166.667),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
time_wait_plant_seed: None,
time_wait_climb_tree: None,
happy: Some(4.000),
glum: Some(-1.000),
miserable: Some(-10.000),
friends: None,
}));
pub static Pacu:Entity = Entity::new(
crate::lang::Game::Pacu,
"Pacu",
3.000,
Params::CritterCritter(CritterCritter{
tags: &[
Tag::SwimmingCreature,
Tag::Swimmer,
Tag::BagableCreature,
Tag::Creature,
Tag::CreatureBrain,
Tag::OriginalCreature,
],
hp: 25,
low_temp_warning: crate::units::Temperature(273.150),
low_temp_fatal: crate::units::Temperature(253.150),
high_temp_warning: crate::units::Temperature(333.150),
high_temp_fatal: crate::units::Temperature(353.150),
mass: crate::units::Kg(200.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: Some(25.000),
calories_max: Some(500000.000),
calories_loss: Some(-166.667),
milk_consummer: None,
space_per_critter: Some(8.000),
time_wait_plant_seed: None,
time_wait_climb_tree: None,
happy: Some(4.000),
glum: Some(-1.000),
miserable: Some(-10.000),
friends: None,
}));
pub struct CritterBaby{
pub tags: &'static [Tag],
pub hp: i32,
pub low_temp_warning: crate::units::Temperature,
pub low_temp_fatal: crate::units::Temperature,
pub high_temp_warning: crate::units::Temperature,
pub high_temp_fatal: crate::units::Temperature,
pub mass: crate::units::Kg,
pub decor: Option<crate::units::Decor>,
pub primary_element: &'static Entity,
pub age: f32,
pub calories_max: Option<f32>,
pub calories_loss: Option<f32>,
pub milk_consummer: Option<bool>,
pub space_per_critter: Option<f32>,
pub happy: f32,
pub glum: f32,
pub miserable: Option<f32>,
pub friends: Option<&'static [Tag]>,
}
pub static DreckoPlasticBaby:Entity = Entity::new(
crate::lang::Game::DreckoPlasticBaby,
"DreckoPlasticBaby",
2.000,
Params::CritterBaby(CritterBaby{
tags: &[
Tag::Walker,
Tag::Creature,
Tag::BagableCreature,
Tag::CreatureBrain,
],
hp: 25,
low_temp_warning: crate::units::Temperature(298.150),
low_temp_fatal: crate::units::Temperature(278.150),
high_temp_warning: crate::units::Temperature(333.150),
high_temp_fatal: crate::units::Temperature(353.150),
mass: crate::units::Kg(200.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: 5.000,
calories_max: Some(10000000.000),
calories_loss: Some(-3333.333),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
happy: 4.000,
glum: -1.000,
miserable: Some(-10.000),
friends: None,
}));
pub static DivergentWormBaby:Entity = Entity::new(
crate::lang::Game::DivergentWormBaby,
"DivergentWormBaby",
9.000,
Params::CritterBaby(CritterBaby{
tags: &[
Tag::Creature,
Tag::BagableCreature,
Tag::Walker,
Tag::CreatureBrain,
],
hp: 25,
low_temp_warning: crate::units::Temperature(283.150),
low_temp_fatal: crate::units::Temperature(243.150),
high_temp_warning: crate::units::Temperature(293.150),
high_temp_fatal: crate::units::Temperature(343.150),
mass: crate::units::Kg(200.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: 5.000,
calories_max: Some(7000000.000),
calories_loss: Some(-1166.667),
milk_consummer: Some(true),
space_per_critter: Some(16.000),
happy: 4.000,
glum: -1.000,
miserable: Some(-10.000),
friends: None,
}));
pub static BeeBaby:Entity = Entity::new(
crate::lang::Game::BeeBaby,
"BeeBaby",
11.000,
Params::CritterBaby(CritterBaby{
tags: &[
Tag::Creature,
Tag::BagableCreature,
Tag::CreatureBrain,
Tag::OriginalCreature,
Tag::Walker,
],
hp: 5,
low_temp_warning: crate::units::Temperature(183.000),
low_temp_fatal: crate::units::Temperature(173.000),
high_temp_warning: crate::units::Temperature(263.000),
high_temp_fatal: crate::units::Temperature(273.000),
mass: crate::units::Kg(5.000),
decor: Some(crate::units::Decor {value: 30, radius: 5}),
primary_element: &Creature,
age: 2.000,
calories_max: None,
calories_loss: None,
milk_consummer: None,
space_per_critter: Some(4.000),
happy: 4.000,
glum: -1.000,
miserable: None,
friends: None,
}));
pub static DivergentBeetleBaby:Entity = Entity::new(
crate::lang::Game::DivergentBeetleBaby,
"DivergentBeetleBaby",
9.000,
Params::CritterBaby(CritterBaby{
tags: &[
Tag::Creature,
Tag::BagableCreature,
Tag::Walker,
Tag::CreatureBrain,
Tag::OriginalCreature,
],
hp: 25,
low_temp_warning: crate::units::Temperature(283.150),
low_temp_fatal: crate::units::Temperature(243.150),
high_temp_warning: crate::units::Temperature(293.150),
high_temp_fatal: crate::units::Temperature(343.150),
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: 5.000,
calories_max: Some(7000000.000),
calories_loss: Some(-1166.667),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
happy: 4.000,
glum: -1.000,
miserable: Some(-10.000),
friends: None,
}));
pub static CrabFreshWaterBaby:Entity = Entity::new(
crate::lang::Game::CrabFreshWaterBaby,
"CrabFreshWaterBaby",
5.000,
Params::CritterBaby(CritterBaby{
tags: &[
Tag::Creature,
Tag::BagableCreature,
Tag::Walker,
Tag::CrabFriend,
Tag::CreatureBrain,
Tag::Amphibious,
],
hp: 25,
low_temp_warning: crate::units::Temperature(288.150),
low_temp_fatal: crate::units::Temperature(243.150),
high_temp_warning: crate::units::Temperature(343.150),
high_temp_fatal: crate::units::Temperature(373.150),
mass: crate::units::Kg(100.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: 5.000,
calories_max: Some(1000000.000),
calories_loss: Some(-166.667),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
happy: 4.000,
glum: -1.000,
miserable: Some(-10.000),
friends: Some(&[
Tag::CrabFriend,
]),
}));
pub static DreckoBaby:Entity = Entity::new(
crate::lang::Game::DreckoBaby,
"DreckoBaby",
2.000,
Params::CritterBaby(CritterBaby{
tags: &[
Tag::Walker,
Tag::Creature,
Tag::BagableCreature,
Tag::CreatureBrain,
Tag::OriginalCreature,
],
hp: 25,
low_temp_warning: crate::units::Temperature(308.150),
low_temp_fatal: crate::units::Temperature(288.150),
high_temp_warning: crate::units::Temperature(363.150),
high_temp_fatal: crate::units::Temperature(383.150),
mass: crate::units::Kg(200.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: 5.000,
calories_max: Some(10000000.000),
calories_loss: Some(-3333.333),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
happy: 4.000,
glum: -1.000,
miserable: Some(-10.000),
friends: None,
}));
pub static HatchBaby:Entity = Entity::new(
crate::lang::Game::HatchBaby,
"HatchBaby",
1.000,
Params::CritterBaby(CritterBaby{
tags: &[
Tag::Creature,
Tag::BagableCreature,
Tag::Walker,
Tag::CreatureBrain,
Tag::OriginalCreature,
],
hp: 25,
low_temp_warning: crate::units::Temperature(283.150),
low_temp_fatal: crate::units::Temperature(243.150),
high_temp_warning: crate::units::Temperature(293.150),
high_temp_fatal: crate::units::Temperature(343.150),
mass: crate::units::Kg(100.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: 5.000,
calories_max: Some(7000000.000),
calories_loss: Some(-1166.667),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
happy: 4.000,
glum: -1.000,
miserable: Some(-10.000),
friends: None,
}));
pub static CrabWoodBaby:Entity = Entity::new(
crate::lang::Game::CrabWoodBaby,
"CrabWoodBaby",
5.000,
Params::CritterBaby(CritterBaby{
tags: &[
Tag::Creature,
Tag::BagableCreature,
Tag::Walker,
Tag::CrabFriend,
Tag::CreatureBrain,
Tag::Amphibious,
],
hp: 25,
low_temp_warning: crate::units::Temperature(288.150),
low_temp_fatal: crate::units::Temperature(243.150),
high_temp_warning: crate::units::Temperature(343.150),
high_temp_fatal: crate::units::Temperature(373.150),
mass: crate::units::Kg(100.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: 5.000,
calories_max: Some(1000000.000),
calories_loss: Some(-166.667),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
happy: 4.000,
glum: -1.000,
miserable: Some(-10.000),
friends: Some(&[
Tag::CrabFriend,
]),
}));
pub static CrabBaby:Entity = Entity::new(
crate::lang::Game::CrabBaby,
"CrabBaby",
5.000,
Params::CritterBaby(CritterBaby{
tags: &[
Tag::Creature,
Tag::BagableCreature,
Tag::Walker,
Tag::CrabFriend,
Tag::CreatureBrain,
Tag::Amphibious,
Tag::OriginalCreature,
],
hp: 25,
low_temp_warning: crate::units::Temperature(288.150),
low_temp_fatal: crate::units::Temperature(243.150),
high_temp_warning: crate::units::Temperature(343.150),
high_temp_fatal: crate::units::Temperature(373.150),
mass: crate::units::Kg(100.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: 5.000,
calories_max: Some(1000000.000),
calories_loss: Some(-166.667),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
happy: 4.000,
glum: -1.000,
miserable: Some(-10.000),
friends: Some(&[
Tag::CrabFriend,
]),
}));
pub static LightBugBaby:Entity = Entity::new(
crate::lang::Game::LightBugBaby,
"LightBugBaby",
0.000,
Params::CritterBaby(CritterBaby{
tags: &[
Tag::Creature,
Tag::Flyer,
Tag::BagableCreature,
Tag::CreatureBrain,
Tag::OriginalCreature,
Tag::LightSource,
],
hp: 5,
low_temp_warning: crate::units::Temperature(263.000),
low_temp_fatal: crate::units::Temperature(253.000),
high_temp_warning: crate::units::Temperature(313.000),
high_temp_fatal: crate::units::Temperature(323.000),
mass: crate::units::Kg(5.000),
decor: Some(crate::units::Decor {value: 30, radius: 5}),
primary_element: &Creature,
age: 5.000,
calories_max: Some(320000.000),
calories_loss: Some(-66.667),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
happy: 4.000,
glum: -1.000,
miserable: Some(-10.000),
friends: None,
}));
pub static HatchMetalBaby:Entity = Entity::new(
crate::lang::Game::HatchMetalBaby,
"HatchMetalBaby",
1.000,
Params::CritterBaby(CritterBaby{
tags: &[
Tag::Creature,
Tag::BagableCreature,
Tag::Walker,
Tag::CreatureBrain,
],
hp: 400,
low_temp_warning: crate::units::Temperature(283.150),
low_temp_fatal: crate::units::Temperature(243.150),
high_temp_warning: crate::units::Temperature(293.150),
high_temp_fatal: crate::units::Temperature(343.150),
mass: crate::units::Kg(100.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: 5.000,
calories_max: Some(7000000.000),
calories_loss: Some(-1166.667),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
happy: 4.000,
glum: -1.000,
miserable: Some(-10.000),
friends: None,
}));
pub static PuftOxyliteBaby:Entity = Entity::new(
crate::lang::Game::PuftOxyliteBaby,
"PuftOxyliteBaby",
4.000,
Params::CritterBaby(CritterBaby{
tags: &[
Tag::Creature,
Tag::Flyer,
Tag::BagableCreature,
Tag::CreatureBrain,
],
hp: 25,
low_temp_warning: crate::units::Temperature(303.150),
low_temp_fatal: crate::units::Temperature(258.150),
high_temp_warning: crate::units::Temperature(338.150),
high_temp_fatal: crate::units::Temperature(388.150),
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: 5.000,
calories_max: Some(1200000.000),
calories_loss: Some(-333.333),
milk_consummer: Some(true),
space_per_critter: Some(16.000),
happy: 4.000,
glum: -1.000,
miserable: Some(-10.000),
friends: None,
}));
pub static SquirrelHugBaby:Entity = Entity::new(
crate::lang::Game::SquirrelHugBaby,
"SquirrelHugBaby",
8.000,
Params::CritterBaby(CritterBaby{
tags: &[
Tag::Creature,
Tag::BagableCreature,
Tag::Walker,
Tag::CreatureBrain,
],
hp: 25,
low_temp_warning: crate::units::Temperature(283.150),
low_temp_fatal: crate::units::Temperature(243.150),
high_temp_warning: crate::units::Temperature(293.150),
high_temp_fatal: crate::units::Temperature(343.150),
mass: crate::units::Kg(100.000),
decor: Some(crate::units::Decor {value: 25, radius: 4}),
primary_element: &Creature,
age: 5.000,
calories_max: Some(1000000.000),
calories_loss: Some(-166.667),
milk_consummer: Some(true),
space_per_critter: Some(4.000),
happy: 4.000,
glum: -1.000,
miserable: Some(-10.000),
friends: None,
}));
pub static PuftBaby:Entity = Entity::new(
crate::lang::Game::PuftBaby,
"PuftBaby",
4.000,
Params::CritterBaby(CritterBaby{
tags: &[
Tag::Creature,
Tag::Flyer,
Tag::BagableCreature,
Tag::CreatureBrain,
Tag::OriginalCreature,
],
hp: 25,
low_temp_warning: crate::units::Temperature(288.150),
low_temp_fatal: crate::units::Temperature(243.150),
high_temp_warning: crate::units::Temperature(328.150),
high_temp_fatal: crate::units::Temperature(378.150),
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: 5.000,
calories_max: Some(1200000.000),
calories_loss: Some(-333.333),
milk_consummer: Some(true),
space_per_critter: Some(16.000),
happy: 4.000,
glum: -1.000,
miserable: Some(-10.000),
friends: None,
}));
pub static PuftBleachstoneBaby:Entity = Entity::new(
crate::lang::Game::PuftBleachstoneBaby,
"PuftBleachstoneBaby",
4.000,
Params::CritterBaby(CritterBaby{
tags: &[
Tag::Creature,
Tag::Flyer,
Tag::BagableCreature,
Tag::CreatureBrain,
],
hp: 25,
low_temp_warning: crate::units::Temperature(258.150),
low_temp_fatal: crate::units::Temperature(213.150),
high_temp_warning: crate::units::Temperature(308.150),
high_temp_fatal: crate::units::Temperature(358.150),
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: 5.000,
calories_max: Some(1200000.000),
calories_loss: Some(-333.333),
milk_consummer: Some(true),
space_per_critter: Some(16.000),
happy: 4.000,
glum: -1.000,
miserable: Some(-10.000),
friends: None,
}));
pub static StaterpillarBaby:Entity = Entity::new(
crate::lang::Game::StaterpillarBaby,
"StaterpillarBaby",
10.000,
Params::CritterBaby(CritterBaby{
tags: &[
Tag::Walker,
Tag::Amphibious,
Tag::Creature,
Tag::BagableCreature,
Tag::CreatureBrain,
Tag::OriginalCreature,
],
hp: 25,
low_temp_warning: crate::units::Temperature(283.150),
low_temp_fatal: crate::units::Temperature(243.150),
high_temp_warning: crate::units::Temperature(293.150),
high_temp_fatal: crate::units::Temperature(343.150),
mass: crate::units::Kg(200.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: 5.000,
calories_max: Some(10000000.000),
calories_loss: Some(-3333.333),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
happy: 4.000,
glum: -1.000,
miserable: Some(-10.000),
friends: None,
}));
pub static PuftAlphaBaby:Entity = Entity::new(
crate::lang::Game::PuftAlphaBaby,
"PuftAlphaBaby",
4.000,
Params::CritterBaby(CritterBaby{
tags: &[
Tag::Creature,
Tag::Flyer,
Tag::BagableCreature,
Tag::CreatureBrain,
],
hp: 25,
low_temp_warning: crate::units::Temperature(258.150),
low_temp_fatal: crate::units::Temperature(213.150),
high_temp_warning: crate::units::Temperature(338.150),
high_temp_fatal: crate::units::Temperature(388.150),
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: 5.000,
calories_max: Some(1200000.000),
calories_loss: Some(-333.333),
milk_consummer: Some(true),
space_per_critter: Some(16.000),
happy: 4.000,
glum: -1.000,
miserable: Some(-10.000),
friends: None,
}));
pub static PacuTropicalBaby:Entity = Entity::new(
crate::lang::Game::PacuTropicalBaby,
"PacuTropicalBaby",
3.000,
Params::CritterBaby(CritterBaby{
tags: &[
Tag::SwimmingCreature,
Tag::Swimmer,
Tag::BagableCreature,
Tag::Creature,
Tag::CreatureBrain,
],
hp: 25,
low_temp_warning: crate::units::Temperature(303.150),
low_temp_fatal: crate::units::Temperature(283.150),
high_temp_warning: crate::units::Temperature(353.150),
high_temp_fatal: crate::units::Temperature(373.150),
mass: crate::units::Kg(200.000),
decor: Some(crate::units::Decor {value: 25, radius: 5}),
primary_element: &Creature,
age: 5.000,
calories_max: Some(500000.000),
calories_loss: Some(-166.667),
milk_consummer: None,
space_per_critter: Some(8.000),
happy: 4.000,
glum: -1.000,
miserable: Some(-10.000),
friends: None,
}));
pub static PacuBaby:Entity = Entity::new(
crate::lang::Game::PacuBaby,
"PacuBaby",
3.000,
Params::CritterBaby(CritterBaby{
tags: &[
Tag::SwimmingCreature,
Tag::Swimmer,
Tag::BagableCreature,
Tag::Creature,
Tag::CreatureBrain,
],
hp: 25,
low_temp_warning: crate::units::Temperature(273.150),
low_temp_fatal: crate::units::Temperature(253.150),
high_temp_warning: crate::units::Temperature(333.150),
high_temp_fatal: crate::units::Temperature(353.150),
mass: crate::units::Kg(200.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: 5.000,
calories_max: Some(500000.000),
calories_loss: Some(-166.667),
milk_consummer: None,
space_per_critter: Some(8.000),
happy: 4.000,
glum: -1.000,
miserable: Some(-10.000),
friends: None,
}));
pub static PacuCleanerBaby:Entity = Entity::new(
crate::lang::Game::PacuCleanerBaby,
"PacuCleanerBaby",
3.000,
Params::CritterBaby(CritterBaby{
tags: &[
Tag::SwimmingCreature,
Tag::Swimmer,
Tag::BagableCreature,
Tag::Creature,
Tag::CreatureBrain,
],
hp: 25,
low_temp_warning: crate::units::Temperature(243.150),
low_temp_fatal: crate::units::Temperature(223.150),
high_temp_warning: crate::units::Temperature(278.150),
high_temp_fatal: crate::units::Temperature(298.150),
mass: crate::units::Kg(200.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: 5.000,
calories_max: Some(500000.000),
calories_loss: Some(-166.667),
milk_consummer: None,
space_per_critter: Some(8.000),
happy: 4.000,
glum: -1.000,
miserable: Some(-10.000),
friends: None,
}));
pub static OilfloaterHighTempBaby:Entity = Entity::new(
crate::lang::Game::OilfloaterHighTempBaby,
"OilfloaterHighTempBaby",
6.000,
Params::CritterBaby(CritterBaby{
tags: &[
Tag::Hoverer,
Tag::Creature,
Tag::BagableCreature,
Tag::CreatureBrain,
],
hp: 25,
low_temp_warning: crate::units::Temperature(363.150),
low_temp_fatal: crate::units::Temperature(348.150),
high_temp_warning: crate::units::Temperature(523.150),
high_temp_fatal: crate::units::Temperature(543.150),
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 15, radius: 2}),
primary_element: &Creature,
age: 5.000,
calories_max: Some(600000.000),
calories_loss: Some(-200.000),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
happy: 4.000,
glum: -1.000,
miserable: Some(-10.000),
friends: None,
}));
pub static StaterpillarGasBaby:Entity = Entity::new(
crate::lang::Game::StaterpillarGasBaby,
"StaterpillarGasBaby",
10.000,
Params::CritterBaby(CritterBaby{
tags: &[
Tag::Walker,
Tag::Amphibious,
Tag::Creature,
Tag::BagableCreature,
Tag::CreatureBrain,
],
hp: 25,
low_temp_warning: crate::units::Temperature(263.150),
low_temp_fatal: crate::units::Temperature(243.150),
high_temp_warning: crate::units::Temperature(343.150),
high_temp_fatal: crate::units::Temperature(363.150),
mass: crate::units::Kg(200.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: 5.000,
calories_max: Some(10000000.000),
calories_loss: Some(-3333.333),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
happy: 4.000,
glum: -1.000,
miserable: Some(-10.000),
friends: None,
}));
pub static OilfloaterDecorBaby:Entity = Entity::new(
crate::lang::Game::OilfloaterDecorBaby,
"OilfloaterDecorBaby",
6.000,
Params::CritterBaby(CritterBaby{
tags: &[
Tag::Hoverer,
Tag::Creature,
Tag::BagableCreature,
Tag::CreatureBrain,
],
hp: 25,
low_temp_warning: crate::units::Temperature(283.150),
low_temp_fatal: crate::units::Temperature(268.150),
high_temp_warning: crate::units::Temperature(343.150),
high_temp_fatal: crate::units::Temperature(363.150),
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 50, radius: 7}),
primary_element: &Creature,
age: 5.000,
calories_max: Some(600000.000),
calories_loss: Some(-200.000),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
happy: 4.000,
glum: -1.000,
miserable: Some(-10.000),
friends: None,
}));
pub static OilfloaterBaby:Entity = Entity::new(
crate::lang::Game::OilfloaterBaby,
"OilfloaterBaby",
6.000,
Params::CritterBaby(CritterBaby{
tags: &[
Tag::Hoverer,
Tag::Creature,
Tag::BagableCreature,
Tag::CreatureBrain,
Tag::OriginalCreature,
],
hp: 25,
low_temp_warning: crate::units::Temperature(323.150),
low_temp_fatal: crate::units::Temperature(308.150),
high_temp_warning: crate::units::Temperature(413.150),
high_temp_fatal: crate::units::Temperature(433.150),
mass: crate::units::Kg(50.000),
decor: Some(crate::units::Decor {value: 15, radius: 2}),
primary_element: &Creature,
age: 5.000,
calories_max: Some(600000.000),
calories_loss: Some(-200.000),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
happy: 4.000,
glum: -1.000,
miserable: Some(-10.000),
friends: None,
}));
pub static StaterpillarLiquidBaby:Entity = Entity::new(
crate::lang::Game::StaterpillarLiquidBaby,
"StaterpillarLiquidBaby",
10.000,
Params::CritterBaby(CritterBaby{
tags: &[
Tag::Walker,
Tag::Amphibious,
Tag::Creature,
Tag::BagableCreature,
Tag::CreatureBrain,
],
hp: 25,
low_temp_warning: crate::units::Temperature(263.150),
low_temp_fatal: crate::units::Temperature(243.150),
high_temp_warning: crate::units::Temperature(343.150),
high_temp_fatal: crate::units::Temperature(363.150),
mass: crate::units::Kg(200.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: 5.000,
calories_max: Some(10000000.000),
calories_loss: Some(-3333.333),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
happy: 4.000,
glum: -1.000,
miserable: Some(-10.000),
friends: None,
}));
pub static MoleDelicacyBaby:Entity = Entity::new(
crate::lang::Game::MoleDelicacyBaby,
"MoleDelicacyBaby",
7.000,
Params::CritterBaby(CritterBaby{
tags: &[
Tag::Creature,
Tag::BagableCreature,
Tag::Walker,
Tag::CreatureBrain,
Tag::Digger,
],
hp: 25,
low_temp_warning: crate::units::Temperature(123.150),
low_temp_fatal: crate::units::Temperature(73.150),
high_temp_warning: crate::units::Temperature(673.150),
high_temp_fatal: crate::units::Temperature(773.150),
mass: crate::units::Kg(25.000),
decor: None,
primary_element: &Creature,
age: 5.000,
calories_max: Some(24000000.000),
calories_loss: Some(-8000.000),
milk_consummer: Some(true),
space_per_critter: None,
happy: 4.000,
glum: -1.000,
miserable: Some(-10.000),
friends: None,
}));
pub static MoleBaby:Entity = Entity::new(
crate::lang::Game::MoleBaby,
"MoleBaby",
7.000,
Params::CritterBaby(CritterBaby{
tags: &[
Tag::Creature,
Tag::BagableCreature,
Tag::Walker,
Tag::CreatureBrain,
Tag::Digger,
Tag::OriginalCreature,
],
hp: 25,
low_temp_warning: crate::units::Temperature(123.150),
low_temp_fatal: crate::units::Temperature(73.150),
high_temp_warning: crate::units::Temperature(673.150),
high_temp_fatal: crate::units::Temperature(773.150),
mass: crate::units::Kg(25.000),
decor: None,
primary_element: &Creature,
age: 5.000,
calories_max: Some(48000000.000),
calories_loss: Some(-8000.000),
milk_consummer: Some(true),
space_per_critter: None,
happy: 4.000,
glum: -1.000,
miserable: Some(-10.000),
friends: None,
}));
pub static LightBugPurpleBaby:Entity = Entity::new(
crate::lang::Game::LightBugPurpleBaby,
"LightBugPurpleBaby",
0.000,
Params::CritterBaby(CritterBaby{
tags: &[
Tag::Creature,
Tag::Flyer,
Tag::BagableCreature,
Tag::CreatureBrain,
],
hp: 5,
low_temp_warning: crate::units::Temperature(263.000),
low_temp_fatal: crate::units::Temperature(253.000),
high_temp_warning: crate::units::Temperature(313.000),
high_temp_fatal: crate::units::Temperature(323.000),
mass: crate::units::Kg(5.000),
decor: Some(crate::units::Decor {value: 50, radius: 7}),
primary_element: &Creature,
age: 5.000,
calories_max: Some(320000.000),
calories_loss: Some(-66.667),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
happy: 4.000,
glum: -1.000,
miserable: Some(-10.000),
friends: None,
}));
pub static LightBugPinkBaby:Entity = Entity::new(
crate::lang::Game::LightBugPinkBaby,
"LightBugPinkBaby",
0.000,
Params::CritterBaby(CritterBaby{
tags: &[
Tag::Creature,
Tag::Flyer,
Tag::BagableCreature,
Tag::CreatureBrain,
],
hp: 5,
low_temp_warning: crate::units::Temperature(263.000),
low_temp_fatal: crate::units::Temperature(253.000),
high_temp_warning: crate::units::Temperature(313.000),
high_temp_fatal: crate::units::Temperature(323.000),
mass: crate::units::Kg(5.000),
decor: Some(crate::units::Decor {value: 50, radius: 7}),
primary_element: &Creature,
age: 5.000,
calories_max: Some(320000.000),
calories_loss: Some(-66.667),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
happy: 4.000,
glum: -1.000,
miserable: Some(-10.000),
friends: None,
}));
pub static LightBugOrangeBaby:Entity = Entity::new(
crate::lang::Game::LightBugOrangeBaby,
"LightBugOrangeBaby",
0.000,
Params::CritterBaby(CritterBaby{
tags: &[
Tag::Creature,
Tag::Flyer,
Tag::BagableCreature,
Tag::CreatureBrain,
],
hp: 5,
low_temp_warning: crate::units::Temperature(263.000),
low_temp_fatal: crate::units::Temperature(253.000),
high_temp_warning: crate::units::Temperature(313.000),
high_temp_fatal: crate::units::Temperature(323.000),
mass: crate::units::Kg(5.000),
decor: Some(crate::units::Decor {value: 50, radius: 7}),
primary_element: &Creature,
age: 5.000,
calories_max: Some(320000.000),
calories_loss: Some(-66.667),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
happy: 4.000,
glum: -1.000,
miserable: Some(-10.000),
friends: None,
}));
pub static LightBugCrystalBaby:Entity = Entity::new(
crate::lang::Game::LightBugCrystalBaby,
"LightBugCrystalBaby",
0.000,
Params::CritterBaby(CritterBaby{
tags: &[
Tag::Creature,
Tag::Flyer,
Tag::BagableCreature,
Tag::CreatureBrain,
],
hp: 5,
low_temp_warning: crate::units::Temperature(263.000),
low_temp_fatal: crate::units::Temperature(253.000),
high_temp_warning: crate::units::Temperature(313.000),
high_temp_fatal: crate::units::Temperature(323.000),
mass: crate::units::Kg(5.000),
decor: Some(crate::units::Decor {value: 200, radius: 8}),
primary_element: &Creature,
age: 5.000,
calories_max: Some(320000.000),
calories_loss: Some(-66.667),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
happy: 4.000,
glum: -1.000,
miserable: Some(-10.000),
friends: None,
}));
pub static LightBugBlueBaby:Entity = Entity::new(
crate::lang::Game::LightBugBlueBaby,
"LightBugBlueBaby",
0.000,
Params::CritterBaby(CritterBaby{
tags: &[
Tag::Creature,
Tag::Flyer,
Tag::BagableCreature,
Tag::CreatureBrain,
],
hp: 5,
low_temp_warning: crate::units::Temperature(263.000),
low_temp_fatal: crate::units::Temperature(253.000),
high_temp_warning: crate::units::Temperature(313.000),
high_temp_fatal: crate::units::Temperature(323.000),
mass: crate::units::Kg(5.000),
decor: Some(crate::units::Decor {value: 50, radius: 7}),
primary_element: &Creature,
age: 5.000,
calories_max: Some(320000.000),
calories_loss: Some(-66.667),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
happy: 4.000,
glum: -1.000,
miserable: Some(-10.000),
friends: None,
}));
pub static LightBugBlackBaby:Entity = Entity::new(
crate::lang::Game::LightBugBlackBaby,
"LightBugBlackBaby",
0.000,
Params::CritterBaby(CritterBaby{
tags: &[
Tag::Creature,
Tag::Flyer,
Tag::BagableCreature,
Tag::CreatureBrain,
],
hp: 5,
low_temp_warning: crate::units::Temperature(263.000),
low_temp_fatal: crate::units::Temperature(253.000),
high_temp_warning: crate::units::Temperature(313.000),
high_temp_fatal: crate::units::Temperature(323.000),
mass: crate::units::Kg(5.000),
decor: Some(crate::units::Decor {value: 80, radius: 7}),
primary_element: &Creature,
age: 5.000,
calories_max: Some(320000.000),
calories_loss: Some(-66.667),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
happy: 4.000,
glum: -1.000,
miserable: Some(-10.000),
friends: None,
}));
pub static HatchVeggieBaby:Entity = Entity::new(
crate::lang::Game::HatchVeggieBaby,
"HatchVeggieBaby",
1.000,
Params::CritterBaby(CritterBaby{
tags: &[
Tag::Creature,
Tag::BagableCreature,
Tag::Walker,
Tag::CreatureBrain,
],
hp: 25,
low_temp_warning: crate::units::Temperature(283.150),
low_temp_fatal: crate::units::Temperature(243.150),
high_temp_warning: crate::units::Temperature(293.150),
high_temp_fatal: crate::units::Temperature(343.150),
mass: crate::units::Kg(100.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: 5.000,
calories_max: Some(7000000.000),
calories_loss: Some(-1166.667),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
happy: 4.000,
glum: -1.000,
miserable: Some(-10.000),
friends: None,
}));
pub static HatchHardBaby:Entity = Entity::new(
crate::lang::Game::HatchHardBaby,
"HatchHardBaby",
1.000,
Params::CritterBaby(CritterBaby{
tags: &[
Tag::Creature,
Tag::BagableCreature,
Tag::Walker,
Tag::CreatureBrain,
],
hp: 200,
low_temp_warning: crate::units::Temperature(283.150),
low_temp_fatal: crate::units::Temperature(243.150),
high_temp_warning: crate::units::Temperature(293.150),
high_temp_fatal: crate::units::Temperature(343.150),
mass: crate::units::Kg(100.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: 5.000,
calories_max: Some(7000000.000),
calories_loss: Some(-1166.667),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
happy: 4.000,
glum: -1.000,
miserable: Some(-10.000),
friends: None,
}));
pub static SquirrelBaby:Entity = Entity::new(
crate::lang::Game::SquirrelBaby,
"SquirrelBaby",
8.000,
Params::CritterBaby(CritterBaby{
tags: &[
Tag::Creature,
Tag::BagableCreature,
Tag::Walker,
Tag::CreatureBrain,
Tag::OriginalCreature,
],
hp: 25,
low_temp_warning: crate::units::Temperature(283.150),
low_temp_fatal: crate::units::Temperature(243.150),
high_temp_warning: crate::units::Temperature(293.150),
high_temp_fatal: crate::units::Temperature(343.150),
mass: crate::units::Kg(100.000),
decor: Some(crate::units::Decor {value: 10, radius: 1}),
primary_element: &Creature,
age: 5.000,
calories_max: Some(1000000.000),
calories_loss: Some(-166.667),
milk_consummer: Some(true),
space_per_critter: Some(12.000),
happy: 4.000,
glum: -1.000,
miserable: Some(-10.000),
friends: None,
}));
pub struct PlantCropSeed{
pub tags: &'static [Tag],
pub mass: crate::units::Kg,
pub primary_element: &'static Entity,
}
pub static BasicFabricMaterialPlantSeed:Entity = Entity::new(
crate::lang::Game::BasicFabricMaterialPlantSeed,
"BasicFabricMaterialPlantSeed",
177013.000,
Params::PlantCropSeed(PlantCropSeed{
tags: &[
Tag::WaterSeed,
Tag::Seed,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub static BasicSingleHarvestPlantSeed:Entity = Entity::new(
crate::lang::Game::BasicSingleHarvestPlantSeed,
"BasicSingleHarvestPlantSeed",
177013.000,
Params::PlantCropSeed(PlantCropSeed{
tags: &[
Tag::CropSeed,
Tag::Seed,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub static BeanPlantSeed:Entity = Entity::new(
crate::lang::Game::BeanPlantSeed,
"BeanPlantSeed",
177013.000,
Params::PlantCropSeed(PlantCropSeed{
tags: &[
Tag::CropSeed,
Tag::PedestalDisplayable,
Tag::CookingIngredient,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub static ColdBreatherSeed:Entity = Entity::new(
crate::lang::Game::ColdBreatherSeed,
"ColdBreatherSeed",
177013.000,
Params::PlantCropSeed(PlantCropSeed{
tags: &[
Tag::CropSeed,
Tag::Seed,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub static ColdWheatSeed:Entity = Entity::new(
crate::lang::Game::ColdWheatSeed,
"ColdWheatSeed",
177013.000,
Params::PlantCropSeed(PlantCropSeed{
tags: &[
Tag::CropSeed,
Tag::PedestalDisplayable,
Tag::CookingIngredient,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub static CritterTrapPlantSeed:Entity = Entity::new(
crate::lang::Game::CritterTrapPlantSeed,
"CritterTrapPlantSeed",
177013.000,
Params::PlantCropSeed(PlantCropSeed{
tags: &[
Tag::CropSeed,
Tag::Seed,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub static ForestTreeSeed:Entity = Entity::new(
crate::lang::Game::ForestTreeSeed,
"ForestTreeSeed",
177013.000,
Params::PlantCropSeed(PlantCropSeed{
tags: &[
Tag::CropSeed,
Tag::Seed,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub static GasGrassSeed:Entity = Entity::new(
crate::lang::Game::GasGrassSeed,
"GasGrassSeed",
177013.000,
Params::PlantCropSeed(PlantCropSeed{
tags: &[
Tag::CropSeed,
Tag::Seed,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub static SaltPlantSeed:Entity = Entity::new(
crate::lang::Game::SaltPlantSeed,
"SaltPlantSeed",
177013.000,
Params::PlantCropSeed(PlantCropSeed{
tags: &[
Tag::CropSeed,
Tag::Seed,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub static PrickleFlowerSeed:Entity = Entity::new(
crate::lang::Game::PrickleFlowerSeed,
"PrickleFlowerSeed",
177013.000,
Params::PlantCropSeed(PlantCropSeed{
tags: &[
Tag::CropSeed,
Tag::Seed,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub static SeaLettuceSeed:Entity = Entity::new(
crate::lang::Game::SeaLettuceSeed,
"SeaLettuceSeed",
177013.000,
Params::PlantCropSeed(PlantCropSeed{
tags: &[
Tag::WaterSeed,
Tag::Seed,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub static SpiceVineSeed:Entity = Entity::new(
crate::lang::Game::SpiceVineSeed,
"SpiceVineSeed",
177013.000,
Params::PlantCropSeed(PlantCropSeed{
tags: &[
Tag::CropSeed,
Tag::Seed,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub static OxyfernSeed:Entity = Entity::new(
crate::lang::Game::OxyfernSeed,
"OxyfernSeed",
177013.000,
Params::PlantCropSeed(PlantCropSeed{
tags: &[
Tag::CropSeed,
Tag::Seed,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub static SwampHarvestPlantSeed:Entity = Entity::new(
crate::lang::Game::SwampHarvestPlantSeed,
"SwampHarvestPlantSeed",
177013.000,
Params::PlantCropSeed(PlantCropSeed{
tags: &[
Tag::CropSeed,
Tag::Seed,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub static SwampLilySeed:Entity = Entity::new(
crate::lang::Game::SwampLilySeed,
"SwampLilySeed",
177013.000,
Params::PlantCropSeed(PlantCropSeed{
tags: &[
Tag::CropSeed,
Tag::Seed,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub static WormPlantSeed:Entity = Entity::new(
crate::lang::Game::WormPlantSeed,
"WormPlantSeed",
177013.000,
Params::PlantCropSeed(PlantCropSeed{
tags: &[
Tag::CropSeed,
Tag::Seed,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub static MushroomSeed:Entity = Entity::new(
crate::lang::Game::MushroomSeed,
"MushroomSeed",
177013.000,
Params::PlantCropSeed(PlantCropSeed{
tags: &[
Tag::CropSeed,
Tag::Seed,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub struct PlantCrop{
pub tags: &'static [Tag],
pub low_temp_warning: crate::units::Temperature,
pub low_temp_fatal: crate::units::Temperature,
pub high_temp_warning: crate::units::Temperature,
pub high_temp_fatal: crate::units::Temperature,
pub mass: crate::units::Kg,
pub decor: crate::units::Decor,
pub primary_element: &'static Entity,
pub max_radiation: f32,
pub age: f32,
pub trap_critters: Option<&'static [Tag]>,
pub min_light: Option<f32>,
}
pub static BasicFabricPlant:Entity = Entity::new(
crate::lang::Game::BasicFabricPlant,
"BasicFabricPlant",
177013.000,
Params::PlantCrop(PlantCrop{
tags: &[
Tag::Plant,
],
low_temp_warning: crate::units::Temperature(295.150),
low_temp_fatal: crate::units::Temperature(248.150),
high_temp_warning: crate::units::Temperature(310.150),
high_temp_fatal: crate::units::Temperature(398.150),
mass: crate::units::Kg(1.000),
decor: crate::units::Decor {value: 10, radius: 1},
primary_element: &Creature,
max_radiation: 4600.000,
age: 2.000,
trap_critters: None,
min_light: None,
}));
pub static BasicSingleHarvestPlant:Entity = Entity::new(
crate::lang::Game::BasicSingleHarvestPlant,
"BasicSingleHarvestPlant",
177013.000,
Params::PlantCrop(PlantCrop{
tags: &[
Tag::Plant,
],
low_temp_warning: crate::units::Temperature(283.150),
low_temp_fatal: crate::units::Temperature(218.150),
high_temp_warning: crate::units::Temperature(303.150),
high_temp_fatal: crate::units::Temperature(398.150),
mass: crate::units::Kg(1.000),
decor: crate::units::Decor {value: -10, radius: 2},
primary_element: &Creature,
max_radiation: 4600.000,
age: 3.000,
trap_critters: None,
min_light: None,
}));
pub static BeanPlant:Entity = Entity::new(
crate::lang::Game::BeanPlant,
"BeanPlant",
177013.000,
Params::PlantCrop(PlantCrop{
tags: &[
Tag::Plant,
],
low_temp_warning: crate::units::Temperature(248.150),
low_temp_fatal: crate::units::Temperature(198.150),
high_temp_warning: crate::units::Temperature(273.150),
high_temp_fatal: crate::units::Temperature(323.150),
mass: crate::units::Kg(2.000),
decor: crate::units::Decor {value: 15, radius: 2},
primary_element: &Creature,
max_radiation: 9800.000,
age: 21.000,
trap_critters: None,
min_light: None,
}));
pub static ColdWheat:Entity = Entity::new(
crate::lang::Game::ColdWheat,
"ColdWheat",
177013.000,
Params::PlantCrop(PlantCrop{
tags: &[
Tag::Plant,
],
low_temp_warning: crate::units::Temperature(218.150),
low_temp_fatal: crate::units::Temperature(118.150),
high_temp_warning: crate::units::Temperature(278.150),
high_temp_fatal: crate::units::Temperature(358.150),
mass: crate::units::Kg(1.000),
decor: crate::units::Decor {value: 15, radius: 2},
primary_element: &Creature,
max_radiation: 12200.000,
age: 18.000,
trap_critters: None,
min_light: None,
}));
pub static CritterTrapPlant:Entity = Entity::new(
crate::lang::Game::CritterTrapPlant,
"CritterTrapPlant",
177013.000,
Params::PlantCrop(PlantCrop{
tags: &[
Tag::Plant,
],
low_temp_warning: crate::units::Temperature(183.000),
low_temp_fatal: crate::units::Temperature(173.000),
high_temp_warning: crate::units::Temperature(273.000),
high_temp_fatal: crate::units::Temperature(283.000),
mass: crate::units::Kg(4.000),
decor: crate::units::Decor {value: 15, radius: 2},
primary_element: &Creature,
max_radiation: 2200.000,
age: 30.000,
trap_critters: Some(&[
Tag::Walker,
Tag::Hoverer,
]),
min_light: None,
}));
pub static ForestTree:Entity = Entity::new(
crate::lang::Game::ForestTree,
"ForestTree",
177013.000,
Params::PlantCrop(PlantCrop{
tags: &[
Tag::Plant,
],
low_temp_warning: crate::units::Temperature(288.150),
low_temp_fatal: crate::units::Temperature(258.150),
high_temp_warning: crate::units::Temperature(313.150),
high_temp_fatal: crate::units::Temperature(448.150),
mass: crate::units::Kg(2.000),
decor: crate::units::Decor {value: 15, radius: 2},
primary_element: &Creature,
max_radiation: 9800.000,
age: 4.500,
trap_critters: None,
min_light: None,
}));
pub static GasGrass:Entity = Entity::new(
crate::lang::Game::GasGrass,
"GasGrass",
177013.000,
Params::PlantCrop(PlantCrop{
tags: &[
Tag::Plant,
],
low_temp_warning: crate::units::Temperature(0.000),
low_temp_fatal: crate::units::Temperature(218.150),
high_temp_warning: crate::units::Temperature(348.150),
high_temp_fatal: crate::units::Temperature(373.150),
mass: crate::units::Kg(1.000),
decor: crate::units::Decor {value: 25, radius: 4},
primary_element: &Creature,
max_radiation: 12200.000,
age: 4.000,
trap_critters: None,
min_light: Some(10000.000),
}));
pub static SaltPlant:Entity = Entity::new(
crate::lang::Game::SaltPlant,
"SaltPlant",
177013.000,
Params::PlantCrop(PlantCrop{
tags: &[
Tag::Hanging,
Tag::Plant,
],
low_temp_warning: crate::units::Temperature(248.150),
low_temp_fatal: crate::units::Temperature(198.150),
high_temp_warning: crate::units::Temperature(323.150),
high_temp_fatal: crate::units::Temperature(393.150),
mass: crate::units::Kg(2.000),
decor: crate::units::Decor {value: -10, radius: 2},
primary_element: &Creature,
max_radiation: 7400.000,
age: 6.000,
trap_critters: None,
min_light: None,
}));
pub static PrickleFlower:Entity = Entity::new(
crate::lang::Game::PrickleFlower,
"PrickleFlower",
177013.000,
Params::PlantCrop(PlantCrop{
tags: &[
Tag::Plant,
],
low_temp_warning: crate::units::Temperature(278.150),
low_temp_fatal: crate::units::Temperature(218.150),
high_temp_warning: crate::units::Temperature(303.150),
high_temp_fatal: crate::units::Temperature(398.150),
mass: crate::units::Kg(1.000),
decor: crate::units::Decor {value: 15, radius: 2},
primary_element: &Creature,
max_radiation: 4600.000,
age: 6.000,
trap_critters: None,
min_light: Some(200.000),
}));
pub static SeaLettuce:Entity = Entity::new(
crate::lang::Game::SeaLettuce,
"SeaLettuce",
177013.000,
Params::PlantCrop(PlantCrop{
tags: &[
Tag::Plant,
],
low_temp_warning: crate::units::Temperature(295.150),
low_temp_fatal: crate::units::Temperature(248.150),
high_temp_warning: crate::units::Temperature(338.150),
high_temp_fatal: crate::units::Temperature(398.150),
mass: crate::units::Kg(1.000),
decor: crate::units::Decor {value: 10, radius: 1},
primary_element: &Creature,
max_radiation: 7400.000,
age: 12.000,
trap_critters: None,
min_light: None,
}));
pub static SpiceVine:Entity = Entity::new(
crate::lang::Game::SpiceVine,
"SpiceVine",
177013.000,
Params::PlantCrop(PlantCrop{
tags: &[
Tag::Hanging,
Tag::Plant,
],
low_temp_warning: crate::units::Temperature(308.150),
low_temp_fatal: crate::units::Temperature(258.150),
high_temp_warning: crate::units::Temperature(358.150),
high_temp_fatal: crate::units::Temperature(448.150),
mass: crate::units::Kg(2.000),
decor: crate::units::Decor {value: 15, radius: 2},
primary_element: &Creature,
max_radiation: 9800.000,
age: 8.000,
trap_critters: None,
min_light: None,
}));
pub static SuperWormPlant:Entity = Entity::new(
crate::lang::Game::SuperWormPlant,
"SuperWormPlant",
177013.000,
Params::PlantCrop(PlantCrop{
tags: &[
Tag::Plant,
],
low_temp_warning: crate::units::Temperature(288.150),
low_temp_fatal: crate::units::Temperature(273.150),
high_temp_warning: crate::units::Temperature(323.150),
high_temp_fatal: crate::units::Temperature(373.150),
mass: crate::units::Kg(1.000),
decor: crate::units::Decor {value: 15, radius: 2},
primary_element: &Creature,
max_radiation: 9800.000,
age: 8.000,
trap_critters: None,
min_light: None,
}));
pub static SwampHarvestPlant:Entity = Entity::new(
crate::lang::Game::SwampHarvestPlant,
"SwampHarvestPlant",
177013.000,
Params::PlantCrop(PlantCrop{
tags: &[
Tag::Plant,
],
low_temp_warning: crate::units::Temperature(283.150),
low_temp_fatal: crate::units::Temperature(218.150),
high_temp_warning: crate::units::Temperature(303.150),
high_temp_fatal: crate::units::Temperature(398.150),
mass: crate::units::Kg(1.000),
decor: crate::units::Decor {value: -10, radius: 2},
primary_element: &Creature,
max_radiation: 4600.000,
age: 6.600,
trap_critters: None,
min_light: None,
}));
pub static SwampLily:Entity = Entity::new(
crate::lang::Game::SwampLily,
"SwampLily",
177013.000,
Params::PlantCrop(PlantCrop{
tags: &[
Tag::Plant,
],
low_temp_warning: crate::units::Temperature(308.150),
low_temp_fatal: crate::units::Temperature(258.150),
high_temp_warning: crate::units::Temperature(358.150),
high_temp_fatal: crate::units::Temperature(448.150),
mass: crate::units::Kg(1.000),
decor: crate::units::Decor {value: 15, radius: 2},
primary_element: &Creature,
max_radiation: 4600.000,
age: 12.000,
trap_critters: None,
min_light: None,
}));
pub static WormPlant:Entity = Entity::new(
crate::lang::Game::WormPlant,
"WormPlant",
177013.000,
Params::PlantCrop(PlantCrop{
tags: &[
Tag::Plant,
],
low_temp_warning: crate::units::Temperature(288.150),
low_temp_fatal: crate::units::Temperature(273.150),
high_temp_warning: crate::units::Temperature(323.150),
high_temp_fatal: crate::units::Temperature(373.150),
mass: crate::units::Kg(1.000),
decor: crate::units::Decor {value: -5, radius: 1},
primary_element: &Creature,
max_radiation: 9800.000,
age: 4.000,
trap_critters: None,
min_light: None,
}));
pub static MushroomPlant:Entity = Entity::new(
crate::lang::Game::MushroomPlant,
"MushroomPlant",
177013.000,
Params::PlantCrop(PlantCrop{
tags: &[
Tag::Plant,
],
low_temp_warning: crate::units::Temperature(278.150),
low_temp_fatal: crate::units::Temperature(228.150),
high_temp_warning: crate::units::Temperature(308.150),
high_temp_fatal: crate::units::Temperature(398.150),
mass: crate::units::Kg(1.000),
decor: crate::units::Decor {value: 15, radius: 2},
primary_element: &Creature,
max_radiation: 4600.000,
age: 7.500,
trap_critters: None,
min_light: None,
}));
pub struct PlantForage{
pub tags: &'static [Tag],
pub mass: crate::units::Kg,
pub decor: crate::units::Decor,
pub primary_element: &'static Entity,
}
pub static BasicForagePlantPlanted:Entity = Entity::new(
crate::lang::Game::BasicForagePlantPlanted,
"BasicForagePlantPlanted",
177013.000,
Params::PlantForage(PlantForage{
tags: &[
],
mass: crate::units::Kg(100.000),
decor: crate::units::Decor {value: 15, radius: 2},
primary_element: &Creature,
}));
pub static ForestForagePlantPlanted:Entity = Entity::new(
crate::lang::Game::ForestForagePlantPlanted,
"ForestForagePlantPlanted",
177013.000,
Params::PlantForage(PlantForage{
tags: &[
],
mass: crate::units::Kg(100.000),
decor: crate::units::Decor {value: 15, radius: 2},
primary_element: &Creature,
}));
pub static SwampForagePlantPlanted:Entity = Entity::new(
crate::lang::Game::SwampForagePlantPlanted,
"SwampForagePlantPlanted",
177013.000,
Params::PlantForage(PlantForage{
tags: &[
],
mass: crate::units::Kg(100.000),
decor: crate::units::Decor {value: 15, radius: 2},
primary_element: &Creature,
}));
pub struct PlantDecorSeed{
pub tags: &'static [Tag],
pub mass: crate::units::Kg,
pub primary_element: &'static Entity,
}
pub static CactusPlantSeed:Entity = Entity::new(
crate::lang::Game::CactusPlantSeed,
"CactusPlantSeed",
177013.000,
Params::PlantDecorSeed(PlantDecorSeed{
tags: &[
Tag::DecorSeed,
Tag::Seed,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub static CylindricaSeed:Entity = Entity::new(
crate::lang::Game::CylindricaSeed,
"CylindricaSeed",
177013.000,
Params::PlantDecorSeed(PlantDecorSeed{
tags: &[
Tag::DecorSeed,
Tag::Seed,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub static EvilFlowerSeed:Entity = Entity::new(
crate::lang::Game::EvilFlowerSeed,
"EvilFlowerSeed",
177013.000,
Params::PlantDecorSeed(PlantDecorSeed{
tags: &[
Tag::DecorSeed,
Tag::Seed,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub static BulbPlantSeed:Entity = Entity::new(
crate::lang::Game::BulbPlantSeed,
"BulbPlantSeed",
177013.000,
Params::PlantDecorSeed(PlantDecorSeed{
tags: &[
Tag::DecorSeed,
Tag::Seed,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub static PrickleGrassSeed:Entity = Entity::new(
crate::lang::Game::PrickleGrassSeed,
"PrickleGrassSeed",
177013.000,
Params::PlantDecorSeed(PlantDecorSeed{
tags: &[
Tag::DecorSeed,
Tag::Seed,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub static WineCupsSeed:Entity = Entity::new(
crate::lang::Game::WineCupsSeed,
"WineCupsSeed",
177013.000,
Params::PlantDecorSeed(PlantDecorSeed{
tags: &[
Tag::DecorSeed,
Tag::Seed,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub static ToePlantSeed:Entity = Entity::new(
crate::lang::Game::ToePlantSeed,
"ToePlantSeed",
177013.000,
Params::PlantDecorSeed(PlantDecorSeed{
tags: &[
Tag::DecorSeed,
Tag::Seed,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub static LeafyPlantSeed:Entity = Entity::new(
crate::lang::Game::LeafyPlantSeed,
"LeafyPlantSeed",
177013.000,
Params::PlantDecorSeed(PlantDecorSeed{
tags: &[
Tag::DecorSeed,
Tag::Seed,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(1.000),
primary_element: &Creature,
}));
pub struct PlantDecor{
pub tags: &'static [Tag],
pub low_temp_warning: crate::units::Temperature,
pub low_temp_fatal: crate::units::Temperature,
pub high_temp_warning: crate::units::Temperature,
pub high_temp_fatal: crate::units::Temperature,
pub mass: crate::units::Kg,
pub decor: crate::units::Decor,
pub primary_element: &'static Entity,
pub max_radiation: Option<f32>,
}
pub static CactusPlant:Entity = Entity::new(
crate::lang::Game::CactusPlant,
"CactusPlant",
177013.000,
Params::PlantDecor(PlantDecor{
tags: &[
Tag::Plant,
],
low_temp_warning: crate::units::Temperature(273.150),
low_temp_fatal: crate::units::Temperature(200.000),
high_temp_warning: crate::units::Temperature(373.150),
high_temp_fatal: crate::units::Temperature(400.000),
mass: crate::units::Kg(1.000),
decor: crate::units::Decor {value: 25, radius: 4},
primary_element: &Creature,
max_radiation: Some(2200.000),
}));
pub static ColdBreather:Entity = Entity::new(
crate::lang::Game::ColdBreather,
"ColdBreather",
177013.000,
Params::PlantDecor(PlantDecor{
tags: &[
],
low_temp_warning: crate::units::Temperature(213.150),
low_temp_fatal: crate::units::Temperature(183.150),
high_temp_warning: crate::units::Temperature(368.150),
high_temp_fatal: crate::units::Temperature(463.150),
mass: crate::units::Kg(400.000),
decor: crate::units::Decor {value: 15, radius: 2},
primary_element: &Creature,
max_radiation: None,
}));
pub static Cylindrica:Entity = Entity::new(
crate::lang::Game::Cylindrica,
"Cylindrica",
177013.000,
Params::PlantDecor(PlantDecor{
tags: &[
Tag::Plant,
],
low_temp_warning: crate::units::Temperature(293.150),
low_temp_fatal: crate::units::Temperature(288.150),
high_temp_warning: crate::units::Temperature(323.150),
high_temp_fatal: crate::units::Temperature(373.150),
mass: crate::units::Kg(1.000),
decor: crate::units::Decor {value: 25, radius: 4},
primary_element: &Creature,
max_radiation: Some(2200.000),
}));
pub static EvilFlower:Entity = Entity::new(
crate::lang::Game::EvilFlower,
"EvilFlower",
177013.000,
Params::PlantDecor(PlantDecor{
tags: &[
Tag::Plant,
],
low_temp_warning: crate::units::Temperature(258.150),
low_temp_fatal: crate::units::Temperature(168.150),
high_temp_warning: crate::units::Temperature(513.150),
high_temp_fatal: crate::units::Temperature(563.150),
mass: crate::units::Kg(1.000),
decor: crate::units::Decor {value: 80, radius: 7},
primary_element: &Creature,
max_radiation: Some(12200.000),
}));
pub static BulbPlant:Entity = Entity::new(
crate::lang::Game::BulbPlant,
"BulbPlant",
177013.000,
Params::PlantDecor(PlantDecor{
tags: &[
Tag::Plant,
],
low_temp_warning: crate::units::Temperature(293.150),
low_temp_fatal: crate::units::Temperature(288.000),
high_temp_warning: crate::units::Temperature(313.150),
high_temp_fatal: crate::units::Temperature(333.150),
mass: crate::units::Kg(1.000),
decor: crate::units::Decor {value: 15, radius: 2},
primary_element: &Creature,
max_radiation: Some(2200.000),
}));
pub static PrickleGrass:Entity = Entity::new(
crate::lang::Game::PrickleGrass,
"PrickleGrass",
177013.000,
Params::PlantDecor(PlantDecor{
tags: &[
Tag::Plant,
],
low_temp_warning: crate::units::Temperature(283.150),
low_temp_fatal: crate::units::Temperature(218.150),
high_temp_warning: crate::units::Temperature(303.150),
high_temp_fatal: crate::units::Temperature(398.150),
mass: crate::units::Kg(1.000),
decor: crate::units::Decor {value: 25, radius: 4},
primary_element: &Creature,
max_radiation: Some(900.000),
}));
pub static Oxyfern:Entity = Entity::new(
crate::lang::Game::Oxyfern,
"Oxyfern",
177013.000,
Params::PlantDecor(PlantDecor{
tags: &[
Tag::Plant,
],
low_temp_warning: crate::units::Temperature(273.150),
low_temp_fatal: crate::units::Temperature(253.150),
high_temp_warning: crate::units::Temperature(313.150),
high_temp_fatal: crate::units::Temperature(373.150),
mass: crate::units::Kg(1.000),
decor: crate::units::Decor {value: -10, radius: 2},
primary_element: &Creature,
max_radiation: Some(2200.000),
}));
pub static WineCups:Entity = Entity::new(
crate::lang::Game::WineCups,
"WineCups",
177013.000,
Params::PlantDecor(PlantDecor{
tags: &[
Tag::Plant,
],
low_temp_warning: crate::units::Temperature(283.150),
low_temp_fatal: crate::units::Temperature(218.150),
high_temp_warning: crate::units::Temperature(303.150),
high_temp_fatal: crate::units::Temperature(398.150),
mass: crate::units::Kg(1.000),
decor: crate::units::Decor {value: 25, radius: 4},
primary_element: &Creature,
max_radiation: Some(900.000),
}));
pub static ToePlant:Entity = Entity::new(
crate::lang::Game::ToePlant,
"ToePlant",
177013.000,
Params::PlantDecor(PlantDecor{
tags: &[
Tag::Plant,
],
low_temp_warning: crate::units::Temperature(183.000),
low_temp_fatal: crate::units::Temperature(173.000),
high_temp_warning: crate::units::Temperature(273.000),
high_temp_fatal: crate::units::Temperature(283.000),
mass: crate::units::Kg(1.000),
decor: crate::units::Decor {value: 25, radius: 4},
primary_element: &Creature,
max_radiation: Some(2200.000),
}));
pub static LeafyPlant:Entity = Entity::new(
crate::lang::Game::LeafyPlant,
"LeafyPlant",
177013.000,
Params::PlantDecor(PlantDecor{
tags: &[
Tag::Plant,
],
low_temp_warning: crate::units::Temperature(293.150),
low_temp_fatal: crate::units::Temperature(288.000),
high_temp_warning: crate::units::Temperature(323.150),
high_temp_fatal: crate::units::Temperature(373.000),
mass: crate::units::Kg(1.000),
decor: crate::units::Decor {value: 25, radius: 4},
primary_element: &Creature,
max_radiation: Some(2200.000),
}));
pub struct GeyserGeyser{
pub tags: &'static [Tag],
pub mass: crate::units::Kg,
pub decor: crate::units::Decor,
pub primary_element: &'static Entity,
}
pub static GeyserGeneric_steam:Entity = Entity::new(
crate::lang::Game::GeyserGeneric_steam,
"GeyserGeneric_steam",
0.000,
Params::GeyserGeyser(GeyserGeyser{
tags: &[
Tag::GeyserFeature,
Tag::Solid,
Tag::Other,
],
mass: crate::units::Kg(2000.000),
decor: crate::units::Decor {value: 10, radius: 2},
primary_element: &Katairite,
}));
pub static GeyserGeneric_hot_steam:Entity = Entity::new(
crate::lang::Game::GeyserGeneric_hot_steam,
"GeyserGeneric_hot_steam",
0.000,
Params::GeyserGeyser(GeyserGeyser{
tags: &[
Tag::GeyserFeature,
Tag::Solid,
Tag::Other,
],
mass: crate::units::Kg(2000.000),
decor: crate::units::Decor {value: 10, radius: 2},
primary_element: &Katairite,
}));
pub static GeyserGeneric_hot_water:Entity = Entity::new(
crate::lang::Game::GeyserGeneric_hot_water,
"GeyserGeneric_hot_water",
1.000,
Params::GeyserGeyser(GeyserGeyser{
tags: &[
Tag::GeyserFeature,
Tag::Solid,
Tag::Other,
],
mass: crate::units::Kg(2000.000),
decor: crate::units::Decor {value: 10, radius: 2},
primary_element: &Katairite,
}));
pub static GeyserGeneric_slush_water:Entity = Entity::new(
crate::lang::Game::GeyserGeneric_slush_water,
"GeyserGeneric_slush_water",
1.000,
Params::GeyserGeyser(GeyserGeyser{
tags: &[
Tag::GeyserFeature,
Tag::Solid,
Tag::Other,
],
mass: crate::units::Kg(2000.000),
decor: crate::units::Decor {value: 10, radius: 2},
primary_element: &Katairite,
}));
pub static GeyserGeneric_filthy_water:Entity = Entity::new(
crate::lang::Game::GeyserGeneric_filthy_water,
"GeyserGeneric_filthy_water",
1.000,
Params::GeyserGeyser(GeyserGeyser{
tags: &[
Tag::GeyserFeature,
Tag::Solid,
Tag::Other,
],
mass: crate::units::Kg(2000.000),
decor: crate::units::Decor {value: 10, radius: 2},
primary_element: &Katairite,
}));
pub static GeyserGeneric_slush_salt_water:Entity = Entity::new(
crate::lang::Game::GeyserGeneric_slush_salt_water,
"GeyserGeneric_slush_salt_water",
1.000,
Params::GeyserGeyser(GeyserGeyser{
tags: &[
Tag::GeyserFeature,
Tag::Solid,
Tag::Other,
],
mass: crate::units::Kg(2000.000),
decor: crate::units::Decor {value: 10, radius: 2},
primary_element: &Katairite,
}));
pub static GeyserGeneric_salt_water:Entity = Entity::new(
crate::lang::Game::GeyserGeneric_salt_water,
"GeyserGeneric_salt_water",
1.000,
Params::GeyserGeyser(GeyserGeyser{
tags: &[
Tag::GeyserFeature,
Tag::Solid,
Tag::Other,
],
mass: crate::units::Kg(2000.000),
decor: crate::units::Decor {value: 10, radius: 2},
primary_element: &Katairite,
}));
pub static GeyserGeneric_small_volcano:Entity = Entity::new(
crate::lang::Game::GeyserGeneric_small_volcano,
"GeyserGeneric_small_volcano",
2.000,
Params::GeyserGeyser(GeyserGeyser{
tags: &[
Tag::GeyserFeature,
Tag::Solid,
Tag::Other,
],
mass: crate::units::Kg(2000.000),
decor: crate::units::Decor {value: 10, radius: 2},
primary_element: &Katairite,
}));
pub static GeyserGeneric_big_volcano:Entity = Entity::new(
crate::lang::Game::GeyserGeneric_big_volcano,
"GeyserGeneric_big_volcano",
2.000,
Params::GeyserGeyser(GeyserGeyser{
tags: &[
Tag::GeyserFeature,
Tag::Solid,
Tag::Other,
],
mass: crate::units::Kg(2000.000),
decor: crate::units::Decor {value: 10, radius: 2},
primary_element: &Katairite,
}));
pub static GeyserGeneric_liquid_co2:Entity = Entity::new(
crate::lang::Game::GeyserGeneric_liquid_co2,
"GeyserGeneric_liquid_co2",
1.000,
Params::GeyserGeyser(GeyserGeyser{
tags: &[
Tag::GeyserFeature,
Tag::Solid,
Tag::Other,
],
mass: crate::units::Kg(2000.000),
decor: crate::units::Decor {value: 10, radius: 2},
primary_element: &Katairite,
}));
pub static GeyserGeneric_hot_co2:Entity = Entity::new(
crate::lang::Game::GeyserGeneric_hot_co2,
"GeyserGeneric_hot_co2",
0.000,
Params::GeyserGeyser(GeyserGeyser{
tags: &[
Tag::GeyserFeature,
Tag::Solid,
Tag::Other,
],
mass: crate::units::Kg(2000.000),
decor: crate::units::Decor {value: 10, radius: 2},
primary_element: &Katairite,
}));
pub static GeyserGeneric_hot_hydrogen:Entity = Entity::new(
crate::lang::Game::GeyserGeneric_hot_hydrogen,
"GeyserGeneric_hot_hydrogen",
0.000,
Params::GeyserGeyser(GeyserGeyser{
tags: &[
Tag::GeyserFeature,
Tag::Solid,
Tag::Other,
],
mass: crate::units::Kg(2000.000),
decor: crate::units::Decor {value: 10, radius: 2},
primary_element: &Katairite,
}));
pub static GeyserGeneric_hot_po2:Entity = Entity::new(
crate::lang::Game::GeyserGeneric_hot_po2,
"GeyserGeneric_hot_po2",
0.000,
Params::GeyserGeyser(GeyserGeyser{
tags: &[
Tag::GeyserFeature,
Tag::Solid,
Tag::Other,
],
mass: crate::units::Kg(2000.000),
decor: crate::units::Decor {value: 10, radius: 2},
primary_element: &Katairite,
}));
pub static GeyserGeneric_slimy_po2:Entity = Entity::new(
crate::lang::Game::GeyserGeneric_slimy_po2,
"GeyserGeneric_slimy_po2",
0.000,
Params::GeyserGeyser(GeyserGeyser{
tags: &[
Tag::GeyserFeature,
Tag::Solid,
Tag::Other,
],
mass: crate::units::Kg(2000.000),
decor: crate::units::Decor {value: 10, radius: 2},
primary_element: &Katairite,
}));
pub static GeyserGeneric_chlorine_gas:Entity = Entity::new(
crate::lang::Game::GeyserGeneric_chlorine_gas,
"GeyserGeneric_chlorine_gas",
0.000,
Params::GeyserGeyser(GeyserGeyser{
tags: &[
Tag::GeyserFeature,
Tag::Solid,
Tag::Other,
],
mass: crate::units::Kg(2000.000),
decor: crate::units::Decor {value: 10, radius: 2},
primary_element: &Katairite,
}));
pub static GeyserGeneric_methane:Entity = Entity::new(
crate::lang::Game::GeyserGeneric_methane,
"GeyserGeneric_methane",
0.000,
Params::GeyserGeyser(GeyserGeyser{
tags: &[
Tag::GeyserFeature,
Tag::Solid,
Tag::Other,
],
mass: crate::units::Kg(2000.000),
decor: crate::units::Decor {value: 10, radius: 2},
primary_element: &Katairite,
}));
pub static GeyserGeneric_molten_copper:Entity = Entity::new(
crate::lang::Game::GeyserGeneric_molten_copper,
"GeyserGeneric_molten_copper",
2.000,
Params::GeyserGeyser(GeyserGeyser{
tags: &[
Tag::GeyserFeature,
Tag::Solid,
Tag::Other,
],
mass: crate::units::Kg(2000.000),
decor: crate::units::Decor {value: 10, radius: 2},
primary_element: &Katairite,
}));
pub static GeyserGeneric_molten_iron:Entity = Entity::new(
crate::lang::Game::GeyserGeneric_molten_iron,
"GeyserGeneric_molten_iron",
2.000,
Params::GeyserGeyser(GeyserGeyser{
tags: &[
Tag::GeyserFeature,
Tag::Solid,
Tag::Other,
],
mass: crate::units::Kg(2000.000),
decor: crate::units::Decor {value: 10, radius: 2},
primary_element: &Katairite,
}));
pub static GeyserGeneric_molten_gold:Entity = Entity::new(
crate::lang::Game::GeyserGeneric_molten_gold,
"GeyserGeneric_molten_gold",
2.000,
Params::GeyserGeyser(GeyserGeyser{
tags: &[
Tag::GeyserFeature,
Tag::Solid,
Tag::Other,
],
mass: crate::units::Kg(2000.000),
decor: crate::units::Decor {value: 10, radius: 2},
primary_element: &Katairite,
}));
pub static GeyserGeneric_molten_aluminum:Entity = Entity::new(
crate::lang::Game::GeyserGeneric_molten_aluminum,
"GeyserGeneric_molten_aluminum",
2.000,
Params::GeyserGeyser(GeyserGeyser{
tags: &[
Tag::GeyserFeature,
Tag::Solid,
Tag::Other,
],
mass: crate::units::Kg(2000.000),
decor: crate::units::Decor {value: 10, radius: 2},
primary_element: &Katairite,
}));
pub static GeyserGeneric_molten_tungsten:Entity = Entity::new(
crate::lang::Game::GeyserGeneric_molten_tungsten,
"GeyserGeneric_molten_tungsten",
2.000,
Params::GeyserGeyser(GeyserGeyser{
tags: &[
Tag::GeyserFeature,
Tag::Solid,
Tag::Other,
],
mass: crate::units::Kg(2000.000),
decor: crate::units::Decor {value: 10, radius: 2},
primary_element: &Katairite,
}));
pub static GeyserGeneric_molten_niobium:Entity = Entity::new(
crate::lang::Game::GeyserGeneric_molten_niobium,
"GeyserGeneric_molten_niobium",
2.000,
Params::GeyserGeyser(GeyserGeyser{
tags: &[
Tag::GeyserFeature,
Tag::Solid,
Tag::Other,
],
mass: crate::units::Kg(2000.000),
decor: crate::units::Decor {value: 10, radius: 2},
primary_element: &Katairite,
}));
pub static GeyserGeneric_molten_cobalt:Entity = Entity::new(
crate::lang::Game::GeyserGeneric_molten_cobalt,
"GeyserGeneric_molten_cobalt",
2.000,
Params::GeyserGeyser(GeyserGeyser{
tags: &[
Tag::GeyserFeature,
Tag::Solid,
Tag::Other,
],
mass: crate::units::Kg(2000.000),
decor: crate::units::Decor {value: 10, radius: 2},
primary_element: &Katairite,
}));
pub static GeyserGeneric_oil_drip:Entity = Entity::new(
crate::lang::Game::GeyserGeneric_oil_drip,
"GeyserGeneric_oil_drip",
1.000,
Params::GeyserGeyser(GeyserGeyser{
tags: &[
Tag::GeyserFeature,
Tag::Solid,
Tag::Other,
],
mass: crate::units::Kg(2000.000),
decor: crate::units::Decor {value: 10, radius: 2},
primary_element: &Katairite,
}));
pub static GeyserGeneric_liquid_sulfur:Entity = Entity::new(
crate::lang::Game::GeyserGeneric_liquid_sulfur,
"GeyserGeneric_liquid_sulfur",
1.000,
Params::GeyserGeyser(GeyserGeyser{
tags: &[
Tag::GeyserFeature,
Tag::Solid,
Tag::Other,
],
mass: crate::units::Kg(2000.000),
decor: crate::units::Decor {value: 10, radius: 2},
primary_element: &Katairite,
}));
pub static OilWell:Entity = Entity::new(
crate::lang::Game::OilWell,
"OilWell",
177013.000,
Params::GeyserGeyser(GeyserGeyser{
tags: &[
Tag::Plumbable,
Tag::Crushable,
Tag::BuildableAny,
Tag::Solid,
Tag::BuildableRaw,
],
mass: crate::units::Kg(2000.000),
decor: crate::units::Decor {value: 10, radius: 2},
primary_element: &SedimentaryRock,
}));
pub struct EquipmentSuit{
pub tags: &'static [Tag],
pub mass: crate::units::Kg,
pub primary_element: &'static Entity,
}
pub static Atmo_Suit:Entity = Entity::new(
crate::lang::Game::Atmo_Suit,
"Atmo_Suit",
177013.000,
Params::EquipmentSuit(EquipmentSuit{
tags: &[
Tag::Clothes,
Tag::PedestalDisplayable,
Tag::AirtightSuit,
],
mass: crate::units::Kg(200.000),
primary_element: &Dirt,
}));
pub static Jet_Suit:Entity = Entity::new(
crate::lang::Game::Jet_Suit,
"Jet_Suit",
177013.000,
Params::EquipmentSuit(EquipmentSuit{
tags: &[
Tag::Clothes,
Tag::PedestalDisplayable,
Tag::AirtightSuit,
],
mass: crate::units::Kg(200.000),
primary_element: &Steel,
}));
pub static Lead_Suit:Entity = Entity::new(
crate::lang::Game::Lead_Suit,
"Lead_Suit",
177013.000,
Params::EquipmentSuit(EquipmentSuit{
tags: &[
Tag::Clothes,
Tag::PedestalDisplayable,
Tag::AirtightSuit,
],
mass: crate::units::Kg(200.000),
primary_element: &Dirt,
}));
pub static Oxygen_Mask:Entity = Entity::new(
crate::lang::Game::Oxygen_Mask,
"Oxygen_Mask",
177013.000,
Params::EquipmentSuit(EquipmentSuit{
tags: &[
Tag::Clothes,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(15.000),
primary_element: &Dirt,
}));
pub struct EquipmentWorn{
pub tags: &'static [Tag],
pub mass: crate::units::Kg,
pub primary_element: &'static Entity,
}
pub static Worn_Atmo_Suit:Entity = Entity::new(
crate::lang::Game::Worn_Atmo_Suit,
"Worn_Atmo_Suit",
177013.000,
Params::EquipmentWorn(EquipmentWorn{
tags: &[
Tag::Suit,
Tag::Clothes,
Tag::PedestalDisplayable,
Tag::AirtightSuit,
],
mass: crate::units::Kg(200.000),
primary_element: &Creature,
}));
pub static Worn_Jet_Suit:Entity = Entity::new(
crate::lang::Game::Worn_Jet_Suit,
"Worn_Jet_Suit",
177013.000,
Params::EquipmentWorn(EquipmentWorn{
tags: &[
Tag::Suit,
Tag::Clothes,
],
mass: crate::units::Kg(200.000),
primary_element: &Creature,
}));
pub static Worn_Lead_Suit:Entity = Entity::new(
crate::lang::Game::Worn_Lead_Suit,
"Worn_Lead_Suit",
177013.000,
Params::EquipmentWorn(EquipmentWorn{
tags: &[
Tag::Suit,
Tag::Clothes,
],
mass: crate::units::Kg(200.000),
primary_element: &Creature,
}));
pub static Worn_Oxygen_Mask:Entity = Entity::new(
crate::lang::Game::Worn_Oxygen_Mask,
"Worn_Oxygen_Mask",
177013.000,
Params::EquipmentWorn(EquipmentWorn{
tags: &[
Tag::Suit,
Tag::Clothes,
],
mass: crate::units::Kg(15.000),
primary_element: &Creature,
}));
pub struct EquipmentClothes{
pub tags: &'static [Tag],
pub mass: crate::units::Kg,
pub primary_element: &'static Entity,
}
pub static Cool_Vest:Entity = Entity::new(
crate::lang::Game::Cool_Vest,
"Cool_Vest",
177013.000,
Params::EquipmentClothes(EquipmentClothes{
tags: &[
Tag::Clothes,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(4.000),
primary_element: &Carbon,
}));
pub static CustomClothing:Entity = Entity::new(
crate::lang::Game::CustomClothing,
"CustomClothing",
177013.000,
Params::EquipmentClothes(EquipmentClothes{
tags: &[
Tag::Clothes,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(7.000),
primary_element: &Carbon,
}));
pub static Funky_Vest:Entity = Entity::new(
crate::lang::Game::Funky_Vest,
"Funky_Vest",
177013.000,
Params::EquipmentClothes(EquipmentClothes{
tags: &[
Tag::Clothes,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(4.000),
primary_element: &Carbon,
}));
pub static SleepClinicPajamas:Entity = Entity::new(
crate::lang::Game::SleepClinicPajamas,
"SleepClinicPajamas",
177013.000,
Params::EquipmentClothes(EquipmentClothes{
tags: &[
Tag::Clothes,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(4.000),
primary_element: &Carbon,
}));
pub static Warm_Vest:Entity = Entity::new(
crate::lang::Game::Warm_Vest,
"Warm_Vest",
177013.000,
Params::EquipmentClothes(EquipmentClothes{
tags: &[
Tag::Clothes,
Tag::PedestalDisplayable,
],
mass: crate::units::Kg(4.000),
primary_element: &Carbon,
}));
pub enum Tag {
  Clinic,
  WashStation,
  AdvancedWashStation,
  DeStressingBuilding,
  BedType,
  ScienceBuilding,
  FarmStationType,
  JetSuitBlocker,
  RanchStationType,
  IndustrialMachinery,
  RocketInteriorBuilding,
  PowerStation,
  NotRoomAssignable,
  CookTop,
  CreatureRelocator,
  FarmTiles,
  SpiceStation,
  OverlayBackLayer,
  Backwall,
  RecBuilding,
  Decoration,
  LightSource,
  MessTable,
  LuxuryBedType,
  Park,
  RocketModule,
  LaunchButtonRocketModule,
  NoseRocketModule,
  ModularLaunchpadPort,
  ModularConduitPort,
  NotRocketInteriorBuilding,
  OverlayFrontLayer,
  WireBridges,
  ToiletType,
  FlushToiletType,
  Pipes,
  CorrosionProof,
  Vents,
  Bunker,
  FloorTiles,
  Carpeted,
  Telepad,
  Experimental,
  Window,
  TravelTubeBridges,
  UniquePerWorld,
  RocketInterior,
  BuildableAny,
  Transparent,
  Solid,
  ManufacturedMaterial,
  Gravitas,
  BuildableRaw,
  Metal,
  RefinedMetal,
  Plumbable,
  Crushable,
  PreciousRock,
  NoRocketRefund,
  Special,
  Antiseptic,
  Plastic,
  WarpTech,
  HEPPassThrough,
  Life,
  PedestalDisplayable,
  Organics,
  FlyingCritterEdible,
  ConsumableOre,
  Oxidizer,
  Compostable,
  IceOre,
  Unstable,
  Liquifiable,
  Other,
  RareMaterials,
  Ore,
  Insulator,
  Agriculture,
  EmitsLight,
  Noncrushable,
  Filter,
  Farmable,
  Coal,
  Mixture,
  AnyWater,
  Liquid,
  CombustibleLiquid,
  Oil,
  Gas,
  Unbreathable,
  Breathable,
  Alloy,
  CombustibleGas,
  Comet,
  MiscPickupable,
  Artifact,
  Keepsake,
  MedicalSupplies,
  DoctorStationMedicalSupplies,
  Medicine,
  AdvancedDoctorStationMedicalSupplies,
  IndustrialIngredient,
  BuildingWood,
  MoltShell,
  IndustrialProduct,
  BuildingFiber,
  StoryTraitResource,
  DupeBrain,
  Edible,
  Pickled,
  Dehydrated,
  PickupableStorage,
  CookingIngredient,
  Creature,
  Robot,
  Walker,
  CreatureBrain,
  Egg,
  IncubatableEgg,
  BagableCreature,
  OriginalCreature,
  Amphibious,
  Flyer,
  Digger,
  Hoverer,
  CrabFriend,
  SwimmingCreature,
  Swimmer,
  WaterSeed,
  Seed,
  CropSeed,
  Plant,
  Hanging,
  DecorSeed,
  GeyserFeature,
  Clothes,
  AirtightSuit,
  Suit,
}
pub enum Link {
  LaunchPad,
  ModularLaunchpadPort,
}
pub enum Mode {
  Load,
  Unload,
}
pub enum LocationRule {
  OnFloor,
  OnCeiling,
  Tile,
  Anywhere,
  BuildingAttachPoint,
  NotInTiles,
  InCorner,
  OnWall,
  OnFloorOrBuildingAttachPoint,
  OnFoundationRotatable,
  Conduit,
  WireBridge,
  HighWattBridgeTile,
  NoLiquidConduitAtOrigin,
  WallFloor,
  LogicBridge,
  OnRocketEnvelope,
}
pub enum Rotation {
  FlipH,
  FlipV,
  R360,
  R90,
}
pub enum MaterialCategory {
  Solid(&'static Entity),
  Tag(Tag)
}
pub enum Params {
  BuildingMedical(BuildingMedical),
  BuildingEquipment(BuildingEquipment),
  BuildingFood(BuildingFood),
  BuildingUtilities(BuildingUtilities),
  BuildingOxygen(BuildingOxygen),
  BuildingRefining(BuildingRefining),
  BuildingFurniture(BuildingFurniture),
  BuildingRocketModule(BuildingRocketModule),
  BuildingConveyance(BuildingConveyance),
  BuildingPower(BuildingPower),
  BuildingPlumbing(BuildingPlumbing),
  BuildingHvac(BuildingHvac),
  BuildingBase(BuildingBase),
  BuildingAutomation(BuildingAutomation),
  BuildingRocketry(BuildingRocketry),
  BuildingGravitas(BuildingGravitas),
  BuildingHep(BuildingHep),
  BuildingQuest(BuildingQuest),
  BuildingLander(BuildingLander),
  ElementSolid(ElementSolid),
  ElementLiquid(ElementLiquid),
  ElementGas(ElementGas),
  ElementOther(ElementOther),
  SpaceComet(SpaceComet),
  SpaceArtifact(SpaceArtifact),
  SpaceHarvestable(SpaceHarvestable),
  SpaceShower(SpaceShower),
  ArtifactAny(ArtifactAny),
  ArtifactTerrestrial(ArtifactTerrestrial),
  ArtifactSpace(ArtifactSpace),
  ArtifactQuest(ArtifactQuest),
  MiscMedicine(MiscMedicine),
  MiscIndustrial(MiscIndustrial),
  MiscOther(MiscOther),
  MiscQuest(MiscQuest),
  MiscDupe(MiscDupe),
  FoodCooked(FoodCooked),
  FoodDehydrated(FoodDehydrated),
  FoodIngredient(FoodIngredient),
  CritterRobot(CritterRobot),
  CritterEgg(CritterEgg),
  CritterCritter(CritterCritter),
  CritterBaby(CritterBaby),
  PlantCropSeed(PlantCropSeed),
  PlantCrop(PlantCrop),
  PlantForage(PlantForage),
  PlantDecorSeed(PlantDecorSeed),
  PlantDecor(PlantDecor),
  GeyserGeyser(GeyserGeyser),
  EquipmentSuit(EquipmentSuit),
  EquipmentWorn(EquipmentWorn),
  EquipmentClothes(EquipmentClothes),
}
pub mod recipe {
  use super::*;
pub struct EntityAmount {
  pub entity: &'static Entity,
  pub amount: crate::units::Kg,
}

pub struct EntityPercent {
  pub entity: &'static Entity,
  pub percent: crate::units::Percent,
}
pub enum EntityOrTag {
  Entity(&'static Entity),
  Tag(Tag),
}

pub struct EntityOrTagAmount {
  pub entity: EntityOrTag,
  pub amount: crate::units::Kg,
}
pub struct Adult {
  pub input: &'static Entity,
  pub time: crate::units::Duration,
  pub output: &'static[EntityAmount],
}              
pub struct Birth {
  pub input: &'static Entity,
  pub time: crate::units::Duration,
  pub output: &'static[EntityAmount],
}              
pub struct Building {
  pub input: &'static[EntityOrTagAmount],
  pub time: crate::units::Duration,
  pub output: &'static Entity,
}              
pub struct Complex {
  pub input: &'static[EntityOrTagAmount],
  pub time: crate::units::Duration,
  pub temperature: crate::units::Temperature,
  pub converter: &'static Entity,
  pub output: &'static[EntityOrTagAmount],
}              
pub struct Death {
  pub input: &'static Entity,
  pub output: &'static[EntityAmount],
}              
pub struct Egg {
  pub input: &'static Entity,
  pub time: crate::units::Duration,
  pub output: &'static[EntityPercent],
}              
pub struct Fertilization {
  pub input: &'static[EntityAmount],
  pub output: &'static Entity,
}              
pub struct Harvest {
  pub input: &'static Entity,
  pub time: crate::units::Duration,
  pub output: &'static[EntityAmount],
}              
pub struct Irrigation {
  pub input: &'static[EntityAmount],
  pub output: &'static Entity,
}              
pub enum PhaseType {
  Cooking,
  Melting,
  Solidification,
  Vaporization,
  Freezing,
  Sublimation,
  Condensation,
  Transmutation,
}
pub struct Phase {
  pub input: &'static Entity,
  pub temp: crate::units::Temperature,
  pub type_of: PhaseType,
  pub output: &'static[EntityPercent],
}              
pub struct Rotting {
  pub input: &'static Entity,
  pub time: crate::units::Duration,
  pub output: &'static Entity,
}              
pub struct Seeds {
  pub input: &'static Entity,
  pub time: crate::units::Duration,
  pub output: &'static[EntityAmount],
}              
pub struct SublimateChunk {
  pub input: &'static Entity,
  pub pression_max: crate::units::Kg,
  pub rate: f32,
  pub temp_min: crate::units::Temperature,
  pub min_amount: crate::units::Kg,
  pub power: f32,
  pub output: &'static Entity,
}              
pub struct SublimateLiquid {
  pub input: &'static Entity,
  pub pression_max: crate::units::Kg,
  pub offgas: f32,
  pub efficiency:  crate::units::Percent,
  pub probability:  crate::units::Percent,
  pub output: &'static Entity,
}              
pub struct SublimateSolid {
  pub input: &'static Entity,
  pub pression_max: crate::units::Kg,
  pub rate: f32,
  pub efficiency:  crate::units::Percent,
  pub probability: crate::units::Percent,
  pub output: &'static Entity,
}              
pub enum Recipe {
Adult(Adult),
Birth(Birth),
Building(Building),
Complex(Complex),
Death(Death),
Egg(Egg),
Fertilization(Fertilization),
Harvest(Harvest),
Irrigation(Irrigation),
Phase(Phase),
Rotting(Rotting),
Seeds(Seeds),
SublimateChunk(SublimateChunk),
SublimateLiquid(SublimateLiquid),
SublimateSolid(SublimateSolid),
}

pub static recipes: &'static[Recipe] = &[
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(10.000),
output: &AdvancedDoctorStation,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(30.000),
output: &AdvancedResearchCenter,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Plastic), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(120.000),
output: &AirBorneCritterCondo,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(120.000),
output: &AirConditioner,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(30.000),
output: &AirFilter,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(30.000),
output: &AlgaeDistillery,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Farmable), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(30.000),
output: &AlgaeHabitat,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(120.000),
output: &Apothecary,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(10.000),
output: &ArcadeMachine,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(800.000)},
],
time: crate::units::Duration(60.000),
output: &ArtifactAnalysisStation,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(60.000),
output: &ArtifactCargoBay,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(10.000),
output: &AutoMiner,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(30.000),
output: &Battery,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(60.000),
output: &BatteryMedium,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(30.000),
output: &BatteryModule,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(60.000),
output: &BatterySmart,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(400.000)},
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildingFiber), amount: crate::units::Kg(2.000)},
],
time: crate::units::Duration(60.000),
output: &BeachChair,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(10.000),
output: &Bed,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(10.000),
output: &BottleEmptier,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(60.000),
output: &BottleEmptierGas,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Steel), amount: crate::units::Kg(500.000)},
],
time: crate::units::Duration(120.000),
output: &BunkerDoor,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Steel), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(60.000),
output: &BunkerTile,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(500.000)},
],
time: crate::units::Duration(30.000),
output: &CO2Engine,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(30.000),
output: &CO2Scrubber,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildingFiber), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(120.000),
output: &Canvas,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildingFiber), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(120.000),
output: &CanvasTall,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildingFiber), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(120.000),
output: &CanvasWide,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(200.000)},
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildingFiber), amount: crate::units::Kg(2.000)},
],
time: crate::units::Duration(30.000),
output: &CarpetTile,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(10.000),
output: &CeilingLight,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(30.000),
output: &Checkpoint,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(800.000)},
],
time: crate::units::Duration(120.000),
output: &Chlorinator,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(240.000),
output: &ClothingAlterationStation,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(240.000),
output: &ClothingFabricator,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(30.000),
output: &ClusterTelescope,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(30.000),
output: &ClusterTelescopeEnclosed,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(30.000),
output: &CometDetector,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(800.000)},
],
time: crate::units::Duration(30.000),
output: &Compost,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Plastic), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(30.000),
output: &GasConduitDiseaseSensor,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Plastic), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(30.000),
output: &LiquidConduitDiseaseSensor,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(30.000),
output: &GasConduitElementSensor,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(30.000),
output: &LiquidConduitElementSensor,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(30.000),
output: &GasConduitTemperatureSensor,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(30.000),
output: &LiquidConduitTemperatureSensor,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(10.000),
output: &ContactConductivePipeBridge,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(30.000),
output: &CookingStation,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(30.000),
output: &CornerMoulding,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(30.000),
output: &CraftingTable,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(120.000),
output: &CreatureFeeder,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(200.000)},
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildingFiber), amount: crate::units::Kg(10.000)},
],
time: crate::units::Duration(120.000),
output: &CritterCondo,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(10.000),
output: &CritterDropOff,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(10.000),
output: &CritterPickUp,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(30.000),
output: &CrownMoulding,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(30.000),
output: &DLC1CosmicResearchCenter,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(800.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Lead), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(120.000),
output: &DecontaminationShower,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(800.000)},
],
time: crate::units::Duration(60.000),
output: &DiamondPress,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(10.000),
output: &DiningTable,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(10.000),
output: &DoctorStation,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(10.000),
output: &Door,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(10.000),
output: &EggCracker,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(120.000),
output: &EggIncubator,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(30.000),
output: &Electrolyzer,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(10.000),
output: &EspressoMachine,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(30.000),
output: &EthanolDistillery,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(30.000),
output: &ExobaseHeadquarters,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(3.000),
output: &ExteriorWall,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Glass), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(30.000),
output: &FacilityBackWallWindow,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(30.000),
output: &FarmStation,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Farmable), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(30.000),
output: &FarmTile,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(30.000),
output: &FertilizerMaker,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(10.000),
output: &FirePole,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(10.000),
output: &FishDeliveryPoint,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(120.000),
output: &FishFeeder,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(10.000),
output: &FloorLamp,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(30.000),
output: &FloorSwitch,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(10.000),
output: &FlowerVase,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(10.000),
output: &FlowerVaseHanging,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Transparent), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(10.000),
output: &FlowerVaseHangingFancy,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(10.000),
output: &FlowerVaseWall,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(30.000),
output: &FlushToilet,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(200.000)},
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Plastic), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(30.000),
output: &FoodDehydrator,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(100.000)},
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Plastic), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(120.000),
output: &FoodRehydrator,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Fossil), amount: crate::units::Kg(2000.000)},
],
time: crate::units::Duration(120.000),
output: &FossilDig,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Steel), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(30.000),
output: &Gantry,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(120.000),
output: &GasBottler,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Steel), amount: crate::units::Kg(1000.000)},
],
time: crate::units::Duration(60.000),
output: &GasCargoBayCluster,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(30.000),
output: &GasCargoBaySmall,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(3.000),
output: &GasConduitBridge,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(3.000),
output: &GasConduit,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(10.000),
output: &GasConduitRadiant,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(10.000),
output: &GasFilter,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Plastic), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(10.000),
output: &GasLimitValve,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(10.000),
output: &GasLogicValve,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Plastic), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(60.000),
output: &GasMiniPump,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(30.000),
output: &GasPermeableMembrane,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(30.000),
output: &GasPump,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(120.000),
output: &GasReservoir,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(10.000),
output: &GasValve,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(30.000),
output: &GasVent,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(200.000)},
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Plastic), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(30.000),
output: &GasVentHighPressure,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(800.000)},
],
time: crate::units::Duration(120.000),
output: &Generator,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(30.000),
output: &GeneticAnalysisStation,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(120.000),
output: &GeoTuner,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(800.000)},
],
time: crate::units::Duration(60.000),
output: &GlassForge,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Transparent), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(30.000),
output: &GlassTile,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(30.000),
output: &GourmetCookingStation,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(800.000)},
],
time: crate::units::Duration(120.000),
output: &Grave,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(10.000),
output: &GravitasContainer,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(800.000)},
],
time: crate::units::Duration(120.000),
output: &GravitasCreatureManipulator,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(10.000),
output: &GravitasDoor,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(10.000),
output: &GravitasLabLight,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(30.000),
output: &GravitasPedestal,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(120.000),
output: &HEPBattery,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Plastic), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(3.000),
output: &HEPBridgeTile,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Steel), amount: crate::units::Kg(500.000)},
],
time: crate::units::Duration(60.000),
output: &HEPEngine,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(500.000)},
],
time: crate::units::Duration(60.000),
output: &HabitatModuleMedium,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(60.000),
output: &HabitatModuleSmall,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(30.000),
output: &HandSanitizer,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(2000.000)},
],
time: crate::units::Duration(30.000),
output: &Headquarters,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(10.000),
output: &HighEnergyParticleRedirector,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(10.000),
output: &HighEnergyParticleSpawner,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(200.000)},
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildingWood), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(10.000),
output: &HotTub,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Steel), amount: crate::units::Kg(500.000)},
],
time: crate::units::Duration(60.000),
output: &HydrogenEngineCluster,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(800.000)},
],
time: crate::units::Duration(120.000),
output: &HydrogenGenerator,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(30.000),
output: &HydroponicFarm,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(30.000),
output: &IceCooledFan,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(30.000),
output: &IceMachine,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Ice), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(120.000),
output: &IceSculpture,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(10.000),
output: &InsulatedGasConduit,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Plumbable), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(10.000),
output: &InsulatedLiquidConduit,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(30.000),
output: &InsulationTile,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(30.000),
output: &ItemPedestal,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(30.000),
output: &JetSuitLocker,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(30.000),
output: &JetSuitMarker,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(10.000),
output: &Juicer,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Steel), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(60.000),
output: &KeroseneEngineCluster,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(60.000),
output: &KeroseneEngineClusterSmall,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(30.000),
output: &Kiln,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(10.000),
output: &LadderBed,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(10.000),
output: &Ladder,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Plastic), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(10.000),
output: &LadderFast,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(30.000),
output: &LandingBeacon,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(800.000)},
],
time: crate::units::Duration(120.000),
output: &LaunchPad,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(30.000),
output: &LeadSuitLocker,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(30.000),
output: &LeadSuitMarker,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Steel), amount: crate::units::Kg(1000.000)},
],
time: crate::units::Duration(60.000),
output: &LiquidCargoBayCluster,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(30.000),
output: &LiquidCargoBaySmall,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(1200.000)},
],
time: crate::units::Duration(120.000),
output: &LiquidConditioner,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(3.000),
output: &LiquidConduitBridge,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Plumbable), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(3.000),
output: &LiquidConduit,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(10.000),
output: &LiquidConduitRadiant,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(10.000),
output: &LiquidFilter,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Steel), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(60.000),
output: &LiquidFuelTankCluster,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(30.000),
output: &LiquidHeater,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Plastic), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(10.000),
output: &LiquidLimitValve,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(10.000),
output: &LiquidLogicValve,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Plastic), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(60.000),
output: &LiquidMiniPump,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(60.000),
output: &LiquidPump,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(10.000),
output: &LiquidPumpingStation,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(120.000),
output: &LiquidReservoir,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(10.000),
output: &LiquidValve,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(30.000),
output: &LiquidVent,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(30.000),
output: &LogicAlarm,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(30.000),
output: &LogicClusterLocationSensor,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(30.000),
output: &LogicCounter,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(30.000),
output: &LogicCritterCountSensor,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Plastic), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(30.000),
output: &LogicDiseaseSensor,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(30.000),
output: &LogicDuplicantSensor,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(30.000),
output: &LogicElementSensorGas,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(30.000),
output: &LogicElementSensorLiquid,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(3.000),
output: &LogicGateAND,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(3.000),
output: &LogicGateOR,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(3.000),
output: &LogicGateXOR,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(3.000),
output: &LogicGateNOT,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(3.000),
output: &LogicGateBUFFER,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(3.000),
output: &LogicGateFILTER,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(3.000),
output: &LogicGateMultiplexer,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(3.000),
output: &LogicGateDemultiplexer,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(30.000),
output: &LogicHEPSensor,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(10.000),
output: &LogicHammer,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(30.000),
output: &LogicInterasteroidReceiver,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(30.000),
output: &LogicInterasteroidSender,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Transparent), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(30.000),
output: &LogicLightSensor,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(30.000),
output: &LogicMemory,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(30.000),
output: &LogicPowerRelay,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(30.000),
output: &LogicPressureSensorGas,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(30.000),
output: &LogicPressureSensorLiquid,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(30.000),
output: &LogicRadiationSensor,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(3.000),
output: &LogicRibbonBridge,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(10.000),
output: &LogicRibbon,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(30.000),
output: &LogicRibbonReader,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(30.000),
output: &LogicRibbonWriter,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(30.000),
output: &LogicSwitch,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(30.000),
output: &LogicTemperatureSensor,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(30.000),
output: &LogicTimeOfDaySensor,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(30.000),
output: &LogicTimerSensor,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(30.000),
output: &LogicWattageSensor,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(5.000)},
],
time: crate::units::Duration(3.000),
output: &LogicWireBridge,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(5.000)},
],
time: crate::units::Duration(3.000),
output: &LogicWire,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Steel), amount: crate::units::Kg(800.000)},
],
time: crate::units::Duration(480.000),
output: &LonelyMinionHouse,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(30.000),
output: &LonelyMailBox,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Plastic), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(10.000),
output: &LuxuryBed,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(30.000),
output: &ManualGenerator,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(800.000)},
],
time: crate::units::Duration(10.000),
output: &ManualHighEnergyParticleSpawner,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(60.000),
output: &ManualPressureDoor,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::PreciousRock), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(120.000),
output: &MarbleSculpture,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(10.000),
output: &MassageTable,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(800.000)},
],
time: crate::units::Duration(120.000),
output: &MassiveHeatSink,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(60.000),
output: &MechanicalSurfboard,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(10.000),
output: &MedicalCot,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(800.000)},
],
time: crate::units::Duration(120.000),
output: &MegaBrainTank,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(30.000),
output: &MeshTile,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(800.000)},
],
time: crate::units::Duration(60.000),
output: &MetalRefinery,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(120.000),
output: &MetalSculpture,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(30.000),
output: &MetalTile,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(800.000)},
],
time: crate::units::Duration(120.000),
output: &MethaneGenerator,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(30.000),
output: &MicrobeMusher,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(800.000)},
],
time: crate::units::Duration(120.000),
output: &MilkFatSeparator,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(120.000),
output: &MilkFeeder,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(30.000),
output: &MilkPress,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(400.000)},
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Plastic), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(60.000),
output: &MilkingStation,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(30.000),
output: &MineralDeoxidizer,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(30.000),
output: &MissileLauncher,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(800.000)},
],
time: crate::units::Duration(60.000),
output: &MissileFabricator,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(30.000),
output: &MissionControlCluster,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(60.000),
output: &ModularLaunchpadPortBridge,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(60.000),
output: &ModularLaunchpadPortGas,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(60.000),
output: &ModularLaunchpadPortGasUnloader,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(60.000),
output: &ModularLaunchpadPortLiquid,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(60.000),
output: &ModularLaunchpadPortLiquidUnloader,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(60.000),
output: &ModularLaunchpadPortSolid,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(60.000),
output: &ModularLaunchpadPortSolidUnloader,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Steel), amount: crate::units::Kg(7500.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Obsidian), amount: crate::units::Kg(2500.000)},
],
time: crate::units::Duration(60.000),
output: &MonumentBottom,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Ceramic), amount: crate::units::Kg(2500.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Polypropylene), amount: crate::units::Kg(2500.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Steel), amount: crate::units::Kg(5000.000)},
],
time: crate::units::Duration(60.000),
output: &MonumentMiddle,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Glass), amount: crate::units::Kg(2500.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Diamond), amount: crate::units::Kg(2500.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Steel), amount: crate::units::Kg(5000.000)},
],
time: crate::units::Duration(60.000),
output: &MonumentTop,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(800.000)},
],
time: crate::units::Duration(120.000),
output: &MorbRoverMaker,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(400.000)},
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Insulator), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(60.000),
output: &NoseconeBasic,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(400.000)},
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Plastic), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(60.000),
output: &NoseconeHarvest,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(800.000)},
],
time: crate::units::Duration(480.000),
output: &NuclearReactor,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(30.000),
output: &NuclearResearchCenter,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(10.000),
output: &ObjectDispenser,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(30.000),
output: &OilRefinery,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(120.000),
output: &OilWellCap,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(30.000),
output: &OrbitalCargoModule,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Plastic), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(120.000),
output: &OrbitalResearchCenter,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(30.000),
output: &OreScrubber,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(30.000),
output: &Outhouse,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Steel), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(60.000),
output: &OxidizerTankCluster,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Steel), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(60.000),
output: &OxidizerTankLiquidCluster,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(30.000),
output: &OxygenMaskLocker,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(30.000),
output: &OxygenMaskMarker,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(800.000)},
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Plastic), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(480.000),
output: &OxyliteRefinery,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(10.000),
output: &POIDoorInternal,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableAny), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(10.000),
output: &ParkSign,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(800.000)},
],
time: crate::units::Duration(480.000),
output: &PetroleumGenerator,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(10.000),
output: &Phonobox,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(30.000),
output: &PioneerModule,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Glass), amount: crate::units::Kg(100.000)},
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(10.000),
output: &PixelPack,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Farmable), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(3.000),
output: &PlanterBox,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Plastic), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(30.000),
output: &PlasticTile,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(30.000),
output: &Polymerizer,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(30.000),
output: &PowerControlStation,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(30.000),
output: &PowerTransformer,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(30.000),
output: &PowerTransformerSmall,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(60.000),
output: &PressureDoor,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(30.000),
output: &PropGravitasLabWall,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Glass), amount: crate::units::Kg(5.000)},
],
time: crate::units::Duration(30.000),
output: &PropGravitasLabWindow,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Glass), amount: crate::units::Kg(5.000)},
],
time: crate::units::Duration(30.000),
output: &PropGravitasLabWindowHorizontal,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(30.000),
output: &PropGravitasWall,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(10.000),
output: &RadiationLight,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(30.000),
output: &RailGun,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(10.000),
output: &RailGunPayloadOpener,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(30.000),
output: &RanchStation,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(10.000),
output: &RationBox,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(10.000),
output: &Refrigerator,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(30.000),
output: &ResearchCenter,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(30.000),
output: &ResetSkillsStation,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(800.000)},
],
time: crate::units::Duration(60.000),
output: &RockCrusher,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(60.000),
output: &RocketControlStation,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Transparent), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(30.000),
output: &RocketEnvelopeWindowTile,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(3.000),
output: &RocketInteriorGasInput,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(30.000),
output: &RocketInteriorGasInputPort,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(3.000),
output: &RocketInteriorGasOutput,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(30.000),
output: &RocketInteriorGasOutputPort,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(3.000),
output: &RocketInteriorLiquidInput,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(30.000),
output: &RocketInteriorLiquidInputPort,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(3.000),
output: &RocketInteriorLiquidOutput,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(30.000),
output: &RocketInteriorLiquidOutputPort,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(3.000),
output: &RocketInteriorPowerPlug,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(3.000),
output: &RocketInteriorSolidInput,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(3.000),
output: &RocketInteriorSolidOutput,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(30.000),
output: &RustDeoxidizer,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(100.000)},
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildingWood), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(60.000),
output: &Sauna,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Steel), amount: crate::units::Kg(350.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Polypropylene), amount: crate::units::Kg(1000.000)},
],
time: crate::units::Duration(120.000),
output: &ScannerModule,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(30.000),
output: &ScoutModule,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(120.000),
output: &Sculpture,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(10.000),
output: &ShearingStation,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(30.000),
output: &Shower,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(30.000),
output: &SludgePress,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(30.000),
output: &SmallOxidizerTank,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(60.000),
output: &SmallSculpture,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(10.000),
output: &SodaFountain,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Glass), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(120.000),
output: &SolarPanel,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Glass), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(30.000),
output: &SolarPanelModule,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Steel), amount: crate::units::Kg(1000.000)},
],
time: crate::units::Duration(60.000),
output: &CargoBayCluster,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(30.000),
output: &SolidCargoBaySmall,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(30.000),
output: &SolidConduitBridge,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(3.000),
output: &SolidConduit,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(60.000),
output: &SolidConduitInbox,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(30.000),
output: &SolidConduitOutbox,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Plastic), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(30.000),
output: &SolidConduitDiseaseSensor,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(30.000),
output: &SolidConduitElementSensor,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(30.000),
output: &SolidConduitTemperatureSensor,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(10.000),
output: &SolidFilter,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Plastic), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(10.000),
output: &SolidLimitValve,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(10.000),
output: &SolidLogicValve,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(10.000),
output: &SolidTransferArm,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(30.000),
output: &SolidVent,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(30.000),
output: &SpaceHeater,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(60.000),
output: &SpecialCargoBayCluster,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(30.000),
output: &SpiceGrinder,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(60.000),
output: &SteamEngineCluster,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(800.000)},
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Plastic), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(60.000),
output: &SteamTurbine2,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(10.000),
output: &StorageLocker,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(60.000),
output: &StorageLockerSmart,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(100.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Glass), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(30.000),
output: &StorageTile,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(30.000),
output: &SublimationStation,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(500.000)},
],
time: crate::units::Duration(30.000),
output: &SugarEngine,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(240.000),
output: &SuitFabricator,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(30.000),
output: &SuitLocker,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(30.000),
output: &SuitMarker,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(200.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Glass), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(60.000),
output: &SunLamp,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(800.000)},
],
time: crate::units::Duration(480.000),
output: &SupermaterialRefinery,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(75.000)},
],
time: crate::units::Duration(30.000),
output: &SweepBotStation,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(30.000),
output: &Switch,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(10.000),
output: &Telephone,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(2000.000)},
],
time: crate::units::Duration(30.000),
output: &TeleportalPad,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(800.000)},
],
time: crate::units::Duration(120.000),
output: &TemporalTearOpener,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableAny), amount: crate::units::Kg(800.000)},
],
time: crate::units::Duration(120.000),
output: &ThermalBlock,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(3.000),
output: &Tile,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Plastic), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(10.000),
output: &TravelTube,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(800.000)},
],
time: crate::units::Duration(120.000),
output: &TravelTubeEntrance,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Plastic), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(3.000),
output: &TravelTubeWallBridge,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Plastic), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(120.000),
output: &UnderwaterCritterCondo,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(800.000)},
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Plastic), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(480.000),
output: &UraniumCentrifuge,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Plastic), amount: crate::units::Kg(1200.000)},
],
time: crate::units::Duration(10.000),
output: &VerticalWindTunnel,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Plastic), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(30.000),
output: &WallToilet,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(10.000),
output: &WarpConduitReceiver,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(30.000),
output: &WarpConduitSender,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(30.000),
output: &WashBasin,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(30.000),
output: &WashSink,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::BuildableRaw), amount: crate::units::Kg(400.000)},
],
time: crate::units::Duration(10.000),
output: &WaterCooler,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(30.000),
output: &WaterPurifier,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(3.000),
output: &WireBridge,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(3.000),
output: &WireBridgeHighWattage,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(3.000),
output: &Wire,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(3.000),
output: &HighWattageWire,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(3.000),
output: &WireRefinedBridge,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(3.000),
output: &WireRefinedBridgeHighWattage,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(3.000),
output: &WireRefined,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::RefinedMetal), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(3.000),
output: &WireRefinedHighWattage,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(800.000)},
],
time: crate::units::Duration(120.000),
output: &WoodGasGenerator,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(10.000),
output: &CreatureAirTrap,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(10.000),
output: &Desalinator,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(10.000),
output: &CreatureGroundTrap,
}),
Recipe::Building(Building {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Tag(Tag::Metal), amount: crate::units::Kg(200.000)},
],
time: crate::units::Duration(10.000),
output: &WaterTrap,
}),
Recipe::Phase(Phase {
input: &Algae,
temp: crate::units::Temperature(398.150),
type_of: PhaseType::Transmutation,
output: &[
EntityPercent{entity: &Dirt, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &BleachStone,
temp: crate::units::Temperature(942.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &Chlorine, percent: crate::units::Percent(1.000)},
]
}),
Recipe::SublimateChunk(SublimateChunk {
input: &BleachStone,
pression_max: crate::units::Kg(1.800),
rate:0.000,
temp_min: crate::units::Temperature(238.550),
min_amount: crate::units::Kg(0.003),
power:0.500,
output: &ChlorineGas,
}),
Recipe::Phase(Phase {
input: &DirtyWater,
temp: crate::units::Temperature(252.500),
type_of: PhaseType::Freezing,
output: &[
EntityPercent{entity: &DirtyIce, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &DirtyWater,
temp: crate::units::Temperature(392.500),
type_of: PhaseType::Vaporization,
output: &[
EntityPercent{entity: &Steam, percent: crate::units::Percent(0.990)},
EntityPercent{entity: &Dirt, percent: crate::units::Percent(0.010)},
]
}),
Recipe::SublimateLiquid(SublimateLiquid {
input: &DirtyWater,
pression_max: crate::units::Kg(1.800),
offgas:0.001,
efficiency:  crate::units::Percent(1.000),
probability:  crate::units::Percent(0.010),
output: &ContaminatedOxygen,
}),
Recipe::SublimateChunk(SublimateChunk {
input: &DirtyWater,
pression_max: crate::units::Kg(1.800),
rate:0.000,
temp_min: crate::units::Temperature(90.190),
min_amount: crate::units::Kg(0.025),
power:1.000,
output: &ContaminatedOxygen,
}),
Recipe::Phase(Phase {
input: &NuclearWaste,
temp: crate::units::Temperature(300.000),
type_of: PhaseType::Freezing,
output: &[
EntityPercent{entity: &SolidNuclearWaste, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &NuclearWaste,
temp: crate::units::Temperature(800.000),
type_of: PhaseType::Vaporization,
output: &[
EntityPercent{entity: &Fallout, percent: crate::units::Percent(1.000)},
]
}),
Recipe::SublimateChunk(SublimateChunk {
input: &NuclearWaste,
pression_max: crate::units::Kg(1000.000),
rate:0.066,
temp_min: crate::units::Temperature(300.000),
min_amount: crate::units::Kg(6.600),
power:0.000,
output: &NuclearWaste,
}),
Recipe::Phase(Phase {
input: &OxyRock,
temp: crate::units::Temperature(1683.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &Magma, percent: crate::units::Percent(1.000)},
]
}),
Recipe::SublimateSolid(SublimateSolid {
input: &OxyRock,
pression_max: crate::units::Kg(1.800),
rate:0.400,
efficiency:  crate::units::Percent(0.500),
probability:  crate::units::Percent(1.000),
output: &Oxygen,
}),
Recipe::SublimateChunk(SublimateChunk {
input: &OxyRock,
pression_max: crate::units::Kg(1.800),
rate:0.010,
temp_min: crate::units::Temperature(90.190),
min_amount: crate::units::Kg(0.005),
power:0.700,
output: &Oxygen,
}),
Recipe::Phase(Phase {
input: &SlimeMold,
temp: crate::units::Temperature(398.150),
type_of: PhaseType::Transmutation,
output: &[
EntityPercent{entity: &Dirt, percent: crate::units::Percent(1.000)},
]
}),
Recipe::SublimateChunk(SublimateChunk {
input: &SlimeMold,
pression_max: crate::units::Kg(1.800),
rate:0.025,
temp_min: crate::units::Temperature(90.190),
min_amount: crate::units::Kg(0.125),
power:0.000,
output: &ContaminatedOxygen,
}),
Recipe::Phase(Phase {
input: &ToxicSand,
temp: crate::units::Temperature(1986.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &MoltenGlass, percent: crate::units::Percent(1.000)},
]
}),
Recipe::SublimateSolid(SublimateSolid {
input: &ToxicSand,
pression_max: crate::units::Kg(1.800),
rate:0.100,
efficiency:  crate::units::Percent(0.200),
probability:  crate::units::Percent(0.050),
output: &ContaminatedOxygen,
}),
Recipe::SublimateChunk(SublimateChunk {
input: &ToxicSand,
pression_max: crate::units::Kg(1.800),
rate:0.000,
temp_min: crate::units::Temperature(90.190),
min_amount: crate::units::Kg(0.050),
power:0.500,
output: &ContaminatedOxygen,
}),
Recipe::Phase(Phase {
input: &CrushedIce,
temp: crate::units::Temperature(272.500),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &Water, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Diamond,
temp: crate::units::Temperature(4200.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &MoltenCarbon, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Isoresin,
temp: crate::units::Temperature(473.150),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &Naphtha, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Sucrose,
temp: crate::units::Temperature(459.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &MoltenSucrose, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &MilkFat,
temp: crate::units::Temperature(433.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &Naphtha, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Niobium,
temp: crate::units::Temperature(2750.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &MoltenNiobium, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &MilkIce,
temp: crate::units::Temperature(256.650),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &Milk, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Cuprite,
temp: crate::units::Temperature(1357.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &MoltenCopper, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Copper,
temp: crate::units::Temperature(1357.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &MoltenCopper, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &SuperInsulator,
temp: crate::units::Temperature(3895.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &MoltenTungsten, percent: crate::units::Percent(0.850)},
EntityPercent{entity: &SourGas, percent: crate::units::Percent(0.150)},
]
}),
Recipe::Phase(Phase {
input: &BrineIce,
temp: crate::units::Temperature(256.650),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &Brine, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &SolidViscoGel,
temp: crate::units::Temperature(242.500),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &ViscoGel, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Ceramic,
temp: crate::units::Temperature(2123.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &Magma, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Cobaltite,
temp: crate::units::Temperature(1768.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &MoltenCobalt, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Fertilizer,
temp: crate::units::Temperature(398.150),
type_of: PhaseType::Transmutation,
output: &[
EntityPercent{entity: &Dirt, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &SolidCrudeOil,
temp: crate::units::Temperature(233.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &CrudeOil, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Wolframite,
temp: crate::units::Temperature(3200.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &MoltenTungsten, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Polypropylene,
temp: crate::units::Temperature(433.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &Naphtha, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &SolidNaphtha,
temp: crate::units::Temperature(223.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &Naphtha, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Tungsten,
temp: crate::units::Temperature(3695.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &MoltenTungsten, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &RefinedCarbon,
temp: crate::units::Temperature(4600.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &MoltenCarbon, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Steel,
temp: crate::units::Temperature(2700.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &MoltenSteel, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Phosphorite,
temp: crate::units::Temperature(517.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &LiquidPhosphorus, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &SolidHydrogen,
temp: crate::units::Temperature(14.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &LiquidHydrogen, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Lead,
temp: crate::units::Temperature(600.650),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &MoltenLead, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Sulfur,
temp: crate::units::Temperature(388.350),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &LiquidSulfur, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Lime,
temp: crate::units::Temperature(1330.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &Magma, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &SolidChlorine,
temp: crate::units::Temperature(172.170),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &Chlorine, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &SolidNuclearWaste,
temp: crate::units::Temperature(300.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &NuclearWaste, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Obsidian,
temp: crate::units::Temperature(3000.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &Magma, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &SolidPetroleum,
temp: crate::units::Temperature(216.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &Petroleum, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &SolidSuperCoolant,
temp: crate::units::Temperature(2.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &SuperCoolant, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &IgneousRock,
temp: crate::units::Temperature(1683.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &Magma, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &EnrichedUranium,
temp: crate::units::Temperature(1132.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &MoltenUranium, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Gold,
temp: crate::units::Temperature(1337.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &MoltenGold, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Rust,
temp: crate::units::Temperature(1808.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &MoltenIron, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Corium,
temp: crate::units::Temperature(900.000),
type_of: PhaseType::Sublimation,
output: &[
EntityPercent{entity: &Fallout, percent: crate::units::Percent(1.000)},
]
}),
Recipe::SublimateSolid(SublimateSolid {
input: &Corium,
pression_max: crate::units::Kg(1.800),
rate:0.400,
efficiency:  crate::units::Percent(0.500),
probability:  crate::units::Percent(1.000),
output: &NuclearWaste,
}),
Recipe::Phase(Phase {
input: &Phosphorus,
temp: crate::units::Temperature(317.300),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &LiquidPhosphorus, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Granite,
temp: crate::units::Temperature(942.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &Magma, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &SolidCarbonDioxide,
temp: crate::units::Temperature(216.600),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &LiquidCarbonDioxide, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Cobalt,
temp: crate::units::Temperature(1768.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &MoltenCobalt, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &UraniumOre,
temp: crate::units::Temperature(406.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &MoltenUranium, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &AluminumOre,
temp: crate::units::Temperature(1357.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &MoltenAluminum, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &SedimentaryRock,
temp: crate::units::Temperature(1200.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &Magma, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Fullerene,
temp: crate::units::Temperature(4200.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &MoltenCarbon, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &GoldAmalgam,
temp: crate::units::Temperature(1337.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &MoltenGold, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Salt,
temp: crate::units::Temperature(1073.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &MoltenSalt, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Sand,
temp: crate::units::Temperature(1986.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &MoltenGlass, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Snow,
temp: crate::units::Temperature(272.500),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &Water, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &SandStone,
temp: crate::units::Temperature(1200.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &Magma, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Glass,
temp: crate::units::Temperature(1700.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &MoltenGlass, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Clay,
temp: crate::units::Temperature(1200.000),
type_of: PhaseType::Transmutation,
output: &[
EntityPercent{entity: &Ceramic, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Ice,
temp: crate::units::Temperature(272.500),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &Water, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Graphite,
temp: crate::units::Temperature(550.000),
type_of: PhaseType::Transmutation,
output: &[
EntityPercent{entity: &RefinedCarbon, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &ToxicMud,
temp: crate::units::Temperature(372.840),
type_of: PhaseType::Sublimation,
output: &[
EntityPercent{entity: &Steam, percent: crate::units::Percent(0.600)},
EntityPercent{entity: &ToxicSand, percent: crate::units::Percent(0.400)},
]
}),
Recipe::SublimateSolid(SublimateSolid {
input: &ToxicMud,
pression_max: crate::units::Kg(1.800),
rate:0.100,
efficiency:  crate::units::Percent(0.200),
probability:  crate::units::Percent(0.050),
output: &ContaminatedOxygen,
}),
Recipe::Phase(Phase {
input: &Mud,
temp: crate::units::Temperature(372.840),
type_of: PhaseType::Sublimation,
output: &[
EntityPercent{entity: &Steam, percent: crate::units::Percent(0.600)},
EntityPercent{entity: &Dirt, percent: crate::units::Percent(0.400)},
]
}),
Recipe::Phase(Phase {
input: &Carbon,
temp: crate::units::Temperature(550.000),
type_of: PhaseType::Transmutation,
output: &[
EntityPercent{entity: &RefinedCarbon, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &SolidOxygen,
temp: crate::units::Temperature(54.360),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &LiquidOxygen, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &DepletedUranium,
temp: crate::units::Temperature(406.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &MoltenUranium, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Katairite,
temp: crate::units::Temperature(3695.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &MoltenTungsten, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &SolidMethane,
temp: crate::units::Temperature(90.550),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &LiquidMethane, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &HardPolypropylene,
temp: crate::units::Temperature(2100.000),
type_of: PhaseType::Sublimation,
output: &[
EntityPercent{entity: &SourGas, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &MaficRock,
temp: crate::units::Temperature(1683.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &Magma, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Iron,
temp: crate::units::Temperature(1808.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &MoltenIron, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Regolith,
temp: crate::units::Temperature(1683.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &Magma, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &SolidResin,
temp: crate::units::Temperature(293.150),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &Resin, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &TempConductorSolid,
temp: crate::units::Temperature(2950.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &MoltenNiobium, percent: crate::units::Percent(0.050)},
EntityPercent{entity: &Tungsten, percent: crate::units::Percent(0.950)},
]
}),
Recipe::Phase(Phase {
input: &IronOre,
temp: crate::units::Temperature(1808.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &MoltenIron, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Dirt,
temp: crate::units::Temperature(600.000),
type_of: PhaseType::Transmutation,
output: &[
EntityPercent{entity: &Sand, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &DirtyIce,
temp: crate::units::Temperature(252.500),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &DirtyWater, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Fossil,
temp: crate::units::Temperature(1612.000),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &Magma, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &SolidEthanol,
temp: crate::units::Temperature(159.100),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &Ethanol, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Aluminum,
temp: crate::units::Temperature(933.450),
type_of: PhaseType::Melting,
output: &[
EntityPercent{entity: &MoltenAluminum, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &LiquidOxygen,
temp: crate::units::Temperature(54.360),
type_of: PhaseType::Freezing,
output: &[
EntityPercent{entity: &SolidOxygen, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &LiquidOxygen,
temp: crate::units::Temperature(90.190),
type_of: PhaseType::Vaporization,
output: &[
EntityPercent{entity: &Oxygen, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &ViscoGel,
temp: crate::units::Temperature(242.500),
type_of: PhaseType::Freezing,
output: &[
EntityPercent{entity: &SolidViscoGel, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &ViscoGel,
temp: crate::units::Temperature(753.000),
type_of: PhaseType::Vaporization,
output: &[
EntityPercent{entity: &Naphtha, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &MoltenAluminum,
temp: crate::units::Temperature(933.450),
type_of: PhaseType::Freezing,
output: &[
EntityPercent{entity: &Aluminum, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &MoltenAluminum,
temp: crate::units::Temperature(2743.150),
type_of: PhaseType::Vaporization,
output: &[
EntityPercent{entity: &AluminumGas, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &MoltenLead,
temp: crate::units::Temperature(600.650),
type_of: PhaseType::Freezing,
output: &[
EntityPercent{entity: &Lead, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &MoltenLead,
temp: crate::units::Temperature(2022.150),
type_of: PhaseType::Vaporization,
output: &[
EntityPercent{entity: &LeadGas, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &LiquidCarbonDioxide,
temp: crate::units::Temperature(216.600),
type_of: PhaseType::Freezing,
output: &[
EntityPercent{entity: &SolidCarbonDioxide, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &LiquidCarbonDioxide,
temp: crate::units::Temperature(225.000),
type_of: PhaseType::Vaporization,
output: &[
EntityPercent{entity: &CarbonDioxide, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &CrudeOil,
temp: crate::units::Temperature(233.000),
type_of: PhaseType::Freezing,
output: &[
EntityPercent{entity: &SolidCrudeOil, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &CrudeOil,
temp: crate::units::Temperature(673.000),
type_of: PhaseType::Vaporization,
output: &[
EntityPercent{entity: &Petroleum, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &MoltenGlass,
temp: crate::units::Temperature(1400.000),
type_of: PhaseType::Freezing,
output: &[
EntityPercent{entity: &Glass, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &MoltenGlass,
temp: crate::units::Temperature(2630.000),
type_of: PhaseType::Vaporization,
output: &[
EntityPercent{entity: &RockGas, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &LiquidSulfur,
temp: crate::units::Temperature(388.350),
type_of: PhaseType::Freezing,
output: &[
EntityPercent{entity: &Sulfur, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &LiquidSulfur,
temp: crate::units::Temperature(610.150),
type_of: PhaseType::Vaporization,
output: &[
EntityPercent{entity: &SulfurGas, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &MoltenGold,
temp: crate::units::Temperature(1337.000),
type_of: PhaseType::Freezing,
output: &[
EntityPercent{entity: &Gold, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &MoltenGold,
temp: crate::units::Temperature(3129.000),
type_of: PhaseType::Vaporization,
output: &[
EntityPercent{entity: &GoldGas, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Magma,
temp: crate::units::Temperature(1683.000),
type_of: PhaseType::Freezing,
output: &[
EntityPercent{entity: &IgneousRock, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Magma,
temp: crate::units::Temperature(2630.000),
type_of: PhaseType::Vaporization,
output: &[
EntityPercent{entity: &RockGas, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Chlorine,
temp: crate::units::Temperature(172.170),
type_of: PhaseType::Freezing,
output: &[
EntityPercent{entity: &SolidChlorine, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Chlorine,
temp: crate::units::Temperature(238.550),
type_of: PhaseType::Vaporization,
output: &[
EntityPercent{entity: &ChlorineGas, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &LiquidHydrogen,
temp: crate::units::Temperature(14.000),
type_of: PhaseType::Freezing,
output: &[
EntityPercent{entity: &SolidHydrogen, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &LiquidHydrogen,
temp: crate::units::Temperature(21.000),
type_of: PhaseType::Vaporization,
output: &[
EntityPercent{entity: &Hydrogen, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Resin,
temp: crate::units::Temperature(293.150),
type_of: PhaseType::Freezing,
output: &[
EntityPercent{entity: &SolidResin, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Resin,
temp: crate::units::Temperature(398.150),
type_of: PhaseType::Vaporization,
output: &[
EntityPercent{entity: &Steam, percent: crate::units::Percent(0.750)},
EntityPercent{entity: &Isoresin, percent: crate::units::Percent(0.250)},
]
}),
Recipe::Phase(Phase {
input: &MoltenTungsten,
temp: crate::units::Temperature(3695.000),
type_of: PhaseType::Freezing,
output: &[
EntityPercent{entity: &Tungsten, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &MoltenTungsten,
temp: crate::units::Temperature(6203.000),
type_of: PhaseType::Vaporization,
output: &[
EntityPercent{entity: &TungstenGas, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Petroleum,
temp: crate::units::Temperature(216.000),
type_of: PhaseType::Freezing,
output: &[
EntityPercent{entity: &SolidPetroleum, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Petroleum,
temp: crate::units::Temperature(812.000),
type_of: PhaseType::Vaporization,
output: &[
EntityPercent{entity: &SourGas, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &MoltenSalt,
temp: crate::units::Temperature(1073.000),
type_of: PhaseType::Freezing,
output: &[
EntityPercent{entity: &Salt, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &MoltenSalt,
temp: crate::units::Temperature(1738.000),
type_of: PhaseType::Vaporization,
output: &[
EntityPercent{entity: &SaltGas, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &MoltenCobalt,
temp: crate::units::Temperature(1768.000),
type_of: PhaseType::Freezing,
output: &[
EntityPercent{entity: &Cobalt, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &MoltenCobalt,
temp: crate::units::Temperature(3200.000),
type_of: PhaseType::Vaporization,
output: &[
EntityPercent{entity: &CobaltGas, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Brine,
temp: crate::units::Temperature(250.650),
type_of: PhaseType::Freezing,
output: &[
EntityPercent{entity: &BrineIce, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Brine,
temp: crate::units::Temperature(375.900),
type_of: PhaseType::Vaporization,
output: &[
EntityPercent{entity: &Steam, percent: crate::units::Percent(0.700)},
EntityPercent{entity: &Salt, percent: crate::units::Percent(0.300)},
]
}),
Recipe::Phase(Phase {
input: &SuperCoolant,
temp: crate::units::Temperature(2.000),
type_of: PhaseType::Freezing,
output: &[
EntityPercent{entity: &SolidSuperCoolant, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &SuperCoolant,
temp: crate::units::Temperature(710.000),
type_of: PhaseType::Vaporization,
output: &[
EntityPercent{entity: &SuperCoolantGas, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Ethanol,
temp: crate::units::Temperature(159.100),
type_of: PhaseType::Freezing,
output: &[
EntityPercent{entity: &SolidEthanol, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Ethanol,
temp: crate::units::Temperature(351.500),
type_of: PhaseType::Vaporization,
output: &[
EntityPercent{entity: &EthanolGas, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Milk,
temp: crate::units::Temperature(256.650),
type_of: PhaseType::Freezing,
output: &[
EntityPercent{entity: &MilkIce, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Milk,
temp: crate::units::Temperature(353.150),
type_of: PhaseType::Vaporization,
output: &[
EntityPercent{entity: &Brine, percent: crate::units::Percent(0.900)},
EntityPercent{entity: &MilkFat, percent: crate::units::Percent(0.100)},
]
}),
Recipe::Phase(Phase {
input: &LiquidMethane,
temp: crate::units::Temperature(90.550),
type_of: PhaseType::Freezing,
output: &[
EntityPercent{entity: &SolidMethane, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &LiquidMethane,
temp: crate::units::Temperature(111.650),
type_of: PhaseType::Vaporization,
output: &[
EntityPercent{entity: &Methane, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &MoltenIron,
temp: crate::units::Temperature(1808.000),
type_of: PhaseType::Freezing,
output: &[
EntityPercent{entity: &Iron, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &MoltenIron,
temp: crate::units::Temperature(3023.000),
type_of: PhaseType::Vaporization,
output: &[
EntityPercent{entity: &IronGas, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &MoltenCarbon,
temp: crate::units::Temperature(3825.000),
type_of: PhaseType::Freezing,
output: &[
EntityPercent{entity: &RefinedCarbon, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &MoltenCarbon,
temp: crate::units::Temperature(5100.000),
type_of: PhaseType::Vaporization,
output: &[
EntityPercent{entity: &CarbonGas, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Naphtha,
temp: crate::units::Temperature(223.000),
type_of: PhaseType::Freezing,
output: &[
EntityPercent{entity: &SolidNaphtha, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Naphtha,
temp: crate::units::Temperature(812.000),
type_of: PhaseType::Vaporization,
output: &[
EntityPercent{entity: &SourGas, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &MoltenSucrose,
temp: crate::units::Temperature(459.000),
type_of: PhaseType::Freezing,
output: &[
EntityPercent{entity: &Sucrose, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &MoltenSucrose,
temp: crate::units::Temperature(503.150),
type_of: PhaseType::Vaporization,
output: &[
EntityPercent{entity: &CarbonDioxide, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &LiquidPhosphorus,
temp: crate::units::Temperature(317.300),
type_of: PhaseType::Freezing,
output: &[
EntityPercent{entity: &Phosphorus, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &LiquidPhosphorus,
temp: crate::units::Temperature(553.600),
type_of: PhaseType::Vaporization,
output: &[
EntityPercent{entity: &PhosphorusGas, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &MoltenSteel,
temp: crate::units::Temperature(1357.000),
type_of: PhaseType::Freezing,
output: &[
EntityPercent{entity: &Steel, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &MoltenSteel,
temp: crate::units::Temperature(4100.000),
type_of: PhaseType::Vaporization,
output: &[
EntityPercent{entity: &SteelGas, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &MoltenNiobium,
temp: crate::units::Temperature(2750.000),
type_of: PhaseType::Freezing,
output: &[
EntityPercent{entity: &Niobium, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &MoltenNiobium,
temp: crate::units::Temperature(5017.000),
type_of: PhaseType::Vaporization,
output: &[
EntityPercent{entity: &NiobiumGas, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Water,
temp: crate::units::Temperature(272.500),
type_of: PhaseType::Freezing,
output: &[
EntityPercent{entity: &Ice, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Water,
temp: crate::units::Temperature(372.500),
type_of: PhaseType::Vaporization,
output: &[
EntityPercent{entity: &Steam, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &SaltWater,
temp: crate::units::Temperature(265.650),
type_of: PhaseType::Freezing,
output: &[
EntityPercent{entity: &Brine, percent: crate::units::Percent(0.230)},
EntityPercent{entity: &Ice, percent: crate::units::Percent(0.770)},
]
}),
Recipe::Phase(Phase {
input: &SaltWater,
temp: crate::units::Temperature(372.840),
type_of: PhaseType::Vaporization,
output: &[
EntityPercent{entity: &Steam, percent: crate::units::Percent(0.930)},
EntityPercent{entity: &Salt, percent: crate::units::Percent(0.070)},
]
}),
Recipe::Phase(Phase {
input: &MoltenUranium,
temp: crate::units::Temperature(406.000),
type_of: PhaseType::Freezing,
output: &[
EntityPercent{entity: &DepletedUranium, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &MoltenUranium,
temp: crate::units::Temperature(4405.000),
type_of: PhaseType::Vaporization,
output: &[
EntityPercent{entity: &RockGas, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &MoltenCopper,
temp: crate::units::Temperature(1357.000),
type_of: PhaseType::Freezing,
output: &[
EntityPercent{entity: &Copper, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &MoltenCopper,
temp: crate::units::Temperature(2834.000),
type_of: PhaseType::Vaporization,
output: &[
EntityPercent{entity: &CopperGas, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &SulfurGas,
temp: crate::units::Temperature(610.150),
type_of: PhaseType::Condensation,
output: &[
EntityPercent{entity: &LiquidSulfur, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &SaltGas,
temp: crate::units::Temperature(1738.000),
type_of: PhaseType::Condensation,
output: &[
EntityPercent{entity: &MoltenSalt, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &NiobiumGas,
temp: crate::units::Temperature(5017.000),
type_of: PhaseType::Condensation,
output: &[
EntityPercent{entity: &MoltenNiobium, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Oxygen,
temp: crate::units::Temperature(90.190),
type_of: PhaseType::Condensation,
output: &[
EntityPercent{entity: &LiquidOxygen, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &CobaltGas,
temp: crate::units::Temperature(3200.000),
type_of: PhaseType::Condensation,
output: &[
EntityPercent{entity: &MoltenCobalt, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &SteelGas,
temp: crate::units::Temperature(4100.000),
type_of: PhaseType::Condensation,
output: &[
EntityPercent{entity: &MoltenSteel, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &ChlorineGas,
temp: crate::units::Temperature(238.550),
type_of: PhaseType::Condensation,
output: &[
EntityPercent{entity: &Chlorine, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Hydrogen,
temp: crate::units::Temperature(21.000),
type_of: PhaseType::Condensation,
output: &[
EntityPercent{entity: &LiquidHydrogen, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &SourGas,
temp: crate::units::Temperature(111.650),
type_of: PhaseType::Condensation,
output: &[
EntityPercent{entity: &LiquidMethane, percent: crate::units::Percent(0.670)},
EntityPercent{entity: &Sulfur, percent: crate::units::Percent(0.330)},
]
}),
Recipe::Phase(Phase {
input: &Steam,
temp: crate::units::Temperature(372.500),
type_of: PhaseType::Condensation,
output: &[
EntityPercent{entity: &Water, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Methane,
temp: crate::units::Temperature(111.650),
type_of: PhaseType::Condensation,
output: &[
EntityPercent{entity: &LiquidMethane, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &GoldGas,
temp: crate::units::Temperature(3129.000),
type_of: PhaseType::Condensation,
output: &[
EntityPercent{entity: &MoltenGold, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &EthanolGas,
temp: crate::units::Temperature(351.500),
type_of: PhaseType::Condensation,
output: &[
EntityPercent{entity: &Ethanol, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &RockGas,
temp: crate::units::Temperature(2630.000),
type_of: PhaseType::Condensation,
output: &[
EntityPercent{entity: &Magma, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &CarbonGas,
temp: crate::units::Temperature(5100.000),
type_of: PhaseType::Condensation,
output: &[
EntityPercent{entity: &MoltenCarbon, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &SuperCoolantGas,
temp: crate::units::Temperature(710.000),
type_of: PhaseType::Condensation,
output: &[
EntityPercent{entity: &SuperCoolant, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &AluminumGas,
temp: crate::units::Temperature(2743.150),
type_of: PhaseType::Condensation,
output: &[
EntityPercent{entity: &MoltenAluminum, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &TungstenGas,
temp: crate::units::Temperature(6203.000),
type_of: PhaseType::Condensation,
output: &[
EntityPercent{entity: &MoltenTungsten, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &ContaminatedOxygen,
temp: crate::units::Temperature(90.190),
type_of: PhaseType::Condensation,
output: &[
EntityPercent{entity: &LiquidOxygen, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &LeadGas,
temp: crate::units::Temperature(2022.150),
type_of: PhaseType::Condensation,
output: &[
EntityPercent{entity: &MoltenLead, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &Fallout,
temp: crate::units::Temperature(340.000),
type_of: PhaseType::Condensation,
output: &[
EntityPercent{entity: &NuclearWaste, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &IronGas,
temp: crate::units::Temperature(3023.000),
type_of: PhaseType::Condensation,
output: &[
EntityPercent{entity: &MoltenIron, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &PhosphorusGas,
temp: crate::units::Temperature(553.600),
type_of: PhaseType::Condensation,
output: &[
EntityPercent{entity: &LiquidPhosphorus, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &CarbonDioxide,
temp: crate::units::Temperature(225.000),
type_of: PhaseType::Condensation,
output: &[
EntityPercent{entity: &LiquidCarbonDioxide, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Phase(Phase {
input: &CopperGas,
temp: crate::units::Temperature(2834.000),
type_of: PhaseType::Condensation,
output: &[
EntityPercent{entity: &MoltenCopper, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Carbon), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(50.000),
temperature: crate::units::Temperature(2.000),
converter: &Apothecary,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&BasicBooster), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&SpiceNut), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(100.000),
temperature: crate::units::Temperature(2.000),
converter: &Apothecary,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&IntermediateBooster), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Carbon), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(50.000),
temperature: crate::units::Temperature(2.000),
converter: &Apothecary,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&BasicRadPill), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Carbon), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Water), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(50.000),
temperature: crate::units::Temperature(2.000),
converter: &Apothecary,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&BasicCure), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&PrickleFlowerSeed), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Dirt), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(100.000),
temperature: crate::units::Temperature(2.000),
converter: &Apothecary,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Antihistamine), amount: crate::units::Kg(10.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&SwampLilyFlower), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Phosphorite), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(100.000),
temperature: crate::units::Temperature(2.000),
converter: &Apothecary,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&IntermediateCure), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Steel), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&LightBugOrangeEgg), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(200.000),
temperature: crate::units::Temperature(2.000),
converter: &Apothecary,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&AdvancedCure), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Salt), amount: crate::units::Kg(30.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Gold), amount: crate::units::Kg(0.500)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &Chlorinator,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&BleachStone), amount: crate::units::Kg(10.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Sand), amount: crate::units::Kg(20.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Funky_Vest), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&BasicFabric), amount: crate::units::Kg(3.000)},
],
time: crate::units::Duration(180.000),
temperature: crate::units::Temperature(2.000),
converter: &ClothingAlterationStation,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&CustomClothing), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Funky_Vest), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&BasicFabric), amount: crate::units::Kg(3.000)},
],
time: crate::units::Duration(180.000),
temperature: crate::units::Temperature(2.000),
converter: &ClothingAlterationStation,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&CustomClothing), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Funky_Vest), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&BasicFabric), amount: crate::units::Kg(3.000)},
],
time: crate::units::Duration(180.000),
temperature: crate::units::Temperature(2.000),
converter: &ClothingAlterationStation,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&CustomClothing), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Funky_Vest), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&BasicFabric), amount: crate::units::Kg(3.000)},
],
time: crate::units::Duration(180.000),
temperature: crate::units::Temperature(2.000),
converter: &ClothingAlterationStation,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&CustomClothing), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Funky_Vest), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&BasicFabric), amount: crate::units::Kg(3.000)},
],
time: crate::units::Duration(180.000),
temperature: crate::units::Temperature(2.000),
converter: &ClothingAlterationStation,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&CustomClothing), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Funky_Vest), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&BasicFabric), amount: crate::units::Kg(3.000)},
],
time: crate::units::Duration(180.000),
temperature: crate::units::Temperature(2.000),
converter: &ClothingAlterationStation,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&CustomClothing), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Funky_Vest), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&BasicFabric), amount: crate::units::Kg(3.000)},
],
time: crate::units::Duration(180.000),
temperature: crate::units::Temperature(2.000),
converter: &ClothingAlterationStation,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&CustomClothing), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Funky_Vest), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&BasicFabric), amount: crate::units::Kg(3.000)},
],
time: crate::units::Duration(180.000),
temperature: crate::units::Temperature(2.000),
converter: &ClothingAlterationStation,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&CustomClothing), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Funky_Vest), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&BasicFabric), amount: crate::units::Kg(3.000)},
],
time: crate::units::Duration(180.000),
temperature: crate::units::Temperature(2.000),
converter: &ClothingAlterationStation,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&CustomClothing), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Funky_Vest), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&BasicFabric), amount: crate::units::Kg(3.000)},
],
time: crate::units::Duration(180.000),
temperature: crate::units::Temperature(2.000),
converter: &ClothingAlterationStation,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&CustomClothing), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Funky_Vest), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&BasicFabric), amount: crate::units::Kg(3.000)},
],
time: crate::units::Duration(180.000),
temperature: crate::units::Temperature(2.000),
converter: &ClothingAlterationStation,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&CustomClothing), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Funky_Vest), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&BasicFabric), amount: crate::units::Kg(3.000)},
],
time: crate::units::Duration(180.000),
temperature: crate::units::Temperature(2.000),
converter: &ClothingAlterationStation,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&CustomClothing), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&BasicFabric), amount: crate::units::Kg(4.000)},
],
time: crate::units::Duration(180.000),
temperature: crate::units::Temperature(2.000),
converter: &ClothingFabricator,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Cool_Vest), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&BasicFabric), amount: crate::units::Kg(4.000)},
],
time: crate::units::Duration(180.000),
temperature: crate::units::Temperature(2.000),
converter: &ClothingFabricator,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Funky_Vest), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&BasicFabric), amount: crate::units::Kg(4.000)},
],
time: crate::units::Duration(180.000),
temperature: crate::units::Temperature(2.000),
converter: &ClothingFabricator,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Warm_Vest), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&MushBar), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(50.000),
temperature: crate::units::Temperature(2.000),
converter: &CookingStation,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&FriedMushBar), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RawEgg), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(50.000),
temperature: crate::units::Temperature(2.000),
converter: &CookingStation,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&CookedEgg), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Mushroom), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(50.000),
temperature: crate::units::Temperature(2.000),
converter: &CookingStation,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&FriedMushroom), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&PrickleFruit), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(50.000),
temperature: crate::units::Temperature(2.000),
converter: &CookingStation,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&GrilledPrickleFruit), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RawEgg), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&ColdWheatSeed), amount: crate::units::Kg(2.000)},
],
time: crate::units::Duration(50.000),
temperature: crate::units::Temperature(2.000),
converter: &CookingStation,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Pancakes), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&SwampFruit), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(50.000),
temperature: crate::units::Temperature(2.000),
converter: &CookingStation,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&SwampDelights), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&WormBasicFruit), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(50.000),
temperature: crate::units::Temperature(2.000),
converter: &CookingStation,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&WormBasicFood), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&WormSuperFruit), amount: crate::units::Kg(8.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Sucrose), amount: crate::units::Kg(4.000)},
],
time: crate::units::Duration(50.000),
temperature: crate::units::Temperature(2.000),
converter: &CookingStation,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&WormSuperFood), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&BasicPlantFood), amount: crate::units::Kg(3.000)},
],
time: crate::units::Duration(30.000),
temperature: crate::units::Temperature(2.000),
converter: &CookingStation,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&PickledMeal), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Meat), amount: crate::units::Kg(2.000)},
],
time: crate::units::Duration(50.000),
temperature: crate::units::Temperature(2.000),
converter: &CookingStation,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&CookedMeat), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&FishMeat), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(50.000),
temperature: crate::units::Temperature(2.000),
converter: &CookingStation,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&CookedFish), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&ShellfishMeat), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(50.000),
temperature: crate::units::Temperature(2.000),
converter: &CookingStation,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&CookedFish), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&ColdWheatSeed), amount: crate::units::Kg(3.000)},
],
time: crate::units::Duration(50.000),
temperature: crate::units::Temperature(2.000),
converter: &CookingStation,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&ColdWheatBread), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&AluminumOre), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(20.000),
temperature: crate::units::Temperature(2.000),
converter: &CraftingTable,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Oxygen_Mask), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Cobaltite), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(20.000),
temperature: crate::units::Temperature(2.000),
converter: &CraftingTable,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Oxygen_Mask), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Cuprite), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(20.000),
temperature: crate::units::Temperature(2.000),
converter: &CraftingTable,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Oxygen_Mask), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&IronOre), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(20.000),
temperature: crate::units::Temperature(2.000),
converter: &CraftingTable,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Oxygen_Mask), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Worn_Oxygen_Mask), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(20.000),
temperature: crate::units::Temperature(2.000),
converter: &CraftingTable,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Oxygen_Mask), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RefinedCarbon), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(80.000),
temperature: crate::units::Temperature(2.000),
converter: &DiamondPress,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Diamond), amount: crate::units::Kg(100.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&CrabEgg), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(5.000),
temperature: crate::units::Temperature(2.000),
converter: &EggCracker,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RawEgg), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&EggShell), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&CrabFreshWaterEgg), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(5.000),
temperature: crate::units::Temperature(2.000),
converter: &EggCracker,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RawEgg), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&EggShell), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&CrabWoodEgg), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(5.000),
temperature: crate::units::Temperature(2.000),
converter: &EggCracker,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RawEgg), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&EggShell), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&DivergentBeetleEgg), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(5.000),
temperature: crate::units::Temperature(2.000),
converter: &EggCracker,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RawEgg), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&EggShell), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&DivergentWormEgg), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(5.000),
temperature: crate::units::Temperature(2.000),
converter: &EggCracker,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RawEgg), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&EggShell), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&DreckoEgg), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(5.000),
temperature: crate::units::Temperature(2.000),
converter: &EggCracker,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RawEgg), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&EggShell), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&DreckoPlasticEgg), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(5.000),
temperature: crate::units::Temperature(2.000),
converter: &EggCracker,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RawEgg), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&EggShell), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&HatchEgg), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(5.000),
temperature: crate::units::Temperature(2.000),
converter: &EggCracker,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RawEgg), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&EggShell), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&HatchHardEgg), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(5.000),
temperature: crate::units::Temperature(2.000),
converter: &EggCracker,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RawEgg), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&EggShell), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&HatchMetalEgg), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(5.000),
temperature: crate::units::Temperature(2.000),
converter: &EggCracker,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RawEgg), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&EggShell), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&HatchVeggieEgg), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(5.000),
temperature: crate::units::Temperature(2.000),
converter: &EggCracker,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RawEgg), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&EggShell), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&LightBugBlackEgg), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(5.000),
temperature: crate::units::Temperature(2.000),
converter: &EggCracker,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RawEgg), amount: crate::units::Kg(0.100)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&EggShell), amount: crate::units::Kg(0.100)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&LightBugBlueEgg), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(5.000),
temperature: crate::units::Temperature(2.000),
converter: &EggCracker,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RawEgg), amount: crate::units::Kg(0.100)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&EggShell), amount: crate::units::Kg(0.100)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&LightBugCrystalEgg), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(5.000),
temperature: crate::units::Temperature(2.000),
converter: &EggCracker,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RawEgg), amount: crate::units::Kg(0.100)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&EggShell), amount: crate::units::Kg(0.100)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&LightBugEgg), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(5.000),
temperature: crate::units::Temperature(2.000),
converter: &EggCracker,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RawEgg), amount: crate::units::Kg(0.100)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&EggShell), amount: crate::units::Kg(0.100)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&LightBugOrangeEgg), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(5.000),
temperature: crate::units::Temperature(2.000),
converter: &EggCracker,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RawEgg), amount: crate::units::Kg(0.100)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&EggShell), amount: crate::units::Kg(0.100)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&LightBugPinkEgg), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(5.000),
temperature: crate::units::Temperature(2.000),
converter: &EggCracker,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RawEgg), amount: crate::units::Kg(0.100)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&EggShell), amount: crate::units::Kg(0.100)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&LightBugPurpleEgg), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(5.000),
temperature: crate::units::Temperature(2.000),
converter: &EggCracker,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RawEgg), amount: crate::units::Kg(0.100)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&EggShell), amount: crate::units::Kg(0.100)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&MoleDelicacyEgg), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(5.000),
temperature: crate::units::Temperature(2.000),
converter: &EggCracker,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RawEgg), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&EggShell), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&MoleEgg), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(5.000),
temperature: crate::units::Temperature(2.000),
converter: &EggCracker,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RawEgg), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&EggShell), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&OilfloaterDecorEgg), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(5.000),
temperature: crate::units::Temperature(2.000),
converter: &EggCracker,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RawEgg), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&EggShell), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&OilfloaterEgg), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(5.000),
temperature: crate::units::Temperature(2.000),
converter: &EggCracker,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RawEgg), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&EggShell), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&OilfloaterHighTempEgg), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(5.000),
temperature: crate::units::Temperature(2.000),
converter: &EggCracker,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RawEgg), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&EggShell), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&PacuCleanerEgg), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(5.000),
temperature: crate::units::Temperature(2.000),
converter: &EggCracker,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RawEgg), amount: crate::units::Kg(2.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&EggShell), amount: crate::units::Kg(2.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&PacuEgg), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(5.000),
temperature: crate::units::Temperature(2.000),
converter: &EggCracker,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RawEgg), amount: crate::units::Kg(2.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&EggShell), amount: crate::units::Kg(2.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&PacuTropicalEgg), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(5.000),
temperature: crate::units::Temperature(2.000),
converter: &EggCracker,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RawEgg), amount: crate::units::Kg(2.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&EggShell), amount: crate::units::Kg(2.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&PuftAlphaEgg), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(5.000),
temperature: crate::units::Temperature(2.000),
converter: &EggCracker,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RawEgg), amount: crate::units::Kg(0.250)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&EggShell), amount: crate::units::Kg(0.250)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&PuftBleachstoneEgg), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(5.000),
temperature: crate::units::Temperature(2.000),
converter: &EggCracker,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RawEgg), amount: crate::units::Kg(0.250)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&EggShell), amount: crate::units::Kg(0.250)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&PuftEgg), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(5.000),
temperature: crate::units::Temperature(2.000),
converter: &EggCracker,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RawEgg), amount: crate::units::Kg(0.250)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&EggShell), amount: crate::units::Kg(0.250)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&PuftOxyliteEgg), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(5.000),
temperature: crate::units::Temperature(2.000),
converter: &EggCracker,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RawEgg), amount: crate::units::Kg(0.250)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&EggShell), amount: crate::units::Kg(0.250)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&SquirrelEgg), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(5.000),
temperature: crate::units::Temperature(2.000),
converter: &EggCracker,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RawEgg), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&EggShell), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&SquirrelHugEgg), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(5.000),
temperature: crate::units::Temperature(2.000),
converter: &EggCracker,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RawEgg), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&EggShell), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&StaterpillarEgg), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(5.000),
temperature: crate::units::Temperature(2.000),
converter: &EggCracker,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RawEgg), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&EggShell), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&StaterpillarGasEgg), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(5.000),
temperature: crate::units::Temperature(2.000),
converter: &EggCracker,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RawEgg), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&EggShell), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&StaterpillarLiquidEgg), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(5.000),
temperature: crate::units::Temperature(2.000),
converter: &EggCracker,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RawEgg), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&EggShell), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Salsa), amount: crate::units::Kg(1.364)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Polypropylene), amount: crate::units::Kg(12.000)},
],
time: crate::units::Duration(250.000),
temperature: crate::units::Temperature(2.000),
converter: &FoodDehydrator,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&DehydratedSalsa), amount: crate::units::Kg(6.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Water), amount: crate::units::Kg(6.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&MushroomWrap), amount: crate::units::Kg(1.250)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Polypropylene), amount: crate::units::Kg(12.000)},
],
time: crate::units::Duration(250.000),
temperature: crate::units::Temperature(2.000),
converter: &FoodDehydrator,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&DehydratedMushroomWrap), amount: crate::units::Kg(6.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Water), amount: crate::units::Kg(6.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&SurfAndTurf), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Polypropylene), amount: crate::units::Kg(12.000)},
],
time: crate::units::Duration(250.000),
temperature: crate::units::Temperature(2.000),
converter: &FoodDehydrator,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&DehydratedSurfAndTurf), amount: crate::units::Kg(6.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Water), amount: crate::units::Kg(6.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&SpiceBread), amount: crate::units::Kg(1.500)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Polypropylene), amount: crate::units::Kg(12.000)},
],
time: crate::units::Duration(250.000),
temperature: crate::units::Temperature(2.000),
converter: &FoodDehydrator,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&DehydratedSpiceBread), amount: crate::units::Kg(6.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Water), amount: crate::units::Kg(6.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Quiche), amount: crate::units::Kg(0.938)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Polypropylene), amount: crate::units::Kg(12.000)},
],
time: crate::units::Duration(250.000),
temperature: crate::units::Temperature(2.000),
converter: &FoodDehydrator,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&DehydratedQuiche), amount: crate::units::Kg(6.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Water), amount: crate::units::Kg(6.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Curry), amount: crate::units::Kg(1.200)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Polypropylene), amount: crate::units::Kg(12.000)},
],
time: crate::units::Duration(250.000),
temperature: crate::units::Temperature(2.000),
converter: &FoodDehydrator,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&DehydratedCurry), amount: crate::units::Kg(6.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Water), amount: crate::units::Kg(6.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&SpicyTofu), amount: crate::units::Kg(1.500)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Polypropylene), amount: crate::units::Kg(12.000)},
],
time: crate::units::Duration(250.000),
temperature: crate::units::Temperature(2.000),
converter: &FoodDehydrator,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&DehydratedSpicyTofu), amount: crate::units::Kg(6.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Water), amount: crate::units::Kg(6.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Burger), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Polypropylene), amount: crate::units::Kg(12.000)},
],
time: crate::units::Duration(250.000),
temperature: crate::units::Temperature(2.000),
converter: &FoodDehydrator,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&DehydratedFoodPackage), amount: crate::units::Kg(6.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Water), amount: crate::units::Kg(6.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&BerryPie), amount: crate::units::Kg(1.429)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Polypropylene), amount: crate::units::Kg(12.000)},
],
time: crate::units::Duration(250.000),
temperature: crate::units::Temperature(2.000),
converter: &FoodDehydrator,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&DehydratedBerryPie), amount: crate::units::Kg(6.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Water), amount: crate::units::Kg(6.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Diamond), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(80.000),
temperature: crate::units::Temperature(2.000),
converter: &FossilDig,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Fossil), amount: crate::units::Kg(100.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Sand), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &GlassForge,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&MoltenGlass), amount: crate::units::Kg(25.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&GrilledPrickleFruit), amount: crate::units::Kg(2.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&SpiceNut), amount: crate::units::Kg(2.000)},
],
time: crate::units::Duration(50.000),
temperature: crate::units::Temperature(2.000),
converter: &GourmetCookingStation,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Salsa), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&FriedMushroom), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Lettuce), amount: crate::units::Kg(4.000)},
],
time: crate::units::Duration(50.000),
temperature: crate::units::Temperature(2.000),
converter: &GourmetCookingStation,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&MushroomWrap), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&CookedMeat), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&CookedFish), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(50.000),
temperature: crate::units::Temperature(2.000),
converter: &GourmetCookingStation,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&SurfAndTurf), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&ColdWheatSeed), amount: crate::units::Kg(10.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&SpiceNut), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(50.000),
temperature: crate::units::Temperature(2.000),
converter: &GourmetCookingStation,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&SpiceBread), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&CookedEgg), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Lettuce), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&FriedMushroom), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(50.000),
temperature: crate::units::Temperature(2.000),
converter: &GourmetCookingStation,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Quiche), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&GingerConfig), amount: crate::units::Kg(4.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&BeanPlantSeed), amount: crate::units::Kg(4.000)},
],
time: crate::units::Duration(50.000),
temperature: crate::units::Temperature(2.000),
converter: &GourmetCookingStation,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Curry), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Tofu), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&SpiceNut), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(50.000),
temperature: crate::units::Temperature(2.000),
converter: &GourmetCookingStation,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&SpicyTofu), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&ColdWheatBread), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Lettuce), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&CookedMeat), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(50.000),
temperature: crate::units::Temperature(2.000),
converter: &GourmetCookingStation,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Burger), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&ColdWheatSeed), amount: crate::units::Kg(3.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&WormSuperFruit), amount: crate::units::Kg(4.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&GrilledPrickleFruit), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(50.000),
temperature: crate::units::Temperature(2.000),
converter: &GourmetCookingStation,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&BerryPie), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Carbon), amount: crate::units::Kg(125.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &Kiln,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&RefinedCarbon), amount: crate::units::Kg(100.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Clay), amount: crate::units::Kg(100.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Carbon), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &Kiln,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Ceramic), amount: crate::units::Kg(100.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&EnrichedUranium), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &ManualHighEnergyParticleSpawner,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&DepletedUranium), amount: crate::units::Kg(0.800)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&UraniumOre), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &ManualHighEnergyParticleSpawner,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&DepletedUranium), amount: crate::units::Kg(0.500)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&AluminumOre), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &MetalRefinery,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Aluminum), amount: crate::units::Kg(100.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Cobaltite), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &MetalRefinery,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Cobalt), amount: crate::units::Kg(100.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Cuprite), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &MetalRefinery,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Copper), amount: crate::units::Kg(100.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&GoldAmalgam), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &MetalRefinery,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Gold), amount: crate::units::Kg(100.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Iron), amount: crate::units::Kg(70.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&RefinedCarbon), amount: crate::units::Kg(20.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Lime), amount: crate::units::Kg(10.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &MetalRefinery,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Steel), amount: crate::units::Kg(100.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&IronOre), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &MetalRefinery,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Iron), amount: crate::units::Kg(100.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&TempConductorSolid), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &MetalRefinery,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Niobium), amount: crate::units::Kg(100.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Wolframite), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &MetalRefinery,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Tungsten), amount: crate::units::Kg(100.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Dirt), amount: crate::units::Kg(75.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Water), amount: crate::units::Kg(75.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &MicrobeMusher,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&MushBar), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&BasicPlantFood), amount: crate::units::Kg(2.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Water), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(50.000),
temperature: crate::units::Temperature(2.000),
converter: &MicrobeMusher,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&BasicPlantBar), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&BeanPlantSeed), amount: crate::units::Kg(6.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Water), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(50.000),
temperature: crate::units::Temperature(2.000),
converter: &MicrobeMusher,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Tofu), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&ColdWheatSeed), amount: crate::units::Kg(5.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&PrickleFruit), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(50.000),
temperature: crate::units::Temperature(2.000),
converter: &MicrobeMusher,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&FruitCake), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&BeanPlantSeed), amount: crate::units::Kg(2.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Water), amount: crate::units::Kg(18.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &MilkPress,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Milk), amount: crate::units::Kg(20.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&ColdWheatSeed), amount: crate::units::Kg(10.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Water), amount: crate::units::Kg(15.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &MilkPress,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Milk), amount: crate::units::Kg(20.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&SpiceNut), amount: crate::units::Kg(3.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Water), amount: crate::units::Kg(17.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &MilkPress,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Milk), amount: crate::units::Kg(20.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Aluminum), amount: crate::units::Kg(25.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Petroleum), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(80.000),
temperature: crate::units::Temperature(2.000),
converter: &MissileFabricator,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&MissileBasic), amount: crate::units::Kg(5.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Cobalt), amount: crate::units::Kg(25.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Petroleum), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(80.000),
temperature: crate::units::Temperature(2.000),
converter: &MissileFabricator,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&MissileBasic), amount: crate::units::Kg(5.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Copper), amount: crate::units::Kg(25.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Petroleum), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(80.000),
temperature: crate::units::Temperature(2.000),
converter: &MissileFabricator,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&MissileBasic), amount: crate::units::Kg(5.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Iron), amount: crate::units::Kg(25.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Petroleum), amount: crate::units::Kg(50.000)},
],
time: crate::units::Duration(80.000),
temperature: crate::units::Temperature(2.000),
converter: &MissileFabricator,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&MissileBasic), amount: crate::units::Kg(5.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Polypropylene), amount: crate::units::Kg(5.000)},
],
time: crate::units::Duration(33.000),
temperature: crate::units::Temperature(2.000),
converter: &OrbitalResearchCenter,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&OrbitalResearchDatabank), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&AluminumOre), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &RockCrusher,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Aluminum), amount: crate::units::Kg(50.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Sand), amount: crate::units::Kg(50.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&BabyCrabShell), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &RockCrusher,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Lime), amount: crate::units::Kg(5.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&BabyCrabWoodShell), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &RockCrusher,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&WoodLog), amount: crate::units::Kg(10.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Ceramic), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &RockCrusher,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Sand), amount: crate::units::Kg(100.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Cobaltite), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &RockCrusher,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Cobalt), amount: crate::units::Kg(50.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Sand), amount: crate::units::Kg(50.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&CrabShell), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &RockCrusher,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Lime), amount: crate::units::Kg(10.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&CrabWoodShell), amount: crate::units::Kg(5.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &RockCrusher,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&WoodLog), amount: crate::units::Kg(500.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Cuprite), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &RockCrusher,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Copper), amount: crate::units::Kg(50.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Sand), amount: crate::units::Kg(50.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&EggShell), amount: crate::units::Kg(5.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &RockCrusher,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Lime), amount: crate::units::Kg(5.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Fossil), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &RockCrusher,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Lime), amount: crate::units::Kg(5.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&SedimentaryRock), amount: crate::units::Kg(95.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Fullerene), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &RockCrusher,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Graphite), amount: crate::units::Kg(90.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Sand), amount: crate::units::Kg(10.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&GoldAmalgam), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &RockCrusher,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Gold), amount: crate::units::Kg(50.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Sand), amount: crate::units::Kg(50.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Granite), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &RockCrusher,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Sand), amount: crate::units::Kg(100.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&IgneousRock), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &RockCrusher,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Sand), amount: crate::units::Kg(100.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&IronOre), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &RockCrusher,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Iron), amount: crate::units::Kg(50.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Sand), amount: crate::units::Kg(50.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Obsidian), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &RockCrusher,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Sand), amount: crate::units::Kg(100.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Salt), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &RockCrusher,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&TableSalt), amount: crate::units::Kg(0.005)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Sand), amount: crate::units::Kg(99.995)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&SandStone), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &RockCrusher,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Sand), amount: crate::units::Kg(100.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&SedimentaryRock), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &RockCrusher,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Sand), amount: crate::units::Kg(100.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&SuperInsulator), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &RockCrusher,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Sand), amount: crate::units::Kg(100.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&TempConductorSolid), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &RockCrusher,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Niobium), amount: crate::units::Kg(50.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Sand), amount: crate::units::Kg(50.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Wolframite), amount: crate::units::Kg(100.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &RockCrusher,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Tungsten), amount: crate::units::Kg(50.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Sand), amount: crate::units::Kg(50.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Mud), amount: crate::units::Kg(150.000)},
],
time: crate::units::Duration(20.000),
temperature: crate::units::Temperature(2.000),
converter: &SludgePress,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Dirt), amount: crate::units::Kg(60.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Water), amount: crate::units::Kg(90.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&ToxicMud), amount: crate::units::Kg(150.000)},
],
time: crate::units::Duration(20.000),
temperature: crate::units::Temperature(2.000),
converter: &SludgePress,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&ToxicSand), amount: crate::units::Kg(60.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&DirtyWater), amount: crate::units::Kg(90.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Aluminum), amount: crate::units::Kg(300.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&BasicFabric), amount: crate::units::Kg(2.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &SuitFabricator,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Atmo_Suit), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Cobalt), amount: crate::units::Kg(300.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&BasicFabric), amount: crate::units::Kg(2.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &SuitFabricator,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Atmo_Suit), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Copper), amount: crate::units::Kg(300.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&BasicFabric), amount: crate::units::Kg(2.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &SuitFabricator,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Atmo_Suit), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Iron), amount: crate::units::Kg(300.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&BasicFabric), amount: crate::units::Kg(2.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &SuitFabricator,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Atmo_Suit), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Worn_Atmo_Suit), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&BasicFabric), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &SuitFabricator,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Atmo_Suit), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Steel), amount: crate::units::Kg(200.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Petroleum), amount: crate::units::Kg(25.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &SuitFabricator,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Jet_Suit), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Worn_Jet_Suit), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&BasicFabric), amount: crate::units::Kg(1.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &SuitFabricator,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Jet_Suit), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Lead), amount: crate::units::Kg(200.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Glass), amount: crate::units::Kg(10.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &SuitFabricator,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Lead_Suit), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Worn_Lead_Suit), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Glass), amount: crate::units::Kg(5.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &SuitFabricator,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Lead_Suit), amount: crate::units::Kg(1.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Fullerene), amount: crate::units::Kg(1.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Gold), amount: crate::units::Kg(49.500)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Petroleum), amount: crate::units::Kg(49.500)},
],
time: crate::units::Duration(80.000),
temperature: crate::units::Temperature(2.000),
converter: &SupermaterialRefinery,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&SuperCoolant), amount: crate::units::Kg(100.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Graphite), amount: crate::units::Kg(90.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Sulfur), amount: crate::units::Kg(5.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Aluminum), amount: crate::units::Kg(5.000)},
],
time: crate::units::Duration(80.000),
temperature: crate::units::Temperature(2.000),
converter: &SupermaterialRefinery,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Fullerene), amount: crate::units::Kg(100.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Isoresin), amount: crate::units::Kg(15.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Katairite), amount: crate::units::Kg(80.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&BasicFabric), amount: crate::units::Kg(5.000)},
],
time: crate::units::Duration(80.000),
temperature: crate::units::Temperature(2.000),
converter: &SupermaterialRefinery,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&SuperInsulator), amount: crate::units::Kg(100.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Isoresin), amount: crate::units::Kg(35.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Petroleum), amount: crate::units::Kg(65.000)},
],
time: crate::units::Duration(80.000),
temperature: crate::units::Temperature(2.000),
converter: &SupermaterialRefinery,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&ViscoGel), amount: crate::units::Kg(100.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&Niobium), amount: crate::units::Kg(5.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Tungsten), amount: crate::units::Kg(95.000)},
],
time: crate::units::Duration(80.000),
temperature: crate::units::Temperature(2.000),
converter: &SupermaterialRefinery,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&TempConductorSolid), amount: crate::units::Kg(100.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&TempConductorSolid), amount: crate::units::Kg(15.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&Polypropylene), amount: crate::units::Kg(70.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&MilkFat), amount: crate::units::Kg(15.000)},
],
time: crate::units::Duration(80.000),
temperature: crate::units::Temperature(2.000),
converter: &SupermaterialRefinery,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&HardPolypropylene), amount: crate::units::Kg(100.000)},
],
}),
Recipe::Complex(Complex {
input: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&UraniumOre), amount: crate::units::Kg(10.000)},
],
time: crate::units::Duration(40.000),
temperature: crate::units::Temperature(2.000),
converter: &UraniumCentrifuge,
output: &[
EntityOrTagAmount{entity: EntityOrTag::Entity(&EnrichedUranium), amount: crate::units::Kg(2.000)},
EntityOrTagAmount{entity: EntityOrTag::Entity(&MoltenUranium), amount: crate::units::Kg(8.000)},
],
}),
Recipe::Phase(Phase {
input: &RawEgg,
temp: crate::units::Temperature(344.150),
type_of: PhaseType::Cooking,
output: &[
EntityPercent{entity: &CookedEgg, percent: crate::units::Percent(1.000)},
]
}),
Recipe::Birth(Birth {
input: &SquirrelEgg,
time: crate::units::Duration(12000.000),
output: &[
EntityAmount{entity: &EggShell, amount: crate::units::Kg(1.000)},
EntityAmount{entity: &SquirrelBaby, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Egg(Egg {
input: &Squirrel,
time: crate::units::Duration(36000.000),
output: &[
EntityPercent{entity: &SquirrelEgg, percent: crate::units::Percent(0.98)},
EntityPercent{entity: &SquirrelHugEgg, percent: crate::units::Percent(0.02)},
]
}),
Recipe::Death(Death {
input: &Squirrel,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Birth(Birth {
input: &SquirrelHugEgg,
time: crate::units::Duration(12000.000),
output: &[
EntityAmount{entity: &EggShell, amount: crate::units::Kg(1.000)},
EntityAmount{entity: &SquirrelHugBaby, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Egg(Egg {
input: &SquirrelHug,
time: crate::units::Duration(36000.000),
output: &[
EntityPercent{entity: &SquirrelEgg, percent: crate::units::Percent(0.35)},
EntityPercent{entity: &SquirrelHugEgg, percent: crate::units::Percent(0.65)},
]
}),
Recipe::Death(Death {
input: &SquirrelHug,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Birth(Birth {
input: &StaterpillarEgg,
time: crate::units::Duration(12000.000),
output: &[
EntityAmount{entity: &EggShell, amount: crate::units::Kg(1.000)},
EntityAmount{entity: &StaterpillarBaby, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Egg(Egg {
input: &Staterpillar,
time: crate::units::Duration(36000.000),
output: &[
EntityPercent{entity: &StaterpillarEgg, percent: crate::units::Percent(0.9607844)},
EntityPercent{entity: &StaterpillarGasEgg, percent: crate::units::Percent(0.01960784)},
EntityPercent{entity: &StaterpillarLiquidEgg, percent: crate::units::Percent(0.01960784)},
]
}),
Recipe::Death(Death {
input: &Staterpillar,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(2.000)},
]
}),
Recipe::Birth(Birth {
input: &StaterpillarLiquidEgg,
time: crate::units::Duration(12000.000),
output: &[
EntityAmount{entity: &EggShell, amount: crate::units::Kg(1.000)},
EntityAmount{entity: &StaterpillarLiquidBaby, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Egg(Egg {
input: &StaterpillarLiquid,
time: crate::units::Duration(36000.000),
output: &[
EntityPercent{entity: &StaterpillarEgg, percent: crate::units::Percent(0.32)},
EntityPercent{entity: &StaterpillarGasEgg, percent: crate::units::Percent(0.02)},
EntityPercent{entity: &StaterpillarLiquidEgg, percent: crate::units::Percent(0.66)},
]
}),
Recipe::Death(Death {
input: &StaterpillarLiquid,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(2.000)},
]
}),
Recipe::Irrigation(Irrigation {
input: &[
EntityAmount{entity: &DirtyWater, amount: crate::units::Kg(0.267)},
],
output: &BasicFabricPlant,
}),
Recipe::Harvest(Harvest {
input: &BasicFabricPlant,
time: crate::units::Duration(1200.000),
output: &[
EntityAmount{entity: &BasicFabric, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Seeds(Seeds {
input: &BasicFabricPlant,
time: crate::units::Duration(1.000),
output: &[
EntityAmount{entity: &BasicFabricMaterialPlantSeed, amount: crate::units::Kg(0.000)},
]
}),
Recipe::Harvest(Harvest {
input: &BasicForagePlantPlanted,
time: crate::units::Duration(1.000),
output: &[
EntityAmount{entity: &BasicForagePlant, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Fertilization(Fertilization {
input: &[
EntityAmount{entity: &Dirt, amount: crate::units::Kg(0.017)},
],
output: &BasicSingleHarvestPlant,
}),
Recipe::Harvest(Harvest {
input: &BasicSingleHarvestPlant,
time: crate::units::Duration(1800.000),
output: &[
EntityAmount{entity: &BasicPlantFood, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Seeds(Seeds {
input: &BasicSingleHarvestPlant,
time: crate::units::Duration(1.000),
output: &[
EntityAmount{entity: &BasicSingleHarvestPlantSeed, amount: crate::units::Kg(0.000)},
]
}),
Recipe::Irrigation(Irrigation {
input: &[
EntityAmount{entity: &Ethanol, amount: crate::units::Kg(0.033)},
],
output: &BeanPlant,
}),
Recipe::Fertilization(Fertilization {
input: &[
EntityAmount{entity: &Dirt, amount: crate::units::Kg(0.008)},
],
output: &BeanPlant,
}),
Recipe::Harvest(Harvest {
input: &BeanPlant,
time: crate::units::Duration(12600.000),
output: &[
EntityAmount{entity: &BeanPlantSeed, amount: crate::units::Kg(12.000)},
]
}),
Recipe::Harvest(Harvest {
input: &BeanPlant,
time: crate::units::Duration(1.000),
output: &[
EntityAmount{entity: &BeanPlantSeed, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Harvest(Harvest {
input: &CactusPlant,
time: crate::units::Duration(1.000),
output: &[
EntityAmount{entity: &CactusPlantSeed, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Fertilization(Fertilization {
input: &[
EntityAmount{entity: &Phosphorite, amount: crate::units::Kg(0.007)},
],
output: &ColdBreather,
}),
Recipe::Harvest(Harvest {
input: &ColdBreather,
time: crate::units::Duration(1.000),
output: &[
EntityAmount{entity: &ColdBreatherSeed, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Fertilization(Fertilization {
input: &[
EntityAmount{entity: &Dirt, amount: crate::units::Kg(0.008)},
],
output: &ColdWheat,
}),
Recipe::Irrigation(Irrigation {
input: &[
EntityAmount{entity: &Water, amount: crate::units::Kg(0.033)},
],
output: &ColdWheat,
}),
Recipe::Harvest(Harvest {
input: &ColdWheat,
time: crate::units::Duration(10800.000),
output: &[
EntityAmount{entity: &ColdWheatSeed, amount: crate::units::Kg(18.000)},
]
}),
Recipe::Harvest(Harvest {
input: &ColdWheat,
time: crate::units::Duration(1.000),
output: &[
EntityAmount{entity: &ColdWheatSeed, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Irrigation(Irrigation {
input: &[
EntityAmount{entity: &DirtyWater, amount: crate::units::Kg(0.017)},
],
output: &CritterTrapPlant,
}),
Recipe::Harvest(Harvest {
input: &CritterTrapPlant,
time: crate::units::Duration(18000.000),
output: &[
EntityAmount{entity: &PlantMeat, amount: crate::units::Kg(10.000)},
]
}),
Recipe::Harvest(Harvest {
input: &CritterTrapPlant,
time: crate::units::Duration(1.000),
output: &[
EntityAmount{entity: &CritterTrapPlantSeed, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Harvest(Harvest {
input: &Cylindrica,
time: crate::units::Duration(1.000),
output: &[
EntityAmount{entity: &CylindricaSeed, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Harvest(Harvest {
input: &EvilFlower,
time: crate::units::Duration(1.000),
output: &[
EntityAmount{entity: &EvilFlowerSeed, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Harvest(Harvest {
input: &ForestForagePlantPlanted,
time: crate::units::Duration(1.000),
output: &[
EntityAmount{entity: &ForestForagePlant, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Harvest(Harvest {
input: &BulbPlant,
time: crate::units::Duration(1.000),
output: &[
EntityAmount{entity: &BulbPlantSeed, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Irrigation(Irrigation {
input: &[
EntityAmount{entity: &DirtyWater, amount: crate::units::Kg(0.117)},
],
output: &ForestTree,
}),
Recipe::Fertilization(Fertilization {
input: &[
EntityAmount{entity: &Dirt, amount: crate::units::Kg(0.017)},
],
output: &ForestTree,
}),
Recipe::Harvest(Harvest {
input: &ForestTree,
time: crate::units::Duration(2700.000),
output: &[
EntityAmount{entity: &WoodLog, amount: crate::units::Kg(300.000)},
]
}),
Recipe::Harvest(Harvest {
input: &ForestTree,
time: crate::units::Duration(1.000),
output: &[
EntityAmount{entity: &ForestTreeSeed, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Birth(Birth {
input: &PuftEgg,
time: crate::units::Duration(9000.000),
output: &[
EntityAmount{entity: &EggShell, amount: crate::units::Kg(0.250)},
EntityAmount{entity: &PuftBaby, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Egg(Egg {
input: &Puft,
time: crate::units::Duration(27000.000),
output: &[
EntityPercent{entity: &PuftEgg, percent: crate::units::Percent(0.9423078)},
EntityPercent{entity: &PuftAlphaEgg, percent: crate::units::Percent(0.01923077)},
EntityPercent{entity: &PuftOxyliteEgg, percent: crate::units::Percent(0.01923077)},
EntityPercent{entity: &PuftBleachstoneEgg, percent: crate::units::Percent(0.01923077)},
]
}),
Recipe::Death(Death {
input: &Puft,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Birth(Birth {
input: &DreckoEgg,
time: crate::units::Duration(18000.000),
output: &[
EntityAmount{entity: &EggShell, amount: crate::units::Kg(1.000)},
EntityAmount{entity: &DreckoBaby, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Egg(Egg {
input: &Drecko,
time: crate::units::Duration(54000.000),
output: &[
EntityPercent{entity: &DreckoEgg, percent: crate::units::Percent(0.98)},
EntityPercent{entity: &DreckoPlasticEgg, percent: crate::units::Percent(0.02)},
]
}),
Recipe::Death(Death {
input: &Drecko,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(2.000)},
]
}),
Recipe::Birth(Birth {
input: &DreckoPlasticEgg,
time: crate::units::Duration(18000.000),
output: &[
EntityAmount{entity: &EggShell, amount: crate::units::Kg(1.000)},
EntityAmount{entity: &DreckoPlasticBaby, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Egg(Egg {
input: &DreckoPlastic,
time: crate::units::Duration(54000.000),
output: &[
EntityPercent{entity: &DreckoEgg, percent: crate::units::Percent(0.35)},
EntityPercent{entity: &DreckoPlasticEgg, percent: crate::units::Percent(0.65)},
]
}),
Recipe::Death(Death {
input: &DreckoPlastic,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(2.000)},
]
}),
Recipe::Birth(Birth {
input: &LightBugBlackEgg,
time: crate::units::Duration(9000.000),
output: &[
EntityAmount{entity: &EggShell, amount: crate::units::Kg(0.100)},
EntityAmount{entity: &LightBugBlackBaby, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Egg(Egg {
input: &LightBugBlack,
time: crate::units::Duration(27000.000),
output: &[
EntityPercent{entity: &LightBugBlueEgg, percent: crate::units::Percent(0.3267327)},
EntityPercent{entity: &LightBugBlackEgg, percent: crate::units::Percent(0.6534654)},
EntityPercent{entity: &LightBugCrystalEgg, percent: crate::units::Percent(0.01980198)},
]
}),
Recipe::Birth(Birth {
input: &LightBugBlueEgg,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &EggShell, amount: crate::units::Kg(0.100)},
EntityAmount{entity: &LightBugBlueBaby, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Egg(Egg {
input: &LightBugBlue,
time: crate::units::Duration(9000.001),
output: &[
EntityPercent{entity: &LightBugPinkEgg, percent: crate::units::Percent(0.3267327)},
EntityPercent{entity: &LightBugBlueEgg, percent: crate::units::Percent(0.6534654)},
EntityPercent{entity: &LightBugBlackEgg, percent: crate::units::Percent(0.01980198)},
]
}),
Recipe::Birth(Birth {
input: &LightBugEgg,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &EggShell, amount: crate::units::Kg(0.100)},
EntityAmount{entity: &LightBugBaby, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Egg(Egg {
input: &LightBug,
time: crate::units::Duration(9000.001),
output: &[
EntityPercent{entity: &LightBugEgg, percent: crate::units::Percent(0.98)},
EntityPercent{entity: &LightBugOrangeEgg, percent: crate::units::Percent(0.02)},
]
}),
Recipe::Birth(Birth {
input: &PuftOxyliteEgg,
time: crate::units::Duration(9000.000),
output: &[
EntityAmount{entity: &EggShell, amount: crate::units::Kg(0.250)},
EntityAmount{entity: &PuftOxyliteBaby, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Egg(Egg {
input: &PuftOxylite,
time: crate::units::Duration(27000.000),
output: &[
EntityPercent{entity: &PuftEgg, percent: crate::units::Percent(0.31)},
EntityPercent{entity: &PuftAlphaEgg, percent: crate::units::Percent(0.02)},
EntityPercent{entity: &PuftOxyliteEgg, percent: crate::units::Percent(0.67)},
]
}),
Recipe::Death(Death {
input: &PuftOxylite,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Birth(Birth {
input: &LightBugCrystalEgg,
time: crate::units::Duration(9000.000),
output: &[
EntityAmount{entity: &EggShell, amount: crate::units::Kg(0.100)},
EntityAmount{entity: &LightBugCrystalBaby, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Egg(Egg {
input: &LightBugCrystal,
time: crate::units::Duration(27000.000),
output: &[
EntityPercent{entity: &LightBugCrystalEgg, percent: crate::units::Percent(0.98)},
EntityPercent{entity: &LightBugEgg, percent: crate::units::Percent(0.02)},
]
}),
Recipe::Birth(Birth {
input: &LightBugPinkEgg,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &EggShell, amount: crate::units::Kg(0.100)},
EntityAmount{entity: &LightBugPinkBaby, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Egg(Egg {
input: &LightBugPink,
time: crate::units::Duration(9000.001),
output: &[
EntityPercent{entity: &LightBugPurpleEgg, percent: crate::units::Percent(0.3267327)},
EntityPercent{entity: &LightBugPinkEgg, percent: crate::units::Percent(0.6534654)},
EntityPercent{entity: &LightBugBlueEgg, percent: crate::units::Percent(0.01980198)},
]
}),
Recipe::Birth(Birth {
input: &LightBugPurpleEgg,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &EggShell, amount: crate::units::Kg(0.100)},
EntityAmount{entity: &LightBugPurpleBaby, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Egg(Egg {
input: &LightBugPurple,
time: crate::units::Duration(9000.001),
output: &[
EntityPercent{entity: &LightBugOrangeEgg, percent: crate::units::Percent(0.3267327)},
EntityPercent{entity: &LightBugPurpleEgg, percent: crate::units::Percent(0.6534654)},
EntityPercent{entity: &LightBugPinkEgg, percent: crate::units::Percent(0.01980198)},
]
}),
Recipe::Birth(Birth {
input: &MoleEgg,
time: crate::units::Duration(12000.000),
output: &[
EntityAmount{entity: &EggShell, amount: crate::units::Kg(1.000)},
EntityAmount{entity: &MoleBaby, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Egg(Egg {
input: &Mole,
time: crate::units::Duration(36000.000),
output: &[
EntityPercent{entity: &MoleEgg, percent: crate::units::Percent(0.98)},
EntityPercent{entity: &MoleDelicacyEgg, percent: crate::units::Percent(0.02)},
]
}),
Recipe::Death(Death {
input: &Mole,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(10.000)},
]
}),
Recipe::Birth(Birth {
input: &MoleDelicacyEgg,
time: crate::units::Duration(12000.000),
output: &[
EntityAmount{entity: &EggShell, amount: crate::units::Kg(1.000)},
EntityAmount{entity: &MoleDelicacyBaby, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Egg(Egg {
input: &MoleDelicacy,
time: crate::units::Duration(36000.000),
output: &[
EntityPercent{entity: &MoleEgg, percent: crate::units::Percent(0.3298969)},
EntityPercent{entity: &MoleDelicacyEgg, percent: crate::units::Percent(0.6701031)},
]
}),
Recipe::Death(Death {
input: &MoleDelicacy,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(5.000)},
]
}),
Recipe::Death(Death {
input: &Moo,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(10.000)},
]
}),
Recipe::Birth(Birth {
input: &OilfloaterEgg,
time: crate::units::Duration(12000.000),
output: &[
EntityAmount{entity: &EggShell, amount: crate::units::Kg(1.000)},
EntityAmount{entity: &OilfloaterBaby, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Egg(Egg {
input: &Oilfloater,
time: crate::units::Duration(36000.000),
output: &[
EntityPercent{entity: &OilfloaterEgg, percent: crate::units::Percent(0.9607844)},
EntityPercent{entity: &OilfloaterHighTempEgg, percent: crate::units::Percent(0.01960784)},
EntityPercent{entity: &OilfloaterDecorEgg, percent: crate::units::Percent(0.01960784)},
]
}),
Recipe::Death(Death {
input: &Oilfloater,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(2.000)},
]
}),
Recipe::Birth(Birth {
input: &OilfloaterDecorEgg,
time: crate::units::Duration(18000.000),
output: &[
EntityAmount{entity: &EggShell, amount: crate::units::Kg(1.000)},
EntityAmount{entity: &OilfloaterDecorBaby, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Egg(Egg {
input: &OilfloaterDecor,
time: crate::units::Duration(54000.000),
output: &[
EntityPercent{entity: &OilfloaterEgg, percent: crate::units::Percent(0.3267327)},
EntityPercent{entity: &OilfloaterHighTempEgg, percent: crate::units::Percent(0.01980198)},
EntityPercent{entity: &OilfloaterDecorEgg, percent: crate::units::Percent(0.6534654)},
]
}),
Recipe::Death(Death {
input: &OilfloaterDecor,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(2.000)},
]
}),
Recipe::Birth(Birth {
input: &OilfloaterHighTempEgg,
time: crate::units::Duration(12000.000),
output: &[
EntityAmount{entity: &EggShell, amount: crate::units::Kg(1.000)},
EntityAmount{entity: &OilfloaterHighTempBaby, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Egg(Egg {
input: &OilfloaterHighTemp,
time: crate::units::Duration(36000.000),
output: &[
EntityPercent{entity: &OilfloaterEgg, percent: crate::units::Percent(0.3267327)},
EntityPercent{entity: &OilfloaterHighTempEgg, percent: crate::units::Percent(0.6534654)},
EntityPercent{entity: &OilfloaterDecorEgg, percent: crate::units::Percent(0.01980198)},
]
}),
Recipe::Death(Death {
input: &OilfloaterHighTemp,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(2.000)},
]
}),
Recipe::Birth(Birth {
input: &PuftAlphaEgg,
time: crate::units::Duration(9000.000),
output: &[
EntityAmount{entity: &EggShell, amount: crate::units::Kg(0.250)},
EntityAmount{entity: &PuftAlphaBaby, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Egg(Egg {
input: &PuftAlpha,
time: crate::units::Duration(27000.000),
output: &[
EntityPercent{entity: &PuftEgg, percent: crate::units::Percent(0.98)},
EntityPercent{entity: &PuftAlphaEgg, percent: crate::units::Percent(0.02)},
]
}),
Recipe::Death(Death {
input: &PuftAlpha,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Birth(Birth {
input: &PuftBleachstoneEgg,
time: crate::units::Duration(9000.000),
output: &[
EntityAmount{entity: &EggShell, amount: crate::units::Kg(0.250)},
EntityAmount{entity: &PuftBleachstoneBaby, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Egg(Egg {
input: &PuftBleachstone,
time: crate::units::Duration(27000.000),
output: &[
EntityPercent{entity: &PuftEgg, percent: crate::units::Percent(0.31)},
EntityPercent{entity: &PuftAlphaEgg, percent: crate::units::Percent(0.02)},
EntityPercent{entity: &PuftBleachstoneEgg, percent: crate::units::Percent(0.67)},
]
}),
Recipe::Death(Death {
input: &PuftBleachstone,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Birth(Birth {
input: &LightBugOrangeEgg,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &EggShell, amount: crate::units::Kg(0.100)},
EntityAmount{entity: &LightBugOrangeBaby, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Egg(Egg {
input: &LightBugOrange,
time: crate::units::Duration(9000.001),
output: &[
EntityPercent{entity: &LightBugEgg, percent: crate::units::Percent(0.3267327)},
EntityPercent{entity: &LightBugOrangeEgg, percent: crate::units::Percent(0.6534654)},
EntityPercent{entity: &LightBugPurpleEgg, percent: crate::units::Percent(0.01980198)},
]
}),
Recipe::Irrigation(Irrigation {
input: &[
EntityAmount{entity: &Chlorine, amount: crate::units::Kg(0.001)},
],
output: &GasGrass,
}),
Recipe::Fertilization(Fertilization {
input: &[
EntityAmount{entity: &Dirt, amount: crate::units::Kg(0.042)},
],
output: &GasGrass,
}),
Recipe::Harvest(Harvest {
input: &GasGrass,
time: crate::units::Duration(2400.000),
output: &[
EntityAmount{entity: &GasGrassHarvested, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Seeds(Seeds {
input: &GasGrass,
time: crate::units::Duration(1.000),
output: &[
EntityAmount{entity: &GasGrassSeed, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Birth(Birth {
input: &StaterpillarGasEgg,
time: crate::units::Duration(12000.000),
output: &[
EntityAmount{entity: &EggShell, amount: crate::units::Kg(1.000)},
EntityAmount{entity: &StaterpillarGasBaby, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Egg(Egg {
input: &StaterpillarGas,
time: crate::units::Duration(36000.000),
output: &[
EntityPercent{entity: &StaterpillarEgg, percent: crate::units::Percent(0.32)},
EntityPercent{entity: &StaterpillarGasEgg, percent: crate::units::Percent(0.66)},
EntityPercent{entity: &StaterpillarLiquidEgg, percent: crate::units::Percent(0.02)},
]
}),
Recipe::Death(Death {
input: &StaterpillarGas,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(2.000)},
]
}),
Recipe::Harvest(Harvest {
input: &PrickleGrass,
time: crate::units::Duration(1.000),
output: &[
EntityAmount{entity: &PrickleGrassSeed, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Fertilization(Fertilization {
input: &[
EntityAmount{entity: &Sand, amount: crate::units::Kg(0.012)},
],
output: &SaltPlant,
}),
Recipe::Harvest(Harvest {
input: &SaltPlant,
time: crate::units::Duration(3600.000),
output: &[
EntityAmount{entity: &Salt, amount: crate::units::Kg(65.000)},
]
}),
Recipe::Seeds(Seeds {
input: &SaltPlant,
time: crate::units::Duration(1.000),
output: &[
EntityAmount{entity: &SaltPlantSeed, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Irrigation(Irrigation {
input: &[
EntityAmount{entity: &Water, amount: crate::units::Kg(0.033)},
],
output: &PrickleFlower,
}),
Recipe::Harvest(Harvest {
input: &PrickleFlower,
time: crate::units::Duration(3600.000),
output: &[
EntityAmount{entity: &PrickleFruit, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Seeds(Seeds {
input: &PrickleFlower,
time: crate::units::Duration(1.000),
output: &[
EntityAmount{entity: &PrickleFlowerSeed, amount: crate::units::Kg(0.000)},
]
}),
Recipe::Irrigation(Irrigation {
input: &[
EntityAmount{entity: &SaltWater, amount: crate::units::Kg(0.008)},
],
output: &SeaLettuce,
}),
Recipe::Fertilization(Fertilization {
input: &[
EntityAmount{entity: &BleachStone, amount: crate::units::Kg(0.001)},
],
output: &SeaLettuce,
}),
Recipe::Harvest(Harvest {
input: &SeaLettuce,
time: crate::units::Duration(7200.000),
output: &[
EntityAmount{entity: &Lettuce, amount: crate::units::Kg(12.000)},
]
}),
Recipe::Seeds(Seeds {
input: &SeaLettuce,
time: crate::units::Duration(1.000),
output: &[
EntityAmount{entity: &SeaLettuceSeed, amount: crate::units::Kg(0.000)},
]
}),
Recipe::Irrigation(Irrigation {
input: &[
EntityAmount{entity: &DirtyWater, amount: crate::units::Kg(0.058)},
],
output: &SpiceVine,
}),
Recipe::Fertilization(Fertilization {
input: &[
EntityAmount{entity: &Phosphorite, amount: crate::units::Kg(0.002)},
],
output: &SpiceVine,
}),
Recipe::Harvest(Harvest {
input: &SpiceVine,
time: crate::units::Duration(4800.000),
output: &[
EntityAmount{entity: &SpiceNut, amount: crate::units::Kg(4.000)},
]
}),
Recipe::Seeds(Seeds {
input: &SpiceVine,
time: crate::units::Duration(1.000),
output: &[
EntityAmount{entity: &SpiceVineSeed, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Irrigation(Irrigation {
input: &[
EntityAmount{entity: &Water, amount: crate::units::Kg(0.032)},
],
output: &Oxyfern,
}),
Recipe::Fertilization(Fertilization {
input: &[
EntityAmount{entity: &Dirt, amount: crate::units::Kg(0.007)},
],
output: &Oxyfern,
}),
Recipe::Harvest(Harvest {
input: &Oxyfern,
time: crate::units::Duration(1.000),
output: &[
EntityAmount{entity: &OxyfernSeed, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Fertilization(Fertilization {
input: &[
EntityAmount{entity: &Sulfur, amount: crate::units::Kg(0.017)},
],
output: &SuperWormPlant,
}),
Recipe::Harvest(Harvest {
input: &SuperWormPlant,
time: crate::units::Duration(4800.000),
output: &[
EntityAmount{entity: &WormSuperFruit, amount: crate::units::Kg(8.000)},
]
}),
Recipe::Seeds(Seeds {
input: &SuperWormPlant,
time: crate::units::Duration(1.000),
output: &[
EntityAmount{entity: &WormPlantSeed, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Harvest(Harvest {
input: &SwampForagePlantPlanted,
time: crate::units::Duration(1.000),
output: &[
EntityAmount{entity: &SwampForagePlant, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Irrigation(Irrigation {
input: &[
EntityAmount{entity: &DirtyWater, amount: crate::units::Kg(0.067)},
],
output: &SwampHarvestPlant,
}),
Recipe::Harvest(Harvest {
input: &SwampHarvestPlant,
time: crate::units::Duration(3960.000),
output: &[
EntityAmount{entity: &SwampFruit, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Seeds(Seeds {
input: &SwampHarvestPlant,
time: crate::units::Duration(1.000),
output: &[
EntityAmount{entity: &SwampHarvestPlantSeed, amount: crate::units::Kg(0.000)},
]
}),
Recipe::Harvest(Harvest {
input: &SwampLily,
time: crate::units::Duration(7200.000),
output: &[
EntityAmount{entity: &SwampLilyFlower, amount: crate::units::Kg(2.000)},
]
}),
Recipe::Seeds(Seeds {
input: &SwampLily,
time: crate::units::Duration(1.000),
output: &[
EntityAmount{entity: &SwampLilySeed, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Harvest(Harvest {
input: &WineCups,
time: crate::units::Duration(1.000),
output: &[
EntityAmount{entity: &WineCupsSeed, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Harvest(Harvest {
input: &ToePlant,
time: crate::units::Duration(1.000),
output: &[
EntityAmount{entity: &ToePlantSeed, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Fertilization(Fertilization {
input: &[
EntityAmount{entity: &Sulfur, amount: crate::units::Kg(0.017)},
],
output: &WormPlant,
}),
Recipe::Harvest(Harvest {
input: &WormPlant,
time: crate::units::Duration(2400.000),
output: &[
EntityAmount{entity: &WormBasicFruit, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Seeds(Seeds {
input: &WormPlant,
time: crate::units::Duration(1.000),
output: &[
EntityAmount{entity: &WormPlantSeed, amount: crate::units::Kg(0.000)},
]
}),
Recipe::Harvest(Harvest {
input: &LeafyPlant,
time: crate::units::Duration(1.000),
output: &[
EntityAmount{entity: &LeafyPlantSeed, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Fertilization(Fertilization {
input: &[
EntityAmount{entity: &SlimeMold, amount: crate::units::Kg(0.007)},
],
output: &MushroomPlant,
}),
Recipe::Harvest(Harvest {
input: &MushroomPlant,
time: crate::units::Duration(4500.000),
output: &[
EntityAmount{entity: &Mushroom, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Seeds(Seeds {
input: &MushroomPlant,
time: crate::units::Duration(1.000),
output: &[
EntityAmount{entity: &MushroomSeed, amount: crate::units::Kg(0.000)},
]
}),
Recipe::Birth(Birth {
input: &HatchVeggieEgg,
time: crate::units::Duration(12000.000),
output: &[
EntityAmount{entity: &EggShell, amount: crate::units::Kg(1.000)},
EntityAmount{entity: &HatchVeggieBaby, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Egg(Egg {
input: &HatchVeggie,
time: crate::units::Duration(36000.000),
output: &[
EntityPercent{entity: &HatchEgg, percent: crate::units::Percent(0.33)},
EntityPercent{entity: &HatchVeggieEgg, percent: crate::units::Percent(0.67)},
]
}),
Recipe::Death(Death {
input: &HatchVeggie,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(2.000)},
]
}),
Recipe::Birth(Birth {
input: &HatchEgg,
time: crate::units::Duration(12000.000),
output: &[
EntityAmount{entity: &EggShell, amount: crate::units::Kg(1.000)},
EntityAmount{entity: &HatchBaby, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Egg(Egg {
input: &Hatch,
time: crate::units::Duration(36000.000),
output: &[
EntityPercent{entity: &HatchEgg, percent: crate::units::Percent(0.9607844)},
EntityPercent{entity: &HatchHardEgg, percent: crate::units::Percent(0.01960784)},
EntityPercent{entity: &HatchVeggieEgg, percent: crate::units::Percent(0.01960784)},
]
}),
Recipe::Death(Death {
input: &Hatch,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(2.000)},
]
}),
Recipe::Birth(Birth {
input: &CrabEgg,
time: crate::units::Duration(12000.000),
output: &[
EntityAmount{entity: &EggShell, amount: crate::units::Kg(1.000)},
EntityAmount{entity: &CrabBaby, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Egg(Egg {
input: &Crab,
time: crate::units::Duration(36000.000),
output: &[
EntityPercent{entity: &CrabEgg, percent: crate::units::Percent(0.97)},
EntityPercent{entity: &CrabWoodEgg, percent: crate::units::Percent(0.02)},
EntityPercent{entity: &CrabFreshWaterEgg, percent: crate::units::Percent(0.01)},
]
}),
Recipe::Death(Death {
input: &Crab,
output: &[
EntityAmount{entity: &CrabShell, amount: crate::units::Kg(10.000)},
]
}),
Recipe::Birth(Birth {
input: &CrabWoodEgg,
time: crate::units::Duration(12000.000),
output: &[
EntityAmount{entity: &EggShell, amount: crate::units::Kg(1.000)},
EntityAmount{entity: &CrabWoodBaby, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Egg(Egg {
input: &CrabWood,
time: crate::units::Duration(36000.000),
output: &[
EntityPercent{entity: &CrabEgg, percent: crate::units::Percent(0.3232323)},
EntityPercent{entity: &CrabWoodEgg, percent: crate::units::Percent(0.6565657)},
EntityPercent{entity: &CrabFreshWaterEgg, percent: crate::units::Percent(0.02020202)},
]
}),
Recipe::Death(Death {
input: &CrabWood,
output: &[
EntityAmount{entity: &CrabWoodShell, amount: crate::units::Kg(500.000)},
]
}),
Recipe::Birth(Birth {
input: &CrabFreshWaterEgg,
time: crate::units::Duration(12000.000),
output: &[
EntityAmount{entity: &EggShell, amount: crate::units::Kg(1.000)},
EntityAmount{entity: &CrabFreshWaterBaby, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Egg(Egg {
input: &CrabFreshWater,
time: crate::units::Duration(36000.000),
output: &[
EntityPercent{entity: &CrabEgg, percent: crate::units::Percent(0.3232323)},
EntityPercent{entity: &CrabWoodEgg, percent: crate::units::Percent(0.02020202)},
EntityPercent{entity: &CrabFreshWaterEgg, percent: crate::units::Percent(0.6565657)},
]
}),
Recipe::Death(Death {
input: &CrabFreshWater,
output: &[
EntityAmount{entity: &ShellfishMeat, amount: crate::units::Kg(4.000)},
]
}),
Recipe::Birth(Birth {
input: &PacuCleanerEgg,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &EggShell, amount: crate::units::Kg(2.000)},
EntityAmount{entity: &PacuCleanerBaby, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Egg(Egg {
input: &PacuCleaner,
time: crate::units::Duration(9000.001),
output: &[
EntityPercent{entity: &PacuEgg, percent: crate::units::Percent(0.3232323)},
EntityPercent{entity: &PacuCleanerEgg, percent: crate::units::Percent(0.6565657)},
EntityPercent{entity: &PacuTropicalEgg, percent: crate::units::Percent(0.02020202)},
]
}),
Recipe::Death(Death {
input: &PacuCleaner,
output: &[
EntityAmount{entity: &FishMeat, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Birth(Birth {
input: &DivergentBeetleEgg,
time: crate::units::Duration(9000.000),
output: &[
EntityAmount{entity: &EggShell, amount: crate::units::Kg(1.000)},
EntityAmount{entity: &DivergentBeetleBaby, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Egg(Egg {
input: &DivergentBeetle,
time: crate::units::Duration(27000.000),
output: &[
EntityPercent{entity: &DivergentBeetleEgg, percent: crate::units::Percent(0.98)},
EntityPercent{entity: &DivergentWormEgg, percent: crate::units::Percent(0.02)},
]
}),
Recipe::Death(Death {
input: &DivergentBeetle,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Birth(Birth {
input: &HatchHardEgg,
time: crate::units::Duration(12000.000),
output: &[
EntityAmount{entity: &EggShell, amount: crate::units::Kg(1.000)},
EntityAmount{entity: &HatchHardBaby, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Egg(Egg {
input: &HatchHard,
time: crate::units::Duration(36000.000),
output: &[
EntityPercent{entity: &HatchEgg, percent: crate::units::Percent(0.3232323)},
EntityPercent{entity: &HatchHardEgg, percent: crate::units::Percent(0.6565657)},
EntityPercent{entity: &HatchMetalEgg, percent: crate::units::Percent(0.02020202)},
]
}),
Recipe::Death(Death {
input: &HatchHard,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(2.000)},
]
}),
Recipe::Birth(Birth {
input: &PacuTropicalEgg,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &EggShell, amount: crate::units::Kg(2.000)},
EntityAmount{entity: &PacuTropicalBaby, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Egg(Egg {
input: &PacuTropical,
time: crate::units::Duration(9000.001),
output: &[
EntityPercent{entity: &PacuEgg, percent: crate::units::Percent(0.3232323)},
EntityPercent{entity: &PacuTropicalEgg, percent: crate::units::Percent(0.6565657)},
EntityPercent{entity: &PacuCleanerEgg, percent: crate::units::Percent(0.02020202)},
]
}),
Recipe::Death(Death {
input: &PacuTropical,
output: &[
EntityAmount{entity: &FishMeat, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Birth(Birth {
input: &DivergentWormEgg,
time: crate::units::Duration(18000.000),
output: &[
EntityAmount{entity: &EggShell, amount: crate::units::Kg(1.000)},
EntityAmount{entity: &DivergentWormBaby, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Egg(Egg {
input: &DivergentWorm,
time: crate::units::Duration(54000.000),
output: &[
EntityPercent{entity: &DivergentBeetleEgg, percent: crate::units::Percent(0.33)},
EntityPercent{entity: &DivergentWormEgg, percent: crate::units::Percent(0.67)},
]
}),
Recipe::Death(Death {
input: &DivergentWorm,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(3.000)},
]
}),
Recipe::Birth(Birth {
input: &HatchMetalEgg,
time: crate::units::Duration(12000.000),
output: &[
EntityAmount{entity: &EggShell, amount: crate::units::Kg(1.000)},
EntityAmount{entity: &HatchMetalBaby, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Egg(Egg {
input: &HatchMetal,
time: crate::units::Duration(36000.000),
output: &[
EntityPercent{entity: &HatchEgg, percent: crate::units::Percent(0.11)},
EntityPercent{entity: &HatchHardEgg, percent: crate::units::Percent(0.22)},
EntityPercent{entity: &HatchMetalEgg, percent: crate::units::Percent(0.67)},
]
}),
Recipe::Death(Death {
input: &HatchMetal,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(2.000)},
]
}),
Recipe::Birth(Birth {
input: &PacuEgg,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &EggShell, amount: crate::units::Kg(2.000)},
EntityAmount{entity: &PacuBaby, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Egg(Egg {
input: &Pacu,
time: crate::units::Duration(9000.001),
output: &[
EntityPercent{entity: &PacuEgg, percent: crate::units::Percent(0.9607844)},
EntityPercent{entity: &PacuTropicalEgg, percent: crate::units::Percent(0.01960784)},
EntityPercent{entity: &PacuCleanerEgg, percent: crate::units::Percent(0.01960784)},
]
}),
Recipe::Death(Death {
input: &Pacu,
output: &[
EntityAmount{entity: &FishMeat, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Adult(Adult {
input: &DreckoPlasticBaby,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &DreckoPlastic, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Death(Death {
input: &DreckoPlasticBaby,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(2.000)},
]
}),
Recipe::Adult(Adult {
input: &DivergentWormBaby,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &DivergentWorm, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Death(Death {
input: &DivergentWormBaby,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(3.000)},
]
}),
Recipe::Adult(Adult {
input: &BeeBaby,
time: crate::units::Duration(1200.000),
output: &[
EntityAmount{entity: &Bee, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Adult(Adult {
input: &DivergentBeetleBaby,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &DivergentBeetle, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Death(Death {
input: &DivergentBeetleBaby,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Adult(Adult {
input: &CrabFreshWaterBaby,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &CrabFreshWater, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Death(Death {
input: &CrabFreshWaterBaby,
output: &[
EntityAmount{entity: &ShellfishMeat, amount: crate::units::Kg(4.000)},
]
}),
Recipe::Adult(Adult {
input: &DreckoBaby,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &Drecko, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Death(Death {
input: &DreckoBaby,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(2.000)},
]
}),
Recipe::Adult(Adult {
input: &HatchBaby,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &Hatch, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Death(Death {
input: &HatchBaby,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(2.000)},
]
}),
Recipe::Adult(Adult {
input: &CrabWoodBaby,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &BabyCrabWoodShell, amount: crate::units::Kg(1.000)},
EntityAmount{entity: &CrabWood, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Death(Death {
input: &CrabWoodBaby,
output: &[
EntityAmount{entity: &BabyCrabWoodShell, amount: crate::units::Kg(50.000)},
]
}),
Recipe::Adult(Adult {
input: &CrabBaby,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &BabyCrabShell, amount: crate::units::Kg(1.000)},
EntityAmount{entity: &Crab, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Death(Death {
input: &CrabBaby,
output: &[
EntityAmount{entity: &BabyCrabShell, amount: crate::units::Kg(5.000)},
]
}),
Recipe::Adult(Adult {
input: &LightBugBaby,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &LightBug, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Adult(Adult {
input: &HatchMetalBaby,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &HatchMetal, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Death(Death {
input: &HatchMetalBaby,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(2.000)},
]
}),
Recipe::Adult(Adult {
input: &PuftOxyliteBaby,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &PuftOxylite, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Death(Death {
input: &PuftOxyliteBaby,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Adult(Adult {
input: &SquirrelHugBaby,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &SquirrelHug, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Death(Death {
input: &SquirrelHugBaby,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Adult(Adult {
input: &PuftBaby,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &Puft, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Death(Death {
input: &PuftBaby,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Adult(Adult {
input: &PuftBleachstoneBaby,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &PuftBleachstone, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Death(Death {
input: &PuftBleachstoneBaby,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Adult(Adult {
input: &StaterpillarBaby,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &Staterpillar, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Death(Death {
input: &StaterpillarBaby,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(2.000)},
]
}),
Recipe::Adult(Adult {
input: &PuftAlphaBaby,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &PuftAlpha, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Death(Death {
input: &PuftAlphaBaby,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Adult(Adult {
input: &PacuTropicalBaby,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &PacuTropical, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Death(Death {
input: &PacuTropicalBaby,
output: &[
EntityAmount{entity: &FishMeat, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Adult(Adult {
input: &PacuBaby,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &Pacu, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Death(Death {
input: &PacuBaby,
output: &[
EntityAmount{entity: &FishMeat, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Adult(Adult {
input: &PacuCleanerBaby,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &PacuCleaner, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Death(Death {
input: &PacuCleanerBaby,
output: &[
EntityAmount{entity: &FishMeat, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Adult(Adult {
input: &OilfloaterHighTempBaby,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &OilfloaterHighTemp, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Death(Death {
input: &OilfloaterHighTempBaby,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(2.000)},
]
}),
Recipe::Adult(Adult {
input: &StaterpillarGasBaby,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &StaterpillarGas, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Death(Death {
input: &StaterpillarGasBaby,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(2.000)},
]
}),
Recipe::Adult(Adult {
input: &OilfloaterDecorBaby,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &OilfloaterDecor, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Death(Death {
input: &OilfloaterDecorBaby,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(2.000)},
]
}),
Recipe::Adult(Adult {
input: &OilfloaterBaby,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &Oilfloater, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Death(Death {
input: &OilfloaterBaby,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(2.000)},
]
}),
Recipe::Adult(Adult {
input: &StaterpillarLiquidBaby,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &StaterpillarLiquid, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Death(Death {
input: &StaterpillarLiquidBaby,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(2.000)},
]
}),
Recipe::Adult(Adult {
input: &MoleDelicacyBaby,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &MoleDelicacy, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Death(Death {
input: &MoleDelicacyBaby,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(5.000)},
]
}),
Recipe::Adult(Adult {
input: &MoleBaby,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &Mole, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Death(Death {
input: &MoleBaby,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(10.000)},
]
}),
Recipe::Adult(Adult {
input: &LightBugPurpleBaby,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &LightBugPurple, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Adult(Adult {
input: &LightBugPinkBaby,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &LightBugPink, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Adult(Adult {
input: &LightBugOrangeBaby,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &LightBugOrange, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Adult(Adult {
input: &LightBugCrystalBaby,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &LightBugCrystal, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Adult(Adult {
input: &LightBugBlueBaby,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &LightBugBlue, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Adult(Adult {
input: &LightBugBlackBaby,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &LightBugBlack, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Adult(Adult {
input: &HatchVeggieBaby,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &HatchVeggie, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Death(Death {
input: &HatchVeggieBaby,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(2.000)},
]
}),
Recipe::Adult(Adult {
input: &HatchHardBaby,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &HatchHard, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Death(Death {
input: &HatchHardBaby,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(2.000)},
]
}),
Recipe::Adult(Adult {
input: &SquirrelBaby,
time: crate::units::Duration(3000.000),
output: &[
EntityAmount{entity: &Squirrel, amount: crate::units::Kg(1.000)},
]
}),
Recipe::Death(Death {
input: &SquirrelBaby,
output: &[
EntityAmount{entity: &Meat, amount: crate::units::Kg(1.000)},
]
}),
];}
